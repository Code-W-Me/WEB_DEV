import { BulkRequest, BulkSearchResponse, GeocodeResponse, GeocodeResponseEnvelopePropertiesV2, GeocodingLayer, GeocodingSource, LayerId, SourceId } from '../models/index';
/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.
 *
 * The version of the OpenAPI document: 10.0.1
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from "../runtime";
export interface AutocompleteRequest {
    text: string;
    focusPointLat?: number;
    focusPointLon?: number;
    boundaryRectMinLat?: number;
    boundaryRectMaxLat?: number;
    boundaryRectMinLon?: number;
    boundaryRectMaxLon?: number;
    boundaryCircleLat?: number;
    boundaryCircleLon?: number;
    boundaryCircleRadius?: number;
    boundaryCountry?: Array<string>;
    boundaryGid?: string;
    layers?: Array<GeocodingLayer>;
    sources?: Array<GeocodingSource>;
    size?: number;
    lang?: string;
}
export interface AutocompleteV2Request {
    text: string;
    focusPointLat?: number;
    focusPointLon?: number;
    layers?: Array<LayerId>;
    sources?: Array<SourceId>;
    boundaryGid?: string;
    boundaryCountry?: Array<string>;
    boundaryRectMinLat?: number;
    boundaryRectMinLon?: number;
    boundaryRectMaxLat?: number;
    boundaryRectMaxLon?: number;
    boundaryCircleLat?: number;
    boundaryCircleLon?: number;
    boundaryCircleRadius?: number;
    size?: number;
    lang?: string;
}
export interface PlaceDetailsRequest {
    ids: Array<string>;
    lang?: string;
}
export interface PlaceDetailsV2Request {
    ids: Array<string>;
    lang?: string;
}
export interface ReverseRequest {
    pointLat: number;
    pointLon: number;
    boundaryCircleRadius?: number;
    layers?: Array<GeocodingLayer>;
    sources?: Array<GeocodingSource>;
    boundaryCountry?: Array<string>;
    boundaryGid?: string;
    size?: number;
    lang?: string;
}
export interface ReverseV2Request {
    pointLat: number;
    pointLon: number;
    layers?: Array<LayerId>;
    sources?: Array<SourceId>;
    boundaryGid?: string;
    boundaryCountry?: Array<string>;
    boundaryCircleRadius?: number;
    size?: number;
    lang?: string;
}
export interface SearchRequest {
    text: string;
    focusPointLat?: number;
    focusPointLon?: number;
    boundaryRectMinLat?: number;
    boundaryRectMaxLat?: number;
    boundaryRectMinLon?: number;
    boundaryRectMaxLon?: number;
    boundaryCircleLat?: number;
    boundaryCircleLon?: number;
    boundaryCircleRadius?: number;
    boundaryCountry?: Array<string>;
    boundaryGid?: string;
    layers?: Array<GeocodingLayer>;
    sources?: Array<GeocodingSource>;
    size?: number;
    lang?: string;
}
export interface SearchBulkRequest {
    bulkRequest?: Array<BulkRequest>;
}
export interface SearchStructuredRequest {
    address?: string;
    neighbourhood?: string;
    borough?: string;
    locality?: string;
    county?: string;
    region?: string;
    postalcode?: string;
    country?: string;
    focusPointLat?: number;
    focusPointLon?: number;
    boundaryRectMinLat?: number;
    boundaryRectMaxLat?: number;
    boundaryRectMinLon?: number;
    boundaryRectMaxLon?: number;
    boundaryCircleLat?: number;
    boundaryCircleLon?: number;
    boundaryCircleRadius?: number;
    boundaryCountry?: Array<string>;
    boundaryGid?: string;
    layers?: Array<GeocodingLayer>;
    sources?: Array<GeocodingSource>;
    size?: number;
    lang?: string;
}
export interface SearchV2Request {
    text: string;
    focusPointLat?: number;
    focusPointLon?: number;
    layers?: Array<LayerId>;
    sources?: Array<SourceId>;
    boundaryGid?: string;
    boundaryCountry?: Array<string>;
    boundaryRectMinLat?: number;
    boundaryRectMinLon?: number;
    boundaryRectMaxLat?: number;
    boundaryRectMaxLon?: number;
    boundaryCircleLat?: number;
    boundaryCircleLon?: number;
    boundaryCircleRadius?: number;
    size?: number;
    lang?: string;
}
/**
 *
 */
export declare class GeocodingApi extends runtime.BaseAPI {
    /**
     * Autocomplete enables interactive search-as-you-type user experiences, suggesting places as you type, along with information that will help your users find the correct place quickly.
     * Search and geocode quickly based on partial input.
     */
    autocompleteRaw(requestParameters: AutocompleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GeocodeResponse>>;
    /**
     * Autocomplete enables interactive search-as-you-type user experiences, suggesting places as you type, along with information that will help your users find the correct place quickly.
     * Search and geocode quickly based on partial input.
     */
    autocomplete(requestParameters: AutocompleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GeocodeResponse>;
    /**
     */
    autocompleteV2Raw(requestParameters: AutocompleteV2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GeocodeResponseEnvelopePropertiesV2>>;
    /**
     */
    autocompleteV2(requestParameters: AutocompleteV2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GeocodeResponseEnvelopePropertiesV2>;
    /**
     * Many search result components include an associated GID field (for example, an address may have a `localadmin_gid`). The place endpoint lets you look up these places directly by ID. Note that GIDs are not stable for all sources. See the [online documentation](https://docs.stadiamaps.com/geocoding-search-autocomplete/place-lookup/) for details.
     * Retrieve details of a place using its GID.
     */
    placeDetailsRaw(requestParameters: PlaceDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GeocodeResponse>>;
    /**
     * Many search result components include an associated GID field (for example, an address may have a `localadmin_gid`). The place endpoint lets you look up these places directly by ID. Note that GIDs are not stable for all sources. See the [online documentation](https://docs.stadiamaps.com/geocoding-search-autocomplete/place-lookup/) for details.
     * Retrieve details of a place using its GID.
     */
    placeDetails(requestParameters: PlaceDetailsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GeocodeResponse>;
    /**
     */
    placeDetailsV2Raw(requestParameters: PlaceDetailsV2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GeocodeResponseEnvelopePropertiesV2>>;
    /**
     */
    placeDetailsV2(requestParameters: PlaceDetailsV2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GeocodeResponseEnvelopePropertiesV2>;
    /**
     * Reverse geocoding and search finds places and addresses near any geographic coordinates.
     * Find places and addresses near geographic coordinates (reverse geocoding).
     */
    reverseRaw(requestParameters: ReverseRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GeocodeResponse>>;
    /**
     * Reverse geocoding and search finds places and addresses near any geographic coordinates.
     * Find places and addresses near geographic coordinates (reverse geocoding).
     */
    reverse(requestParameters: ReverseRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GeocodeResponse>;
    /**
     */
    reverseV2Raw(requestParameters: ReverseV2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GeocodeResponseEnvelopePropertiesV2>>;
    /**
     */
    reverseV2(requestParameters: ReverseV2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GeocodeResponseEnvelopePropertiesV2>;
    /**
     * The search endpoint lets you search for addresses, points of interest, and administrative areas. This is most commonly used for forward geocoding applications where you need to find the geographic coordinates of an address.
     * Search for location and other info using a place name or address (forward geocoding).
     */
    searchRaw(requestParameters: SearchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GeocodeResponse>>;
    /**
     * The search endpoint lets you search for addresses, points of interest, and administrative areas. This is most commonly used for forward geocoding applications where you need to find the geographic coordinates of an address.
     * Search for location and other info using a place name or address (forward geocoding).
     */
    search(requestParameters: SearchRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GeocodeResponse>;
    /**
     * The batch endpoint lets you specify many search or structured search requests at once. Once received, all requests will be processed internally on our infrastructure, improving throughput when you need to do a lot of queries.
     * Quickly run a batch of geocoding queries against the search or structured search endpoints.
     */
    searchBulkRaw(requestParameters: SearchBulkRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<BulkSearchResponse>>>;
    /**
     * The batch endpoint lets you specify many search or structured search requests at once. Once received, all requests will be processed internally on our infrastructure, improving throughput when you need to do a lot of queries.
     * Quickly run a batch of geocoding queries against the search or structured search endpoints.
     */
    searchBulk(requestParameters?: SearchBulkRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<BulkSearchResponse>>;
    /**
     * The structured search endpoint lets you search for addresses, points of interest, and administrative areas. Rather than a single string which the API must infer meaning from, the structured search endpoint allows you to specify the known components upfront, which is useful in many forward geocoding workflows.
     * Find locations matching components (structured forward geocoding).
     */
    searchStructuredRaw(requestParameters: SearchStructuredRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GeocodeResponse>>;
    /**
     * The structured search endpoint lets you search for addresses, points of interest, and administrative areas. Rather than a single string which the API must infer meaning from, the structured search endpoint allows you to specify the known components upfront, which is useful in many forward geocoding workflows.
     * Find locations matching components (structured forward geocoding).
     */
    searchStructured(requestParameters?: SearchStructuredRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GeocodeResponse>;
    /**
     */
    searchV2Raw(requestParameters: SearchV2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GeocodeResponseEnvelopePropertiesV2>>;
    /**
     */
    searchV2(requestParameters: SearchV2Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GeocodeResponseEnvelopePropertiesV2>;
}
//# sourceMappingURL=GeocodingApi.d.ts.map