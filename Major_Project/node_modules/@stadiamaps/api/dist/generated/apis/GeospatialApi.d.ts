import { HeightRequest, HeightResponse, TzResponse } from '../models/index';
/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.
 *
 * The version of the OpenAPI document: 10.0.1
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from "../runtime";
export interface ElevationRequest {
    heightRequest?: HeightRequest;
}
export interface TzLookupRequest {
    lat: number;
    lng: number;
    timestamp?: number;
}
/**
 *
 */
export declare class GeospatialApi extends runtime.BaseAPI {
    /**
     * The Stadia elevation API allows you to get the elevation of any point on earth. You can pass either a simple set of points or a Google encoded polyline string. This pairs well with our routing APIs, so you can generate an elevation profile for your next bike or run.
     * Get the elevation profile along a polyline or at a point.
     */
    elevationRaw(requestParameters: ElevationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HeightResponse>>;
    /**
     * The Stadia elevation API allows you to get the elevation of any point on earth. You can pass either a simple set of points or a Google encoded polyline string. This pairs well with our routing APIs, so you can generate an elevation profile for your next bike or run.
     * Get the elevation profile along a polyline or at a point.
     */
    elevation(requestParameters?: ElevationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HeightResponse>;
    /**
     * Retrieve the time zone identifier, standard UTC offset, special offset (such as DST), and the localized time in several common formats.
     * Get time zone information for any point on earth.
     */
    tzLookupRaw(requestParameters: TzLookupRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TzResponse>>;
    /**
     * Retrieve the time zone identifier, standard UTC offset, special offset (such as DST), and the localized time in several common formats.
     * Get time zone information for any point on earth.
     */
    tzLookup(requestParameters: TzLookupRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TzResponse>;
}
//# sourceMappingURL=GeospatialApi.d.ts.map