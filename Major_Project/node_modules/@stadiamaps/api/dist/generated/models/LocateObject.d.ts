import { LocateEdge } from './LocateEdge';
import { LocateNode } from './LocateNode';
/**
 *
 * @export
 * @interface LocateObject
 */
export interface LocateObject {
    /**
     * An identifier to disambiguate requests (echoed by the server).
     * @type {string}
     * @memberof LocateObject
     */
    id?: string;
    /**
     * The input (searched) latitude.
     * @type {number}
     * @memberof LocateObject
     */
    inputLat?: number;
    /**
     * The input (searched) longitude.
     * @type {number}
     * @memberof LocateObject
     */
    inputLon?: number;
    /**
     *
     * @type {Array<LocateNode>}
     * @memberof LocateObject
     */
    nodes?: Array<LocateNode> | null;
    /**
     *
     * @type {Array<LocateEdge>}
     * @memberof LocateObject
     */
    edges?: Array<LocateEdge> | null;
}
/**
 * Check if a given object implements the LocateObject interface.
 */
export declare function instanceOfLocateObject(value: object): value is LocateObject;
export declare function LocateObjectFromJSON(json: any): LocateObject;
export declare function LocateObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocateObject;
export declare function LocateObjectToJSON(json: any): LocateObject;
export declare function LocateObjectToJSONTyped(value?: LocateObject | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=LocateObject.d.ts.map