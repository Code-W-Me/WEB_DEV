import { Administrative } from './Administrative';
import { NodeType } from './NodeType';
import { Access } from './Access';
import { NodeId } from './NodeId';
/**
 *
 * @export
 * @interface LocateNode
 */
export interface LocateNode {
    /**
     * The latitude of a point in the shape.
     * @type {number}
     * @memberof LocateNode
     */
    lat: number;
    /**
     * The longitude of a point in the shape.
     * @type {number}
     * @memberof LocateNode
     */
    lon: number;
    /**
     *
     * @type {boolean}
     * @memberof LocateNode
     */
    trafficSignal?: boolean;
    /**
     *
     * @type {NodeType}
     * @memberof LocateNode
     */
    type?: NodeType;
    /**
     *
     * @type {NodeId}
     * @memberof LocateNode
     */
    nodeId?: NodeId;
    /**
     *
     * @type {Access}
     * @memberof LocateNode
     */
    access?: Access;
    /**
     *
     * @type {number}
     * @memberof LocateNode
     */
    edgeCount?: number;
    /**
     *
     * @type {Administrative}
     * @memberof LocateNode
     */
    administrative?: Administrative;
    /**
     *
     * @type {string}
     * @memberof LocateNode
     */
    intersectionType?: LocateNodeIntersectionTypeEnum;
    /**
     *
     * @type {number}
     * @memberof LocateNode
     */
    density?: number;
    /**
     *
     * @type {number}
     * @memberof LocateNode
     */
    localEdgeCount?: number;
    /**
     *
     * @type {boolean}
     * @memberof LocateNode
     */
    modeChange?: boolean;
}
/**
 * @export
 */
export declare const LocateNodeIntersectionTypeEnum: {
    readonly Regular: "regular";
    readonly False: "false";
    readonly DeadEnd: "dead-end";
    readonly Fork: "fork";
};
export type LocateNodeIntersectionTypeEnum = (typeof LocateNodeIntersectionTypeEnum)[keyof typeof LocateNodeIntersectionTypeEnum];
/**
 * Check if a given object implements the LocateNode interface.
 */
export declare function instanceOfLocateNode(value: object): value is LocateNode;
export declare function LocateNodeFromJSON(json: any): LocateNode;
export declare function LocateNodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocateNode;
export declare function LocateNodeToJSON(json: any): LocateNode;
export declare function LocateNodeToJSONTyped(value?: LocateNode | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=LocateNode.d.ts.map