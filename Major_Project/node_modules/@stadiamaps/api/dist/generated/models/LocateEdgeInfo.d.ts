import { BikeNetwork } from './BikeNetwork';
/**
 *
 * @export
 * @interface LocateEdgeInfo
 */
export interface LocateEdgeInfo {
    /**
     * The mean elevation, in meters, relative to sea level.
     * @type {number}
     * @memberof LocateEdgeInfo
     */
    meanElevation?: number;
    /**
     * An encoded polyline (https://developers.google.com/maps/documentation/utilities/polylinealgorithm). Note that the polyline is always encoded with 6 digits of precision, whereas most implementations default to 5.
     * @type {string}
     * @memberof LocateEdgeInfo
     */
    shape: string;
    /**
     * A list of names that the edge goes by.
     * @type {Array<string>}
     * @memberof LocateEdgeInfo
     */
    names?: Array<string>;
    /**
     *
     * @type {BikeNetwork}
     * @memberof LocateEdgeInfo
     */
    bikeNetwork?: BikeNetwork;
    /**
     * The OSM way ID associated with this edge.
     * @type {number}
     * @memberof LocateEdgeInfo
     */
    wayId: number;
}
/**
 * Check if a given object implements the LocateEdgeInfo interface.
 */
export declare function instanceOfLocateEdgeInfo(value: object): value is LocateEdgeInfo;
export declare function LocateEdgeInfoFromJSON(json: any): LocateEdgeInfo;
export declare function LocateEdgeInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocateEdgeInfo;
export declare function LocateEdgeInfoToJSON(json: any): LocateEdgeInfo;
export declare function LocateEdgeInfoToJSONTyped(value?: LocateEdgeInfo | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=LocateEdgeInfo.d.ts.map