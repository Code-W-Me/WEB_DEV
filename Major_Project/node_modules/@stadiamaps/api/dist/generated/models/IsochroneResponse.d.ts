import { IsochroneFeature } from './IsochroneFeature';
/**
 *
 * @export
 * @interface IsochroneResponse
 */
export interface IsochroneResponse {
    /**
     *
     * @type {string}
     * @memberof IsochroneResponse
     */
    id?: string;
    /**
     *
     * @type {Array<IsochroneFeature>}
     * @memberof IsochroneResponse
     */
    features: Array<IsochroneFeature>;
    /**
     *
     * @type {string}
     * @memberof IsochroneResponse
     */
    type: IsochroneResponseTypeEnum;
}
/**
 * @export
 */
export declare const IsochroneResponseTypeEnum: {
    readonly FeatureCollection: "FeatureCollection";
};
export type IsochroneResponseTypeEnum = (typeof IsochroneResponseTypeEnum)[keyof typeof IsochroneResponseTypeEnum];
/**
 * Check if a given object implements the IsochroneResponse interface.
 */
export declare function instanceOfIsochroneResponse(value: object): value is IsochroneResponse;
export declare function IsochroneResponseFromJSON(json: any): IsochroneResponse;
export declare function IsochroneResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): IsochroneResponse;
export declare function IsochroneResponseToJSON(json: any): IsochroneResponse;
export declare function IsochroneResponseToJSONTyped(value?: IsochroneResponse | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=IsochroneResponse.d.ts.map