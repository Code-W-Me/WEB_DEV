/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.
 *
 * The version of the OpenAPI document: 10.0.1
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface MatchedPoint
 */
export interface MatchedPoint {
    /**
     * The latitude of the matched point.
     * @type {number}
     * @memberof MatchedPoint
     */
    lat: number;
    /**
     * The longitude of the matched point.
     * @type {number}
     * @memberof MatchedPoint
     */
    lon: number;
    /**
     *
     * @type {string}
     * @memberof MatchedPoint
     */
    type: MatchedPointTypeEnum;
    /**
     * The index of the edge in the list of `edges`. This key will be missing if the point is unmatched.
     * @type {number}
     * @memberof MatchedPoint
     */
    edgeIndex?: number;
    /**
     * If true, this match result is the begin location of a route discontinuity.
     * @type {boolean}
     * @memberof MatchedPoint
     */
    beginRouteDiscontinuity?: boolean;
    /**
     * If true, this match result is the end location of a route discontinuity.
     * @type {boolean}
     * @memberof MatchedPoint
     */
    endRouteDiscontinuity?: boolean;
    /**
     * The distance along the associated edge for this matched point, expressed as a value between 0 and 1. For example, if the matched point is halfway along the edge, then the value will be 0.5. This key will be absent if the point is unmatched.
     * @type {number}
     * @memberof MatchedPoint
     */
    distanceAlongEdge?: number;
    /**
     * The distance in meters from the trace point to the matched point. This key will be absent if the point is unmatched.
     * @type {number}
     * @memberof MatchedPoint
     */
    distanceFromTracePoint?: number;
}
/**
 * @export
 */
export declare const MatchedPointTypeEnum: {
    readonly Unmatched: "unmatched";
    readonly Interpolated: "interpolated";
    readonly Matched: "matched";
};
export type MatchedPointTypeEnum = (typeof MatchedPointTypeEnum)[keyof typeof MatchedPointTypeEnum];
/**
 * Check if a given object implements the MatchedPoint interface.
 */
export declare function instanceOfMatchedPoint(value: object): value is MatchedPoint;
export declare function MatchedPointFromJSON(json: any): MatchedPoint;
export declare function MatchedPointFromJSONTyped(json: any, ignoreDiscriminator: boolean): MatchedPoint;
export declare function MatchedPointToJSON(json: any): MatchedPoint;
export declare function MatchedPointToJSONTyped(value?: MatchedPoint | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=MatchedPoint.d.ts.map