import { IsochroneProperties } from './IsochroneProperties';
/**
 *
 * @export
 * @interface IsochroneFeature
 */
export interface IsochroneFeature {
    /**
     *
     * @type {IsochroneProperties}
     * @memberof IsochroneFeature
     */
    properties?: IsochroneProperties;
    /**
     *
     * @type {{ [key: string]: any; }}
     * @memberof IsochroneFeature
     */
    geometry?: {
        [key: string]: any;
    };
    /**
     *
     * @type {string}
     * @memberof IsochroneFeature
     */
    type?: IsochroneFeatureTypeEnum;
}
/**
 * @export
 */
export declare const IsochroneFeatureTypeEnum: {
    readonly Feature: "Feature";
};
export type IsochroneFeatureTypeEnum = (typeof IsochroneFeatureTypeEnum)[keyof typeof IsochroneFeatureTypeEnum];
/**
 * Check if a given object implements the IsochroneFeature interface.
 */
export declare function instanceOfIsochroneFeature(value: object): value is IsochroneFeature;
export declare function IsochroneFeatureFromJSON(json: any): IsochroneFeature;
export declare function IsochroneFeatureFromJSONTyped(json: any, ignoreDiscriminator: boolean): IsochroneFeature;
export declare function IsochroneFeatureToJSON(json: any): IsochroneFeature;
export declare function IsochroneFeatureToJSONTyped(value?: IsochroneFeature | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=IsochroneFeature.d.ts.map