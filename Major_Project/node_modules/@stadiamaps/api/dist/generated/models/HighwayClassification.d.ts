/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.
 *
 * The version of the OpenAPI document: 10.0.1
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface HighwayClassification
 */
export interface HighwayClassification {
    /**
     * Is the edge internal to an intersection?
     * @type {boolean}
     * @memberof HighwayClassification
     */
    internal?: boolean;
    /**
     * Is the edge a ramp or turn channel?
     * @type {boolean}
     * @memberof HighwayClassification
     */
    link?: boolean;
    /**
     * A representation of the smoothness of the highway. This is used for costing and access checks based on the vehicle type.
     * @type {string}
     * @memberof HighwayClassification
     */
    surface?: HighwayClassificationSurfaceEnum;
    /**
     *
     * @type {string}
     * @memberof HighwayClassification
     */
    use?: HighwayClassificationUseEnum;
    /**
     * The classification/importance of the road/path. Used for a variety of purposes including fallback speed estimation and access for certain vehicle types.
     * @type {string}
     * @memberof HighwayClassification
     */
    classification?: HighwayClassificationClassificationEnum;
}
/**
 * @export
 */
export declare const HighwayClassificationSurfaceEnum: {
    readonly PavedSmooth: "paved_smooth";
    readonly Paved: "paved";
    readonly PavedRough: "paved_rough";
    readonly Compacted: "compacted";
    readonly Dirt: "dirt";
    readonly Gravel: "gravel";
    readonly Path: "path";
    readonly Impassable: "impassable";
};
export type HighwayClassificationSurfaceEnum = (typeof HighwayClassificationSurfaceEnum)[keyof typeof HighwayClassificationSurfaceEnum];
/**
 * @export
 */
export declare const HighwayClassificationUseEnum: {
    readonly Road: "road";
    readonly Ramp: "ramp";
    readonly TurnChannel: "turn_channel";
    readonly Track: "track";
    readonly Driveway: "driveway";
    readonly Alley: "alley";
    readonly ParkingAisle: "parking_aisle";
    readonly EmergencyAccess: "emergency_access";
    readonly DriveThrough: "drive_through";
    readonly Culdesac: "culdesac";
    readonly LivingStreet: "living_street";
    readonly ServiceRoad: "service_road";
    readonly Cycleway: "cycleway";
    readonly MountainBike: "mountain_bike";
    readonly Sidewalk: "sidewalk";
    readonly Footway: "footway";
    readonly Elevator: "elevator";
    readonly Steps: "steps";
    readonly Escalator: "escalator";
    readonly Path: "path";
    readonly Pedestrian: "pedestrian";
    readonly Bridleway: "bridleway";
    readonly PedestrianCrossing: "pedestrian_crossing";
    readonly RestArea: "rest_area";
    readonly ServiceArea: "service_area";
    readonly Other: "other";
    readonly Rail: "rail";
    readonly Ferry: "ferry";
    readonly RailFerry: "rail-ferry";
    readonly Bus: "bus";
    readonly EgressConnection: "egress_connection";
    readonly PlatformConnnection: "platform_connnection";
    readonly TransitConnection: "transit_connection";
    readonly Construction: "construction";
};
export type HighwayClassificationUseEnum = (typeof HighwayClassificationUseEnum)[keyof typeof HighwayClassificationUseEnum];
/**
 * @export
 */
export declare const HighwayClassificationClassificationEnum: {
    readonly Motorway: "motorway";
    readonly Trunk: "trunk";
    readonly Primary: "primary";
    readonly Secondary: "secondary";
    readonly Tertiary: "tertiary";
    readonly Unclassified: "unclassified";
    readonly Residential: "residential";
    readonly ServiceOther: "service_other";
};
export type HighwayClassificationClassificationEnum = (typeof HighwayClassificationClassificationEnum)[keyof typeof HighwayClassificationClassificationEnum];
/**
 * Check if a given object implements the HighwayClassification interface.
 */
export declare function instanceOfHighwayClassification(value: object): value is HighwayClassification;
export declare function HighwayClassificationFromJSON(json: any): HighwayClassification;
export declare function HighwayClassificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): HighwayClassification;
export declare function HighwayClassificationToJSON(json: any): HighwayClassification;
export declare function HighwayClassificationToJSONTyped(value?: HighwayClassification | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=HighwayClassification.d.ts.map