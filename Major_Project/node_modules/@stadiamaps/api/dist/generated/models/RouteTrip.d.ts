import { RoutingResponseWaypoint } from './RoutingResponseWaypoint';
import { RouteSummary } from './RouteSummary';
import { RoutingLongUnits } from './RoutingLongUnits';
import { RouteLeg } from './RouteLeg';
import { RoutingLanguages } from './RoutingLanguages';
/**
 *
 * @export
 * @interface RouteTrip
 */
export interface RouteTrip {
    /**
     * The response status code
     * @type {number}
     * @memberof RouteTrip
     */
    status: number;
    /**
     * The response status message
     * @type {string}
     * @memberof RouteTrip
     */
    statusMessage: string;
    /**
     *
     * @type {RoutingLongUnits}
     * @memberof RouteTrip
     */
    units: RoutingLongUnits;
    /**
     *
     * @type {RoutingLanguages}
     * @memberof RouteTrip
     */
    language: RoutingLanguages;
    /**
     *
     * @type {Array<RoutingResponseWaypoint>}
     * @memberof RouteTrip
     */
    locations: Array<RoutingResponseWaypoint>;
    /**
     *
     * @type {Array<RouteLeg>}
     * @memberof RouteTrip
     */
    legs: Array<RouteLeg>;
    /**
     *
     * @type {RouteSummary}
     * @memberof RouteTrip
     */
    summary: RouteSummary;
}
/**
 * Check if a given object implements the RouteTrip interface.
 */
export declare function instanceOfRouteTrip(value: object): value is RouteTrip;
export declare function RouteTripFromJSON(json: any): RouteTrip;
export declare function RouteTripFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteTrip;
export declare function RouteTripToJSON(json: any): RouteTrip;
export declare function RouteTripToJSONTyped(value?: RouteTrip | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=RouteTrip.d.ts.map