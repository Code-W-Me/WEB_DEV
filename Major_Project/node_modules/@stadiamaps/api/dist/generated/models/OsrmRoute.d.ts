import { OsrmRouteLeg } from './OsrmRouteLeg';
/**
 *
 * @export
 * @interface OsrmRoute
 */
export interface OsrmRoute {
    /**
     * The distance traveled by the route, in meters.
     * @type {number}
     * @memberof OsrmRoute
     */
    distance: number;
    /**
     * The estimated travel time, in number of seconds.
     * @type {number}
     * @memberof OsrmRoute
     */
    duration: number;
    /**
     * An encoded polyline (https://developers.google.com/maps/documentation/utilities/polylinealgorithm). Note that the polyline is encoded with 6 digits of precision rather than the default 5!
     * @type {string}
     * @memberof OsrmRoute
     */
    geometry: string;
    /**
     * The total cost of the route computed by the routing engine.
     * @type {number}
     * @memberof OsrmRoute
     */
    weight?: number;
    /**
     * The costing model used for the route.
     * @type {string}
     * @memberof OsrmRoute
     */
    weightName?: string;
    /**
     *
     * @type {Array<OsrmRouteLeg>}
     * @memberof OsrmRoute
     */
    legs: Array<OsrmRouteLeg>;
}
/**
 * Check if a given object implements the OsrmRoute interface.
 */
export declare function instanceOfOsrmRoute(value: object): value is OsrmRoute;
export declare function OsrmRouteFromJSON(json: any): OsrmRoute;
export declare function OsrmRouteFromJSONTyped(json: any, ignoreDiscriminator: boolean): OsrmRoute;
export declare function OsrmRouteToJSON(json: any): OsrmRoute;
export declare function OsrmRouteToJSONTyped(value?: OsrmRoute | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=OsrmRoute.d.ts.map