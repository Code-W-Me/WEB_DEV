import { GeocodingObject } from './GeocodingObject';
import { GeocodingGeoJSONFeature } from './GeocodingGeoJSONFeature';
/**
 *
 * @export
 * @interface GeocodeResponse
 */
export interface GeocodeResponse {
    /**
     *
     * @type {GeocodingObject}
     * @memberof GeocodeResponse
     */
    geocoding: GeocodingObject;
    /**
     * An array of 4 floating point numbers representing the (W, S, E, N) extremes of the features found.
     * @type {Array<number>}
     * @memberof GeocodeResponse
     */
    bbox?: Array<number>;
    /**
     *
     * @type {Array<GeocodingGeoJSONFeature>}
     * @memberof GeocodeResponse
     */
    features: Array<GeocodingGeoJSONFeature>;
}
/**
 * Check if a given object implements the GeocodeResponse interface.
 */
export declare function instanceOfGeocodeResponse(value: object): value is GeocodeResponse;
export declare function GeocodeResponseFromJSON(json: any): GeocodeResponse;
export declare function GeocodeResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeocodeResponse;
export declare function GeocodeResponseToJSON(json: any): GeocodeResponse;
export declare function GeocodeResponseToJSONTyped(value?: GeocodeResponse | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=GeocodeResponse.d.ts.map