import { CostingModel } from './CostingModel';
import { CostingOptions } from './CostingOptions';
import { Coordinate } from './Coordinate';
import { DistanceUnit } from './DistanceUnit';
import { RoutingLanguages } from './RoutingLanguages';
/**
 *
 * @export
 * @interface NearestRoadsRequest
 */
export interface NearestRoadsRequest {
    /**
     *
     * @type {DistanceUnit}
     * @memberof NearestRoadsRequest
     */
    units?: DistanceUnit;
    /**
     *
     * @type {RoutingLanguages}
     * @memberof NearestRoadsRequest
     */
    language?: RoutingLanguages;
    /**
     * The level of directional narrative to include. Locations and times will always be returned, but narrative generation verbosity can be controlled with this parameter.
     * @type {string}
     * @memberof NearestRoadsRequest
     */
    directionsType?: NearestRoadsRequestDirectionsTypeEnum;
    /**
     *
     * @type {Array<Coordinate>}
     * @memberof NearestRoadsRequest
     */
    locations: Array<Coordinate>;
    /**
     *
     * @type {CostingModel}
     * @memberof NearestRoadsRequest
     */
    costing?: CostingModel;
    /**
     *
     * @type {CostingOptions}
     * @memberof NearestRoadsRequest
     */
    costingOptions?: CostingOptions;
    /**
     *
     * @type {boolean}
     * @memberof NearestRoadsRequest
     */
    verbose?: boolean;
}
/**
 * @export
 */
export declare const NearestRoadsRequestDirectionsTypeEnum: {
    readonly None: "none";
    readonly Maneuvers: "maneuvers";
    readonly Instructions: "instructions";
};
export type NearestRoadsRequestDirectionsTypeEnum = (typeof NearestRoadsRequestDirectionsTypeEnum)[keyof typeof NearestRoadsRequestDirectionsTypeEnum];
/**
 * Check if a given object implements the NearestRoadsRequest interface.
 */
export declare function instanceOfNearestRoadsRequest(value: object): value is NearestRoadsRequest;
export declare function NearestRoadsRequestFromJSON(json: any): NearestRoadsRequest;
export declare function NearestRoadsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): NearestRoadsRequest;
export declare function NearestRoadsRequestToJSON(json: any): NearestRoadsRequest;
export declare function NearestRoadsRequestToJSONTyped(value?: NearestRoadsRequest | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=NearestRoadsRequest.d.ts.map