import { RouteResponseAlternatesInner } from './RouteResponseAlternatesInner';
import { RouteTrip } from './RouteTrip';
/**
 *
 * @export
 * @interface RouteResponse
 */
export interface RouteResponse {
    /**
     * An identifier to disambiguate requests (echoed by the server).
     * @type {string}
     * @memberof RouteResponse
     */
    id?: string;
    /**
     *
     * @type {RouteTrip}
     * @memberof RouteResponse
     */
    trip: RouteTrip;
    /**
     *
     * @type {Array<RouteResponseAlternatesInner>}
     * @memberof RouteResponse
     */
    alternates?: Array<RouteResponseAlternatesInner>;
}
/**
 * Check if a given object implements the RouteResponse interface.
 */
export declare function instanceOfRouteResponse(value: object): value is RouteResponse;
export declare function RouteResponseFromJSON(json: any): RouteResponse;
export declare function RouteResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RouteResponse;
export declare function RouteResponseToJSON(json: any): RouteResponse;
export declare function RouteResponseToJSONTyped(value?: RouteResponse | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=RouteResponse.d.ts.map