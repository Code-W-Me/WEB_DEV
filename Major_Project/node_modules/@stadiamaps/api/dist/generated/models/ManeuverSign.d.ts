import { ManeuverSignElement } from './ManeuverSignElement';
/**
 *
 * @export
 * @interface ManeuverSign
 */
export interface ManeuverSign {
    /**
     * A list of exit number elements. This is typically just a single value.
     * @type {Array<ManeuverSignElement>}
     * @memberof ManeuverSign
     */
    exitNumberElements?: Array<ManeuverSignElement>;
    /**
     * A list of exit branch elements. The text is a subsequent road name or route number after the sign.
     * @type {Array<ManeuverSignElement>}
     * @memberof ManeuverSign
     */
    exitBranchElements?: Array<ManeuverSignElement>;
    /**
     * A list of exit name elements. The text is the interchange identifier (used more frequently outside the US).
     * @type {Array<ManeuverSignElement>}
     * @memberof ManeuverSign
     */
    exitTowardElements?: Array<ManeuverSignElement>;
    /**
     * A list of exit name elements. The text is the location where the road ahead goes (typically a city, but occasionally a road name or route number).
     * @type {Array<ManeuverSignElement>}
     * @memberof ManeuverSign
     */
    exitNameElements?: Array<ManeuverSignElement>;
}
/**
 * Check if a given object implements the ManeuverSign interface.
 */
export declare function instanceOfManeuverSign(value: object): value is ManeuverSign;
export declare function ManeuverSignFromJSON(json: any): ManeuverSign;
export declare function ManeuverSignFromJSONTyped(json: any, ignoreDiscriminator: boolean): ManeuverSign;
export declare function ManeuverSignToJSON(json: any): ManeuverSign;
export declare function ManeuverSignToJSONTyped(value?: ManeuverSign | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=ManeuverSign.d.ts.map