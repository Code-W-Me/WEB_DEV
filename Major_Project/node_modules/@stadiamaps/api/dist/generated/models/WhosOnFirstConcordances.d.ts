/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.
 *
 * The version of the OpenAPI document: 10.0.1
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface WhosOnFirstConcordances
 */
export interface WhosOnFirstConcordances {
    /**
     *
     * @type {string}
     * @memberof WhosOnFirstConcordances
     */
    eurographicsGiscoId?: string | null;
    /**
     *
     * @type {string}
     * @memberof WhosOnFirstConcordances
     */
    faaCode?: string | null;
    /**
     *
     * @type {string}
     * @memberof WhosOnFirstConcordances
     */
    factualId?: string | null;
    /**
     *
     * @type {string}
     * @memberof WhosOnFirstConcordances
     */
    fifaId?: string | null;
    /**
     *
     * @type {string}
     * @memberof WhosOnFirstConcordances
     */
    fipsCode?: string | null;
    /**
     * An Open Data France EPCI code.
     * @type {number}
     * @memberof WhosOnFirstConcordances
     */
    frGovEpciCode?: number | null;
    /**
     * Institut national de la statistique et des études économiques (Insee) code
     * @type {number}
     * @memberof WhosOnFirstConcordances
     */
    fraInseeCode?: number | null;
    /**
     *
     * @type {number}
     * @memberof WhosOnFirstConcordances
     */
    geonamesId?: number | null;
    /**
     *
     * @type {number}
     * @memberof WhosOnFirstConcordances
     */
    geoplanetId?: number | null;
    /**
     * A Statoids HASC ID.
     * @type {string}
     * @memberof WhosOnFirstConcordances
     */
    hascId?: string | null;
    /**
     *
     * @type {string}
     * @memberof WhosOnFirstConcordances
     */
    iataCode?: string | null;
    /**
     *
     * @type {string}
     * @memberof WhosOnFirstConcordances
     */
    icaoCode?: string | null;
    /**
     *
     * @type {string}
     * @memberof WhosOnFirstConcordances
     */
    ituId?: string | null;
    /**
     *
     * @type {string}
     * @memberof WhosOnFirstConcordances
     */
    karmashapesId?: string | null;
    /**
     *
     * @type {number}
     * @memberof WhosOnFirstConcordances
     */
    naturalEarthId?: number | null;
    /**
     * A Eurostat NUTS 2021 ID
     * @type {string}
     * @memberof WhosOnFirstConcordances
     */
    nuts2021Id?: string | null;
    /**
     *
     * @type {number}
     * @memberof WhosOnFirstConcordances
     */
    quattroshapesId?: number | null;
    /**
     * A Quattroshapes Point Gazetteer ID.
     * @type {number}
     * @memberof WhosOnFirstConcordances
     */
    quattroshapesPgId?: number | null;
    /**
     *
     * @type {number}
     * @memberof WhosOnFirstConcordances
     */
    usCensusGeoId?: number | null;
    /**
     *
     * @type {string}
     * @memberof WhosOnFirstConcordances
     */
    wikidataId?: string | null;
    /**
     *
     * @type {string}
     * @memberof WhosOnFirstConcordances
     */
    wikipediaPage?: string | null;
}
/**
 * Check if a given object implements the WhosOnFirstConcordances interface.
 */
export declare function instanceOfWhosOnFirstConcordances(value: object): value is WhosOnFirstConcordances;
export declare function WhosOnFirstConcordancesFromJSON(json: any): WhosOnFirstConcordances;
export declare function WhosOnFirstConcordancesFromJSONTyped(json: any, ignoreDiscriminator: boolean): WhosOnFirstConcordances;
export declare function WhosOnFirstConcordancesToJSON(json: any): WhosOnFirstConcordances;
export declare function WhosOnFirstConcordancesToJSONTyped(value?: WhosOnFirstConcordances | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=WhosOnFirstConcordances.d.ts.map