import { RoadClass } from './RoadClass';
/**
 *
 * @export
 * @interface RoutingWaypointAllOfSearchFilter
 */
export interface RoutingWaypointAllOfSearchFilter {
    /**
     * Excludes roads marked as tunnels
     * @type {boolean}
     * @memberof RoutingWaypointAllOfSearchFilter
     */
    excludeTunnel?: boolean;
    /**
     * Excludes roads marked as bridges
     * @type {boolean}
     * @memberof RoutingWaypointAllOfSearchFilter
     */
    excludeBridge?: boolean;
    /**
     * Excludes roads marked as ramps
     * @type {boolean}
     * @memberof RoutingWaypointAllOfSearchFilter
     */
    excludeRamp?: boolean;
    /**
     * Excludes roads marked as closed
     * @type {boolean}
     * @memberof RoutingWaypointAllOfSearchFilter
     */
    excludeClosures?: boolean;
    /**
     * The lowest road class allowed
     * @type {RoadClass}
     * @memberof RoutingWaypointAllOfSearchFilter
     */
    minRoadClass?: RoadClass;
    /**
     * The highest road class allowed
     * @type {RoadClass}
     * @memberof RoutingWaypointAllOfSearchFilter
     */
    maxRoadClass?: RoadClass;
}
/**
 * Check if a given object implements the RoutingWaypointAllOfSearchFilter interface.
 */
export declare function instanceOfRoutingWaypointAllOfSearchFilter(value: object): value is RoutingWaypointAllOfSearchFilter;
export declare function RoutingWaypointAllOfSearchFilterFromJSON(json: any): RoutingWaypointAllOfSearchFilter;
export declare function RoutingWaypointAllOfSearchFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoutingWaypointAllOfSearchFilter;
export declare function RoutingWaypointAllOfSearchFilterToJSON(json: any): RoutingWaypointAllOfSearchFilter;
export declare function RoutingWaypointAllOfSearchFilterToJSONTyped(value?: RoutingWaypointAllOfSearchFilter | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=RoutingWaypointAllOfSearchFilter.d.ts.map