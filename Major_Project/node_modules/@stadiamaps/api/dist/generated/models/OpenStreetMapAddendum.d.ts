/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.
 *
 * The version of the OpenAPI document: 10.0.1
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * OpenStreetMap-specific additional fields.
 *
 * These values are exactly as they appear in the associated OSM tag.
 * @export
 * @interface OpenStreetMapAddendum
 */
export interface OpenStreetMapAddendum {
    /**
     * The principal brand of goods/services sold at a place,
     * or the common identity for individually owned and operated stores.
     * @type {string}
     * @memberof OpenStreetMapAddendum
     */
    brand?: string | null;
    /**
     * IATA airport code.
     * @type {string}
     * @memberof OpenStreetMapAddendum
     */
    iata?: string | null;
    /**
     * ICAO airport code.
     * @type {string}
     * @memberof OpenStreetMapAddendum
     */
    icao?: string | null;
    /**
     * The opening hours of the place, in the OSM Opening Hours specification.
     *
     * See https://wiki.openstreetmap.org/wiki/Key:opening_hours/specification for details.
     * @type {string}
     * @memberof OpenStreetMapAddendum
     */
    openingHours?: string | null;
    /**
     * THe company, corp, person, or other entity directly in charge of operating something.
     *
     * This is often used for public transport, hotels, restaurants, and postal services.
     * See https://wiki.openstreetmap.org/wiki/Key:operator for details
     * @type {string}
     * @memberof OpenStreetMapAddendum
     */
    operator?: string | null;
    /**
     *
     * @type {string}
     * @memberof OpenStreetMapAddendum
     */
    phone?: string | null;
    /**
     *
     * @type {string}
     * @memberof OpenStreetMapAddendum
     */
    website?: string | null;
    /**
     * Is this place wheelchair accessible?
     * @type {string}
     * @memberof OpenStreetMapAddendum
     */
    wheelchair?: string | null;
    /**
     * Wikidata concordance ID.
     * @type {string}
     * @memberof OpenStreetMapAddendum
     */
    wikidata?: string | null;
    /**
     * Wikipedia concordance ID.
     * @type {string}
     * @memberof OpenStreetMapAddendum
     */
    wikipedia?: string | null;
}
/**
 * Check if a given object implements the OpenStreetMapAddendum interface.
 */
export declare function instanceOfOpenStreetMapAddendum(value: object): value is OpenStreetMapAddendum;
export declare function OpenStreetMapAddendumFromJSON(json: any): OpenStreetMapAddendum;
export declare function OpenStreetMapAddendumFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenStreetMapAddendum;
export declare function OpenStreetMapAddendumToJSON(json: any): OpenStreetMapAddendum;
export declare function OpenStreetMapAddendumToJSONTyped(value?: OpenStreetMapAddendum | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=OpenStreetMapAddendum.d.ts.map