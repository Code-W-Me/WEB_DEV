import { RouteResponseAlternatesInner } from './RouteResponseAlternatesInner';
import { RouteTrip } from './RouteTrip';
/**
 *
 * @export
 * @interface MapMatchRouteResponse
 */
export interface MapMatchRouteResponse {
    /**
     * An identifier to disambiguate requests (echoed by the server).
     * @type {string}
     * @memberof MapMatchRouteResponse
     */
    id?: string;
    /**
     *
     * @type {RouteTrip}
     * @memberof MapMatchRouteResponse
     */
    trip: RouteTrip;
    /**
     *
     * @type {Array<RouteResponseAlternatesInner>}
     * @memberof MapMatchRouteResponse
     */
    alternates?: Array<RouteResponseAlternatesInner>;
    /**
     *
     * @type {Array<string>}
     * @memberof MapMatchRouteResponse
     */
    linearReferences?: Array<string>;
}
/**
 * Check if a given object implements the MapMatchRouteResponse interface.
 */
export declare function instanceOfMapMatchRouteResponse(value: object): value is MapMatchRouteResponse;
export declare function MapMatchRouteResponseFromJSON(json: any): MapMatchRouteResponse;
export declare function MapMatchRouteResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MapMatchRouteResponse;
export declare function MapMatchRouteResponseToJSON(json: any): MapMatchRouteResponse;
export declare function MapMatchRouteResponseToJSONTyped(value?: MapMatchRouteResponse | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=MapMatchRouteResponse.d.ts.map