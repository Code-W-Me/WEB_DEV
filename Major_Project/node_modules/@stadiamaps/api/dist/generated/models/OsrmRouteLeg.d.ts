import { OsrmViaWaypoint } from './OsrmViaWaypoint';
import { OsrmAnnotation } from './OsrmAnnotation';
import { OsrmAdmin } from './OsrmAdmin';
import { OsrmRouteStep } from './OsrmRouteStep';
/**
 *
 * @export
 * @interface OsrmRouteLeg
 */
export interface OsrmRouteLeg {
    /**
     * The distance traveled by the route, in meters.
     * @type {number}
     * @memberof OsrmRouteLeg
     */
    distance: number;
    /**
     * The estimated travel time, in number of seconds.
     * @type {number}
     * @memberof OsrmRouteLeg
     */
    duration: number;
    /**
     * The total cost of the leg computed by the routing engine.
     * @type {number}
     * @memberof OsrmRouteLeg
     */
    weight?: number;
    /**
     *
     * @type {string}
     * @memberof OsrmRouteLeg
     */
    summary?: string;
    /**
     *
     * @type {Array<OsrmRouteStep>}
     * @memberof OsrmRouteLeg
     */
    steps: Array<OsrmRouteStep>;
    /**
     *
     * @type {OsrmAnnotation}
     * @memberof OsrmRouteLeg
     */
    annotation?: OsrmAnnotation;
    /**
     * Indicates which waypoints are passed through rather than creating a new leg.
     * @type {Array<OsrmViaWaypoint>}
     * @memberof OsrmRouteLeg
     */
    viaWaypoints?: Array<OsrmViaWaypoint> | null;
    /**
     * Administrative regions visited along the leg.
     * @type {Array<OsrmAdmin>}
     * @memberof OsrmRouteLeg
     */
    admins?: Array<OsrmAdmin>;
}
/**
 * Check if a given object implements the OsrmRouteLeg interface.
 */
export declare function instanceOfOsrmRouteLeg(value: object): value is OsrmRouteLeg;
export declare function OsrmRouteLegFromJSON(json: any): OsrmRouteLeg;
export declare function OsrmRouteLegFromJSONTyped(json: any, ignoreDiscriminator: boolean): OsrmRouteLeg;
export declare function OsrmRouteLegToJSON(json: any): OsrmRouteLeg;
export declare function OsrmRouteLegToJSONTyped(value?: OsrmRouteLeg | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=OsrmRouteLeg.d.ts.map