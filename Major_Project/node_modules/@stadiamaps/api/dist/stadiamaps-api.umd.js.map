{"version":3,"file":"stadiamaps-api.umd.js","sources":["../src/generated/runtime.ts","../src/generated/models/Access.ts","../src/generated/models/FoursquareAddendum.ts","../src/generated/models/WhosOnFirstConcordances.ts","../src/generated/models/OpenStreetMapAddendum.ts","../src/generated/models/GeonamesAddendum.ts","../src/generated/models/AddendumV2.ts","../src/generated/models/AddressComponentsV2.ts","../src/generated/models/AdminRegion.ts","../src/generated/models/Administrative.ts","../src/generated/models/AnnotationFilters.ts","../src/generated/models/AutoCostingOptions.ts","../src/generated/models/BaseCostingOptions.ts","../src/generated/models/MotorScooterCostingOptions.ts","../src/generated/models/PedestrianType.ts","../src/generated/models/PedestrianCostingOptions.ts","../src/generated/models/TruckCostingOptions.ts","../src/generated/models/BicycleCostingOptions.ts","../src/generated/models/LowSpeedVehicleCostingOptions.ts","../src/generated/models/MotorcycleCostingOptions.ts","../src/generated/models/CostingOptions.ts","../src/generated/models/MapMatchCostingModel.ts","../src/generated/models/DistanceUnit.ts","../src/generated/models/RoutingLanguages.ts","../src/generated/models/MapMatchWaypoint.ts","../src/generated/models/BaseTraceRequest.ts","../src/generated/models/BikeNetwork.ts","../src/generated/models/GeocodingSource.ts","../src/generated/models/GeocodingLayer.ts","../src/generated/models/SearchQuery.ts","../src/generated/models/SearchStructuredQuery.ts","../src/generated/models/BulkRequestQuery.ts","../src/generated/models/BulkRequest.ts","../src/generated/models/GeocodingObject.ts","../src/generated/models/GeoJSONPoint.ts","../src/generated/models/GeocodingGeoJSONPropertiesAddendumOsm.ts","../src/generated/models/GeocodingGeoJSONPropertiesAddendum.ts","../src/generated/models/GeocodingGeoJSONProperties.ts","../src/generated/models/GeocodingGeoJSONFeature.ts","../src/generated/models/GeocodeResponse.ts","../src/generated/models/BulkSearchResponse.ts","../src/generated/models/WofContextComponent.ts","../src/generated/models/WofContext.ts","../src/generated/models/Context.ts","../src/generated/models/Contour.ts","../src/generated/models/Coordinate.ts","../src/generated/models/CostingModel.ts","../src/generated/models/DirectionsOptions.ts","../src/generated/models/EdgeSign.ts","../src/generated/models/EdgeUse.ts","../src/generated/models/Traversability.ts","../src/generated/models/RoadClass.ts","../src/generated/models/IntersectingEdge.ts","../src/generated/models/NodeType.ts","../src/generated/models/EndNode.ts","../src/generated/models/ExtendedDirectionsOptions.ts","../src/generated/models/Point.ts","../src/generated/models/MatchType.ts","../src/generated/models/SourceAttribution.ts","../src/generated/models/Precision.ts","../src/generated/models/FeaturePropertiesV2Properties.ts","../src/generated/models/FeaturePropertiesV2.ts","../src/generated/models/GeoAttributes.ts","../src/generated/models/GeoJSONGeometryBase.ts","../src/generated/models/GeocodingMeta.ts","../src/generated/models/GeocodeResponseEnvelopePropertiesV2.ts","../src/generated/models/HeightRequest.ts","../src/generated/models/HeightResponse.ts","../src/generated/models/HighwayClassification.ts","../src/generated/models/IsochroneCostingModel.ts","../src/generated/models/IsochroneProperties.ts","../src/generated/models/IsochroneFeature.ts","../src/generated/models/IsochroneRequest.ts","../src/generated/models/IsochroneResponse.ts","../src/generated/models/LayerId.ts","../src/generated/models/Speeds.ts","../src/generated/models/NodeId.ts","../src/generated/models/Restrictions.ts","../src/generated/models/LocateDetailedEdge.ts","../src/generated/models/LocateEdgeInfo.ts","../src/generated/models/LocateEdge.ts","../src/generated/models/LocateNode.ts","../src/generated/models/LocateObject.ts","../src/generated/models/ManeuverSignElement.ts","../src/generated/models/ManeuverSign.ts","../src/generated/models/MapMatchTraceOptions.ts","../src/generated/models/MapMatchRequest.ts","../src/generated/models/RoutingResponseWaypoint.ts","../src/generated/models/RouteSummary.ts","../src/generated/models/RoutingLongUnits.ts","../src/generated/models/TravelMode.ts","../src/generated/models/RouteManeuver.ts","../src/generated/models/RouteLeg.ts","../src/generated/models/RouteTrip.ts","../src/generated/models/RouteResponseAlternatesInner.ts","../src/generated/models/MapMatchRouteResponse.ts","../src/generated/models/MatchedPoint.ts","../src/generated/models/MatrixCostingModel.ts","../src/generated/models/MatrixDistance.ts","../src/generated/models/MatrixWaypoint.ts","../src/generated/models/MatrixRequest.ts","../src/generated/models/Warning.ts","../src/generated/models/MatrixResponse.ts","../src/generated/models/NearestRoadsRequest.ts","../src/generated/models/OptimizedRouteRequest.ts","../src/generated/models/OsrmAdmin.ts","../src/generated/models/OsrmSpeedLimit.ts","../src/generated/models/OsrmAnnotation.ts","../src/generated/models/OsrmBannerComponent.ts","../src/generated/models/OsrmGuidanceModifier.ts","../src/generated/models/OsrmBannerContent.ts","../src/generated/models/OsrmBannerInstruction.ts","../src/generated/models/OsrmBaseApiResponse.ts","../src/generated/models/OsrmLane.ts","../src/generated/models/OsrmIntersection.ts","../src/generated/models/OsrmViaWaypoint.ts","../src/generated/models/OsrmStepManeuver.ts","../src/generated/models/OsrmVoiceInstruction.ts","../src/generated/models/OsrmRouteStep.ts","../src/generated/models/OsrmRouteLeg.ts","../src/generated/models/OsrmRoute.ts","../src/generated/models/OsrmWaypoint.ts","../src/generated/models/OsrmRouteResponse.ts","../src/generated/models/PropertiesV2.ts","../src/generated/models/RouteResponse.ts","../src/generated/models/Route200Response.ts","../src/generated/models/RoutingWaypointAllOfSearchFilter.ts","../src/generated/models/RoutingWaypoint.ts","../src/generated/models/RouteRequest.ts","../src/generated/models/SimpleRoutingWaypoint.ts","../src/generated/models/SourceId.ts","../src/generated/models/TraceAttributeKey.ts","../src/generated/models/TraceAttributeFilterOptions.ts","../src/generated/models/TraceEdge.ts","../src/generated/models/TraceAttributesBaseResponse.ts","../src/generated/models/TraceAttributesRequest.ts","../src/generated/models/TraceAttributesResponse.ts","../src/generated/models/TzResponse.ts","../src/generated/apis/GeospatialApi.ts","../src/generated/apis/RoutingApi.ts","../src/generated/apis/GeocodingApi.ts","../src/geocoding.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport const BASE_PATH = \"https://api.stadiamaps.com\".replace(/\\/+$/, \"\");\n\nexport interface ConfigurationParameters {\n  basePath?: string; // override base path\n  fetchApi?: FetchAPI; // override for fetch implementation\n  middleware?: Middleware[]; // middleware to apply before/after fetch requests\n  queryParamsStringify?: (params: HTTPQuery) => string; // stringify function for query strings\n  username?: string; // parameter for basic security\n  password?: string; // parameter for basic security\n  apiKey?:\n    | string\n    | Promise<string>\n    | ((name: string) => string | Promise<string>); // parameter for apiKey security\n  accessToken?:\n    | string\n    | Promise<string>\n    | ((name?: string, scopes?: string[]) => string | Promise<string>); // parameter for oauth2 security\n  headers?: HTTPHeaders; //header params we want to use on every request\n  credentials?: RequestCredentials; //value for the credentials param we want to use on each request\n}\n\nexport class Configuration {\n  constructor(private configuration: ConfigurationParameters = {}) {}\n\n  set config(configuration: Configuration) {\n    this.configuration = configuration;\n  }\n\n  get basePath(): string {\n    return this.configuration.basePath != null\n      ? this.configuration.basePath\n      : BASE_PATH;\n  }\n\n  get fetchApi(): FetchAPI | undefined {\n    return this.configuration.fetchApi;\n  }\n\n  get middleware(): Middleware[] {\n    return this.configuration.middleware || [];\n  }\n\n  get queryParamsStringify(): (params: HTTPQuery) => string {\n    return this.configuration.queryParamsStringify || querystring;\n  }\n\n  get username(): string | undefined {\n    return this.configuration.username;\n  }\n\n  get password(): string | undefined {\n    return this.configuration.password;\n  }\n\n  get apiKey(): ((name: string) => string | Promise<string>) | undefined {\n    const apiKey = this.configuration.apiKey;\n    if (apiKey) {\n      return typeof apiKey === \"function\" ? apiKey : () => apiKey;\n    }\n    return undefined;\n  }\n\n  get accessToken():\n    | ((name?: string, scopes?: string[]) => string | Promise<string>)\n    | undefined {\n    const accessToken = this.configuration.accessToken;\n    if (accessToken) {\n      return typeof accessToken === \"function\"\n        ? accessToken\n        : async () => accessToken;\n    }\n    return undefined;\n  }\n\n  get headers(): HTTPHeaders | undefined {\n    return this.configuration.headers;\n  }\n\n  get credentials(): RequestCredentials | undefined {\n    return this.configuration.credentials;\n  }\n}\n\nexport const DefaultConfig = new Configuration();\n\n/**\n * This is the base class for all generated API classes.\n */\nexport class BaseAPI {\n  private static readonly jsonRegex = new RegExp(\n    \"^(:?application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(:?;.*)?$\",\n    \"i\",\n  );\n  private middleware: Middleware[];\n\n  constructor(protected configuration = DefaultConfig) {\n    this.middleware = configuration.middleware;\n  }\n\n  withMiddleware<T extends BaseAPI>(this: T, ...middlewares: Middleware[]) {\n    const next = this.clone<T>();\n    next.middleware = next.middleware.concat(...middlewares);\n    return next;\n  }\n\n  withPreMiddleware<T extends BaseAPI>(\n    this: T,\n    ...preMiddlewares: Array<Middleware[\"pre\"]>\n  ) {\n    const middlewares = preMiddlewares.map((pre) => ({ pre }));\n    return this.withMiddleware<T>(...middlewares);\n  }\n\n  withPostMiddleware<T extends BaseAPI>(\n    this: T,\n    ...postMiddlewares: Array<Middleware[\"post\"]>\n  ) {\n    const middlewares = postMiddlewares.map((post) => ({ post }));\n    return this.withMiddleware<T>(...middlewares);\n  }\n\n  /**\n   * Check if the given MIME is a JSON MIME.\n   * JSON MIME examples:\n   *   application/json\n   *   application/json; charset=UTF8\n   *   APPLICATION/JSON\n   *   application/vnd.company+json\n   * @param mime - MIME (Multipurpose Internet Mail Extensions)\n   * @return True if the given MIME is JSON, false otherwise.\n   */\n  protected isJsonMime(mime: string | null | undefined): boolean {\n    if (!mime) {\n      return false;\n    }\n    return BaseAPI.jsonRegex.test(mime);\n  }\n\n  protected async request(\n    context: RequestOpts,\n    initOverrides?: RequestInit | InitOverrideFunction,\n  ): Promise<Response> {\n    const { url, init } = await this.createFetchParams(context, initOverrides);\n    const response = await this.fetchApi(url, init);\n    if (response && response.status >= 200 && response.status < 300) {\n      return response;\n    }\n    throw new ResponseError(response, \"Response returned an error code\");\n  }\n\n  private async createFetchParams(\n    context: RequestOpts,\n    initOverrides?: RequestInit | InitOverrideFunction,\n  ) {\n    let url = this.configuration.basePath + context.path;\n    if (\n      context.query !== undefined &&\n      Object.keys(context.query).length !== 0\n    ) {\n      // only add the querystring to the URL if there are query parameters.\n      // this is done to avoid urls ending with a \"?\" character which buggy webservers\n      // do not handle correctly sometimes.\n      url += \"?\" + this.configuration.queryParamsStringify(context.query);\n    }\n\n    const headers = Object.assign(\n      {},\n      this.configuration.headers,\n      context.headers,\n    );\n    Object.keys(headers).forEach((key) =>\n      headers[key] === undefined ? delete headers[key] : {},\n    );\n\n    const initOverrideFn =\n      typeof initOverrides === \"function\"\n        ? initOverrides\n        : async () => initOverrides;\n\n    const initParams = {\n      method: context.method,\n      headers,\n      body: context.body,\n      credentials: this.configuration.credentials,\n    };\n\n    const overriddenInit: RequestInit = {\n      ...initParams,\n      ...(await initOverrideFn({\n        init: initParams,\n        context,\n      })),\n    };\n\n    let body: any;\n    if (\n      isFormData(overriddenInit.body) ||\n      overriddenInit.body instanceof URLSearchParams ||\n      isBlob(overriddenInit.body)\n    ) {\n      body = overriddenInit.body;\n    } else if (this.isJsonMime(headers[\"Content-Type\"])) {\n      body = JSON.stringify(overriddenInit.body);\n    } else {\n      body = overriddenInit.body;\n    }\n\n    const init: RequestInit = {\n      ...overriddenInit,\n      body,\n    };\n\n    return { url, init };\n  }\n\n  private fetchApi = async (url: string, init: RequestInit) => {\n    let fetchParams = { url, init };\n    for (const middleware of this.middleware) {\n      if (middleware.pre) {\n        fetchParams =\n          (await middleware.pre({\n            fetch: this.fetchApi,\n            ...fetchParams,\n          })) || fetchParams;\n      }\n    }\n    let response: Response | undefined = undefined;\n    try {\n      response = await (this.configuration.fetchApi || fetch)(\n        fetchParams.url,\n        fetchParams.init,\n      );\n    } catch (e) {\n      for (const middleware of this.middleware) {\n        if (middleware.onError) {\n          response =\n            (await middleware.onError({\n              fetch: this.fetchApi,\n              url: fetchParams.url,\n              init: fetchParams.init,\n              error: e,\n              response: response ? response.clone() : undefined,\n            })) || response;\n        }\n      }\n      if (response === undefined) {\n        if (e instanceof Error) {\n          throw new FetchError(\n            e,\n            \"The request failed and the interceptors did not return an alternative response\",\n          );\n        } else {\n          throw e;\n        }\n      }\n    }\n    for (const middleware of this.middleware) {\n      if (middleware.post) {\n        response =\n          (await middleware.post({\n            fetch: this.fetchApi,\n            url: fetchParams.url,\n            init: fetchParams.init,\n            response: response.clone(),\n          })) || response;\n      }\n    }\n    return response;\n  };\n\n  /**\n   * Create a shallow clone of `this` by constructing a new instance\n   * and then shallow cloning data members.\n   */\n  private clone<T extends BaseAPI>(this: T): T {\n    const constructor = this.constructor as any;\n    const next = new constructor(this.configuration);\n    next.middleware = this.middleware.slice();\n    return next;\n  }\n}\n\nfunction isBlob(value: any): value is Blob {\n  return typeof Blob !== \"undefined\" && value instanceof Blob;\n}\n\nfunction isFormData(value: any): value is FormData {\n  return typeof FormData !== \"undefined\" && value instanceof FormData;\n}\n\nexport class ResponseError extends Error {\n  override name: \"ResponseError\" = \"ResponseError\";\n  constructor(\n    public response: Response,\n    msg?: string,\n  ) {\n    super(msg);\n  }\n}\n\nexport class FetchError extends Error {\n  override name: \"FetchError\" = \"FetchError\";\n  constructor(\n    public cause: Error,\n    msg?: string,\n  ) {\n    super(msg);\n  }\n}\n\nexport class RequiredError extends Error {\n  override name: \"RequiredError\" = \"RequiredError\";\n  constructor(\n    public field: string,\n    msg?: string,\n  ) {\n    super(msg);\n  }\n}\n\nexport const COLLECTION_FORMATS = {\n  csv: \",\",\n  ssv: \" \",\n  tsv: \"\\t\",\n  pipes: \"|\",\n};\n\nexport type FetchAPI = WindowOrWorkerGlobalScope[\"fetch\"];\n\nexport type Json = any;\nexport type HTTPMethod =\n  | \"GET\"\n  | \"POST\"\n  | \"PUT\"\n  | \"PATCH\"\n  | \"DELETE\"\n  | \"OPTIONS\"\n  | \"HEAD\";\nexport type HTTPHeaders = { [key: string]: string };\nexport type HTTPQuery = {\n  [key: string]:\n    | string\n    | number\n    | null\n    | boolean\n    | Array<string | number | null | boolean>\n    | Set<string | number | null | boolean>\n    | HTTPQuery;\n};\nexport type HTTPBody = Json | FormData | URLSearchParams;\nexport type HTTPRequestInit = {\n  headers?: HTTPHeaders;\n  method: HTTPMethod;\n  credentials?: RequestCredentials;\n  body?: HTTPBody;\n};\nexport type ModelPropertyNaming =\n  | \"camelCase\"\n  | \"snake_case\"\n  | \"PascalCase\"\n  | \"original\";\n\nexport type InitOverrideFunction = (requestContext: {\n  init: HTTPRequestInit;\n  context: RequestOpts;\n}) => Promise<RequestInit>;\n\nexport interface FetchParams {\n  url: string;\n  init: RequestInit;\n}\n\nexport interface RequestOpts {\n  path: string;\n  method: HTTPMethod;\n  headers: HTTPHeaders;\n  query?: HTTPQuery;\n  body?: HTTPBody;\n}\n\nexport function querystring(params: HTTPQuery, prefix: string = \"\"): string {\n  return Object.keys(params)\n    .map((key) => querystringSingleKey(key, params[key], prefix))\n    .filter((part) => part.length > 0)\n    .join(\"&\");\n}\n\nfunction querystringSingleKey(\n  key: string,\n  value:\n    | string\n    | number\n    | null\n    | undefined\n    | boolean\n    | Array<string | number | null | boolean>\n    | Set<string | number | null | boolean>\n    | HTTPQuery,\n  keyPrefix: string = \"\",\n): string {\n  const fullKey = keyPrefix + (keyPrefix.length ? `[${key}]` : key);\n  if (value instanceof Array) {\n    const multiValue = value\n      .map((singleValue) => encodeURIComponent(String(singleValue)))\n      .join(`&${encodeURIComponent(fullKey)}=`);\n    return `${encodeURIComponent(fullKey)}=${multiValue}`;\n  }\n  if (value instanceof Set) {\n    const valueAsArray = Array.from(value);\n    return querystringSingleKey(key, valueAsArray, keyPrefix);\n  }\n  if (value instanceof Date) {\n    return `${encodeURIComponent(fullKey)}=${encodeURIComponent(value.toISOString())}`;\n  }\n  if (value instanceof Object) {\n    return querystring(value as HTTPQuery, fullKey);\n  }\n  return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;\n}\n\nexport function exists(json: any, key: string) {\n  const value = json[key];\n  return value !== null && value !== undefined;\n}\n\nexport function mapValues(data: any, fn: (item: any) => any) {\n  const result: { [key: string]: any } = {};\n  for (const key of Object.keys(data)) {\n    result[key] = fn(data[key]);\n  }\n  return result;\n}\n\nexport function canConsumeForm(consumes: Consume[]): boolean {\n  for (const consume of consumes) {\n    if (\"multipart/form-data\" === consume.contentType) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport interface Consume {\n  contentType: string;\n}\n\nexport interface RequestContext {\n  fetch: FetchAPI;\n  url: string;\n  init: RequestInit;\n}\n\nexport interface ResponseContext {\n  fetch: FetchAPI;\n  url: string;\n  init: RequestInit;\n  response: Response;\n}\n\nexport interface ErrorContext {\n  fetch: FetchAPI;\n  url: string;\n  init: RequestInit;\n  error: unknown;\n  response?: Response;\n}\n\nexport interface Middleware {\n  pre?(context: RequestContext): Promise<FetchParams | void>;\n  post?(context: ResponseContext): Promise<Response | void>;\n  onError?(context: ErrorContext): Promise<Response | void>;\n}\n\nexport interface ApiResponse<T> {\n  raw: Response;\n  value(): Promise<T>;\n}\n\nexport interface ResponseTransformer<T> {\n  (json: any): T;\n}\n\nexport class JSONApiResponse<T> {\n  constructor(\n    public raw: Response,\n    private transformer: ResponseTransformer<T> = (jsonValue: any) => jsonValue,\n  ) {}\n\n  async value(): Promise<T> {\n    return this.transformer(await this.raw.json());\n  }\n}\n\nexport class VoidApiResponse {\n  constructor(public raw: Response) {}\n\n  async value(): Promise<void> {\n    return undefined;\n  }\n}\n\nexport class BlobApiResponse {\n  constructor(public raw: Response) {}\n\n  async value(): Promise<Blob> {\n    return await this.raw.blob();\n  }\n}\n\nexport class TextApiResponse {\n  constructor(public raw: Response) {}\n\n  async value(): Promise<string> {\n    return await this.raw.text();\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface Access\n */\nexport interface Access {\n  /**\n   *\n   * @type {boolean}\n   * @memberof Access\n   */\n  golfCart?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Access\n   */\n  wheelchair?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Access\n   */\n  taxi?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Access\n   */\n  hOV?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Access\n   */\n  truck?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Access\n   */\n  emergency?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Access\n   */\n  pedestrian?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Access\n   */\n  car?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Access\n   */\n  bus?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Access\n   */\n  bicycle?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Access\n   */\n  motorcycle?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Access\n   */\n  moped?: boolean;\n}\n\n/**\n * Check if a given object implements the Access interface.\n */\nexport function instanceOfAccess(value: object): value is Access {\n  return true;\n}\n\nexport function AccessFromJSON(json: any): Access {\n  return AccessFromJSONTyped(json, false);\n}\n\nexport function AccessFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): Access {\n  if (json == null) {\n    return json;\n  }\n  return {\n    golfCart: json[\"golf_cart\"] == null ? undefined : json[\"golf_cart\"],\n    wheelchair: json[\"wheelchair\"] == null ? undefined : json[\"wheelchair\"],\n    taxi: json[\"taxi\"] == null ? undefined : json[\"taxi\"],\n    hOV: json[\"HOV\"] == null ? undefined : json[\"HOV\"],\n    truck: json[\"truck\"] == null ? undefined : json[\"truck\"],\n    emergency: json[\"emergency\"] == null ? undefined : json[\"emergency\"],\n    pedestrian: json[\"pedestrian\"] == null ? undefined : json[\"pedestrian\"],\n    car: json[\"car\"] == null ? undefined : json[\"car\"],\n    bus: json[\"bus\"] == null ? undefined : json[\"bus\"],\n    bicycle: json[\"bicycle\"] == null ? undefined : json[\"bicycle\"],\n    motorcycle: json[\"motorcycle\"] == null ? undefined : json[\"motorcycle\"],\n    moped: json[\"moped\"] == null ? undefined : json[\"moped\"],\n  };\n}\n\nexport function AccessToJSON(json: any): Access {\n  return AccessToJSONTyped(json, false);\n}\n\nexport function AccessToJSONTyped(\n  value?: Access | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    golf_cart: value[\"golfCart\"],\n    wheelchair: value[\"wheelchair\"],\n    taxi: value[\"taxi\"],\n    HOV: value[\"hOV\"],\n    truck: value[\"truck\"],\n    emergency: value[\"emergency\"],\n    pedestrian: value[\"pedestrian\"],\n    car: value[\"car\"],\n    bus: value[\"bus\"],\n    bicycle: value[\"bicycle\"],\n    motorcycle: value[\"motorcycle\"],\n    moped: value[\"moped\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface FoursquareAddendum\n */\nexport interface FoursquareAddendum {\n  /**\n   *\n   * @type {string}\n   * @memberof FoursquareAddendum\n   */\n  tel?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof FoursquareAddendum\n   */\n  website?: string | null;\n}\n\n/**\n * Check if a given object implements the FoursquareAddendum interface.\n */\nexport function instanceOfFoursquareAddendum(\n  value: object,\n): value is FoursquareAddendum {\n  return true;\n}\n\nexport function FoursquareAddendumFromJSON(json: any): FoursquareAddendum {\n  return FoursquareAddendumFromJSONTyped(json, false);\n}\n\nexport function FoursquareAddendumFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): FoursquareAddendum {\n  if (json == null) {\n    return json;\n  }\n  return {\n    tel: json[\"tel\"] == null ? undefined : json[\"tel\"],\n    website: json[\"website\"] == null ? undefined : json[\"website\"],\n  };\n}\n\nexport function FoursquareAddendumToJSON(json: any): FoursquareAddendum {\n  return FoursquareAddendumToJSONTyped(json, false);\n}\n\nexport function FoursquareAddendumToJSONTyped(\n  value?: FoursquareAddendum | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    tel: value[\"tel\"],\n    website: value[\"website\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface WhosOnFirstConcordances\n */\nexport interface WhosOnFirstConcordances {\n  /**\n   *\n   * @type {string}\n   * @memberof WhosOnFirstConcordances\n   */\n  eurographicsGiscoId?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof WhosOnFirstConcordances\n   */\n  faaCode?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof WhosOnFirstConcordances\n   */\n  factualId?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof WhosOnFirstConcordances\n   */\n  fifaId?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof WhosOnFirstConcordances\n   */\n  fipsCode?: string | null;\n  /**\n   * An Open Data France EPCI code.\n   * @type {number}\n   * @memberof WhosOnFirstConcordances\n   */\n  frGovEpciCode?: number | null;\n  /**\n   * Institut national de la statistique et des études économiques (Insee) code\n   * @type {number}\n   * @memberof WhosOnFirstConcordances\n   */\n  fraInseeCode?: number | null;\n  /**\n   *\n   * @type {number}\n   * @memberof WhosOnFirstConcordances\n   */\n  geonamesId?: number | null;\n  /**\n   *\n   * @type {number}\n   * @memberof WhosOnFirstConcordances\n   */\n  geoplanetId?: number | null;\n  /**\n   * A Statoids HASC ID.\n   * @type {string}\n   * @memberof WhosOnFirstConcordances\n   */\n  hascId?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof WhosOnFirstConcordances\n   */\n  iataCode?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof WhosOnFirstConcordances\n   */\n  icaoCode?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof WhosOnFirstConcordances\n   */\n  ituId?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof WhosOnFirstConcordances\n   */\n  karmashapesId?: string | null;\n  /**\n   *\n   * @type {number}\n   * @memberof WhosOnFirstConcordances\n   */\n  naturalEarthId?: number | null;\n  /**\n   * A Eurostat NUTS 2021 ID\n   * @type {string}\n   * @memberof WhosOnFirstConcordances\n   */\n  nuts2021Id?: string | null;\n  /**\n   *\n   * @type {number}\n   * @memberof WhosOnFirstConcordances\n   */\n  quattroshapesId?: number | null;\n  /**\n   * A Quattroshapes Point Gazetteer ID.\n   * @type {number}\n   * @memberof WhosOnFirstConcordances\n   */\n  quattroshapesPgId?: number | null;\n  /**\n   *\n   * @type {number}\n   * @memberof WhosOnFirstConcordances\n   */\n  usCensusGeoId?: number | null;\n  /**\n   *\n   * @type {string}\n   * @memberof WhosOnFirstConcordances\n   */\n  wikidataId?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof WhosOnFirstConcordances\n   */\n  wikipediaPage?: string | null;\n}\n\n/**\n * Check if a given object implements the WhosOnFirstConcordances interface.\n */\nexport function instanceOfWhosOnFirstConcordances(\n  value: object,\n): value is WhosOnFirstConcordances {\n  return true;\n}\n\nexport function WhosOnFirstConcordancesFromJSON(\n  json: any,\n): WhosOnFirstConcordances {\n  return WhosOnFirstConcordancesFromJSONTyped(json, false);\n}\n\nexport function WhosOnFirstConcordancesFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): WhosOnFirstConcordances {\n  if (json == null) {\n    return json;\n  }\n  return {\n    eurographicsGiscoId:\n      json[\"eurographics_gisco_id\"] == null\n        ? undefined\n        : json[\"eurographics_gisco_id\"],\n    faaCode: json[\"faa_code\"] == null ? undefined : json[\"faa_code\"],\n    factualId: json[\"factual_id\"] == null ? undefined : json[\"factual_id\"],\n    fifaId: json[\"fifa_id\"] == null ? undefined : json[\"fifa_id\"],\n    fipsCode: json[\"fips_code\"] == null ? undefined : json[\"fips_code\"],\n    frGovEpciCode:\n      json[\"fr_gov_epci_code\"] == null ? undefined : json[\"fr_gov_epci_code\"],\n    fraInseeCode:\n      json[\"fra_insee_code\"] == null ? undefined : json[\"fra_insee_code\"],\n    geonamesId: json[\"geonames_id\"] == null ? undefined : json[\"geonames_id\"],\n    geoplanetId:\n      json[\"geoplanet_id\"] == null ? undefined : json[\"geoplanet_id\"],\n    hascId: json[\"hasc_id\"] == null ? undefined : json[\"hasc_id\"],\n    iataCode: json[\"iata_code\"] == null ? undefined : json[\"iata_code\"],\n    icaoCode: json[\"icao_code\"] == null ? undefined : json[\"icao_code\"],\n    ituId: json[\"itu_id\"] == null ? undefined : json[\"itu_id\"],\n    karmashapesId:\n      json[\"karmashapes_id\"] == null ? undefined : json[\"karmashapes_id\"],\n    naturalEarthId:\n      json[\"natural_earth_id\"] == null ? undefined : json[\"natural_earth_id\"],\n    nuts2021Id: json[\"nuts_2021_id\"] == null ? undefined : json[\"nuts_2021_id\"],\n    quattroshapesId:\n      json[\"quattroshapes_id\"] == null ? undefined : json[\"quattroshapes_id\"],\n    quattroshapesPgId:\n      json[\"quattroshapes_pg_id\"] == null\n        ? undefined\n        : json[\"quattroshapes_pg_id\"],\n    usCensusGeoId:\n      json[\"us_census_geo_id\"] == null ? undefined : json[\"us_census_geo_id\"],\n    wikidataId: json[\"wikidata_id\"] == null ? undefined : json[\"wikidata_id\"],\n    wikipediaPage:\n      json[\"wikipedia_page\"] == null ? undefined : json[\"wikipedia_page\"],\n  };\n}\n\nexport function WhosOnFirstConcordancesToJSON(\n  json: any,\n): WhosOnFirstConcordances {\n  return WhosOnFirstConcordancesToJSONTyped(json, false);\n}\n\nexport function WhosOnFirstConcordancesToJSONTyped(\n  value?: WhosOnFirstConcordances | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    eurographics_gisco_id: value[\"eurographicsGiscoId\"],\n    faa_code: value[\"faaCode\"],\n    factual_id: value[\"factualId\"],\n    fifa_id: value[\"fifaId\"],\n    fips_code: value[\"fipsCode\"],\n    fr_gov_epci_code: value[\"frGovEpciCode\"],\n    fra_insee_code: value[\"fraInseeCode\"],\n    geonames_id: value[\"geonamesId\"],\n    geoplanet_id: value[\"geoplanetId\"],\n    hasc_id: value[\"hascId\"],\n    iata_code: value[\"iataCode\"],\n    icao_code: value[\"icaoCode\"],\n    itu_id: value[\"ituId\"],\n    karmashapes_id: value[\"karmashapesId\"],\n    natural_earth_id: value[\"naturalEarthId\"],\n    nuts_2021_id: value[\"nuts2021Id\"],\n    quattroshapes_id: value[\"quattroshapesId\"],\n    quattroshapes_pg_id: value[\"quattroshapesPgId\"],\n    us_census_geo_id: value[\"usCensusGeoId\"],\n    wikidata_id: value[\"wikidataId\"],\n    wikipedia_page: value[\"wikipediaPage\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n * OpenStreetMap-specific additional fields.\n *\n * These values are exactly as they appear in the associated OSM tag.\n * @export\n * @interface OpenStreetMapAddendum\n */\nexport interface OpenStreetMapAddendum {\n  /**\n   * The principal brand of goods/services sold at a place,\n   * or the common identity for individually owned and operated stores.\n   * @type {string}\n   * @memberof OpenStreetMapAddendum\n   */\n  brand?: string | null;\n  /**\n   * IATA airport code.\n   * @type {string}\n   * @memberof OpenStreetMapAddendum\n   */\n  iata?: string | null;\n  /**\n   * ICAO airport code.\n   * @type {string}\n   * @memberof OpenStreetMapAddendum\n   */\n  icao?: string | null;\n  /**\n   * The opening hours of the place, in the OSM Opening Hours specification.\n   *\n   * See https://wiki.openstreetmap.org/wiki/Key:opening_hours/specification for details.\n   * @type {string}\n   * @memberof OpenStreetMapAddendum\n   */\n  openingHours?: string | null;\n  /**\n   * THe company, corp, person, or other entity directly in charge of operating something.\n   *\n   * This is often used for public transport, hotels, restaurants, and postal services.\n   * See https://wiki.openstreetmap.org/wiki/Key:operator for details\n   * @type {string}\n   * @memberof OpenStreetMapAddendum\n   */\n  operator?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof OpenStreetMapAddendum\n   */\n  phone?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof OpenStreetMapAddendum\n   */\n  website?: string | null;\n  /**\n   * Is this place wheelchair accessible?\n   * @type {string}\n   * @memberof OpenStreetMapAddendum\n   */\n  wheelchair?: string | null;\n  /**\n   * Wikidata concordance ID.\n   * @type {string}\n   * @memberof OpenStreetMapAddendum\n   */\n  wikidata?: string | null;\n  /**\n   * Wikipedia concordance ID.\n   * @type {string}\n   * @memberof OpenStreetMapAddendum\n   */\n  wikipedia?: string | null;\n}\n\n/**\n * Check if a given object implements the OpenStreetMapAddendum interface.\n */\nexport function instanceOfOpenStreetMapAddendum(\n  value: object,\n): value is OpenStreetMapAddendum {\n  return true;\n}\n\nexport function OpenStreetMapAddendumFromJSON(\n  json: any,\n): OpenStreetMapAddendum {\n  return OpenStreetMapAddendumFromJSONTyped(json, false);\n}\n\nexport function OpenStreetMapAddendumFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): OpenStreetMapAddendum {\n  if (json == null) {\n    return json;\n  }\n  return {\n    brand: json[\"brand\"] == null ? undefined : json[\"brand\"],\n    iata: json[\"iata\"] == null ? undefined : json[\"iata\"],\n    icao: json[\"icao\"] == null ? undefined : json[\"icao\"],\n    openingHours:\n      json[\"opening_hours\"] == null ? undefined : json[\"opening_hours\"],\n    operator: json[\"operator\"] == null ? undefined : json[\"operator\"],\n    phone: json[\"phone\"] == null ? undefined : json[\"phone\"],\n    website: json[\"website\"] == null ? undefined : json[\"website\"],\n    wheelchair: json[\"wheelchair\"] == null ? undefined : json[\"wheelchair\"],\n    wikidata: json[\"wikidata\"] == null ? undefined : json[\"wikidata\"],\n    wikipedia: json[\"wikipedia\"] == null ? undefined : json[\"wikipedia\"],\n  };\n}\n\nexport function OpenStreetMapAddendumToJSON(json: any): OpenStreetMapAddendum {\n  return OpenStreetMapAddendumToJSONTyped(json, false);\n}\n\nexport function OpenStreetMapAddendumToJSONTyped(\n  value?: OpenStreetMapAddendum | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    brand: value[\"brand\"],\n    iata: value[\"iata\"],\n    icao: value[\"icao\"],\n    opening_hours: value[\"openingHours\"],\n    operator: value[\"operator\"],\n    phone: value[\"phone\"],\n    website: value[\"website\"],\n    wheelchair: value[\"wheelchair\"],\n    wikidata: value[\"wikidata\"],\n    wikipedia: value[\"wikipedia\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface GeonamesAddendum\n */\nexport interface GeonamesAddendum {\n  /**\n   * The GeoNames feature code (for GeoNames results only).\n   * @type {string}\n   * @memberof GeonamesAddendum\n   */\n  featureCode: string;\n}\n\n/**\n * Check if a given object implements the GeonamesAddendum interface.\n */\nexport function instanceOfGeonamesAddendum(\n  value: object,\n): value is GeonamesAddendum {\n  if (!(\"featureCode\" in value) || value[\"featureCode\"] === undefined)\n    return false;\n  return true;\n}\n\nexport function GeonamesAddendumFromJSON(json: any): GeonamesAddendum {\n  return GeonamesAddendumFromJSONTyped(json, false);\n}\n\nexport function GeonamesAddendumFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): GeonamesAddendum {\n  if (json == null) {\n    return json;\n  }\n  return {\n    featureCode: json[\"feature_code\"],\n  };\n}\n\nexport function GeonamesAddendumToJSON(json: any): GeonamesAddendum {\n  return GeonamesAddendumToJSONTyped(json, false);\n}\n\nexport function GeonamesAddendumToJSONTyped(\n  value?: GeonamesAddendum | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    feature_code: value[\"featureCode\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { FoursquareAddendum } from \"./FoursquareAddendum\";\nimport {\n  FoursquareAddendumFromJSON,\n  FoursquareAddendumFromJSONTyped,\n  FoursquareAddendumToJSON,\n  FoursquareAddendumToJSONTyped,\n} from \"./FoursquareAddendum\";\nimport type { WhosOnFirstConcordances } from \"./WhosOnFirstConcordances\";\nimport {\n  WhosOnFirstConcordancesFromJSON,\n  WhosOnFirstConcordancesFromJSONTyped,\n  WhosOnFirstConcordancesToJSON,\n  WhosOnFirstConcordancesToJSONTyped,\n} from \"./WhosOnFirstConcordances\";\nimport type { OpenStreetMapAddendum } from \"./OpenStreetMapAddendum\";\nimport {\n  OpenStreetMapAddendumFromJSON,\n  OpenStreetMapAddendumFromJSONTyped,\n  OpenStreetMapAddendumToJSON,\n  OpenStreetMapAddendumToJSONTyped,\n} from \"./OpenStreetMapAddendum\";\nimport type { GeonamesAddendum } from \"./GeonamesAddendum\";\nimport {\n  GeonamesAddendumFromJSON,\n  GeonamesAddendumFromJSONTyped,\n  GeonamesAddendumToJSON,\n  GeonamesAddendumToJSONTyped,\n} from \"./GeonamesAddendum\";\n\n/**\n * Miscellaneous data that doesn't quite fit anywhere else in the record.\n * @export\n * @interface AddendumV2\n */\nexport interface AddendumV2 {\n  /**\n   *\n   * @type {FoursquareAddendum}\n   * @memberof AddendumV2\n   */\n  foursquare?: FoursquareAddendum | null;\n  /**\n   *\n   * @type {GeonamesAddendum}\n   * @memberof AddendumV2\n   */\n  geonames?: GeonamesAddendum | null;\n  /**\n   *\n   * @type {OpenStreetMapAddendum}\n   * @memberof AddendumV2\n   */\n  osm?: OpenStreetMapAddendum | null;\n  /**\n   *\n   * @type {WhosOnFirstConcordances}\n   * @memberof AddendumV2\n   */\n  whosonfirstConcordances?: WhosOnFirstConcordances | null;\n}\n\n/**\n * Check if a given object implements the AddendumV2 interface.\n */\nexport function instanceOfAddendumV2(value: object): value is AddendumV2 {\n  return true;\n}\n\nexport function AddendumV2FromJSON(json: any): AddendumV2 {\n  return AddendumV2FromJSONTyped(json, false);\n}\n\nexport function AddendumV2FromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): AddendumV2 {\n  if (json == null) {\n    return json;\n  }\n  return {\n    foursquare:\n      json[\"foursquare\"] == null\n        ? undefined\n        : FoursquareAddendumFromJSON(json[\"foursquare\"]),\n    geonames:\n      json[\"geonames\"] == null\n        ? undefined\n        : GeonamesAddendumFromJSON(json[\"geonames\"]),\n    osm:\n      json[\"osm\"] == null\n        ? undefined\n        : OpenStreetMapAddendumFromJSON(json[\"osm\"]),\n    whosonfirstConcordances:\n      json[\"whosonfirst_concordances\"] == null\n        ? undefined\n        : WhosOnFirstConcordancesFromJSON(json[\"whosonfirst_concordances\"]),\n  };\n}\n\nexport function AddendumV2ToJSON(json: any): AddendumV2 {\n  return AddendumV2ToJSONTyped(json, false);\n}\n\nexport function AddendumV2ToJSONTyped(\n  value?: AddendumV2 | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    foursquare: FoursquareAddendumToJSON(value[\"foursquare\"]),\n    geonames: GeonamesAddendumToJSON(value[\"geonames\"]),\n    osm: OpenStreetMapAddendumToJSON(value[\"osm\"]),\n    whosonfirst_concordances: WhosOnFirstConcordancesToJSON(\n      value[\"whosonfirstConcordances\"],\n    ),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n * Structured address components.\n * @export\n * @interface AddressComponentsV2\n */\nexport interface AddressComponentsV2 {\n  /**\n   * The cross street address component (rarely used).\n   * @type {string}\n   * @memberof AddressComponentsV2\n   */\n  crossStreet?: string | null;\n  /**\n   * The house / building number.\n   *\n   * Note that, despite the name, this is not strictly numeric.\n   * Values such as 30-1 and 11A may be valid building/house numbers in some areas.\n   * @type {string}\n   * @memberof AddressComponentsV2\n   */\n  number?: string | null;\n  /**\n   * The postal code.\n   * @type {string}\n   * @memberof AddressComponentsV2\n   */\n  postalCode?: string | null;\n  /**\n   * The street component of the address.\n   * @type {string}\n   * @memberof AddressComponentsV2\n   */\n  street?: string | null;\n  /**\n   * The unit number (where available).\n   * @type {string}\n   * @memberof AddressComponentsV2\n   */\n  unit?: string | null;\n}\n\n/**\n * Check if a given object implements the AddressComponentsV2 interface.\n */\nexport function instanceOfAddressComponentsV2(\n  value: object,\n): value is AddressComponentsV2 {\n  return true;\n}\n\nexport function AddressComponentsV2FromJSON(json: any): AddressComponentsV2 {\n  return AddressComponentsV2FromJSONTyped(json, false);\n}\n\nexport function AddressComponentsV2FromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): AddressComponentsV2 {\n  if (json == null) {\n    return json;\n  }\n  return {\n    crossStreet:\n      json[\"cross_street\"] == null ? undefined : json[\"cross_street\"],\n    number: json[\"number\"] == null ? undefined : json[\"number\"],\n    postalCode: json[\"postal_code\"] == null ? undefined : json[\"postal_code\"],\n    street: json[\"street\"] == null ? undefined : json[\"street\"],\n    unit: json[\"unit\"] == null ? undefined : json[\"unit\"],\n  };\n}\n\nexport function AddressComponentsV2ToJSON(json: any): AddressComponentsV2 {\n  return AddressComponentsV2ToJSONTyped(json, false);\n}\n\nexport function AddressComponentsV2ToJSONTyped(\n  value?: AddressComponentsV2 | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    cross_street: value[\"crossStreet\"],\n    number: value[\"number\"],\n    postal_code: value[\"postalCode\"],\n    street: value[\"street\"],\n    unit: value[\"unit\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface AdminRegion\n */\nexport interface AdminRegion {\n  /**\n   * The [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code.\n   * @type {string}\n   * @memberof AdminRegion\n   */\n  countryCode?: string;\n  /**\n   * The country name\n   * @type {string}\n   * @memberof AdminRegion\n   */\n  countryText?: string;\n  /**\n   * The abbreviation code for the state (varies by country).\n   * @type {string}\n   * @memberof AdminRegion\n   */\n  stateCode?: string;\n  /**\n   * The state name.\n   * @type {string}\n   * @memberof AdminRegion\n   */\n  stateText?: string;\n}\n\n/**\n * Check if a given object implements the AdminRegion interface.\n */\nexport function instanceOfAdminRegion(value: object): value is AdminRegion {\n  return true;\n}\n\nexport function AdminRegionFromJSON(json: any): AdminRegion {\n  return AdminRegionFromJSONTyped(json, false);\n}\n\nexport function AdminRegionFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): AdminRegion {\n  if (json == null) {\n    return json;\n  }\n  return {\n    countryCode:\n      json[\"country_code\"] == null ? undefined : json[\"country_code\"],\n    countryText:\n      json[\"country_text\"] == null ? undefined : json[\"country_text\"],\n    stateCode: json[\"state_code\"] == null ? undefined : json[\"state_code\"],\n    stateText: json[\"state_text\"] == null ? undefined : json[\"state_text\"],\n  };\n}\n\nexport function AdminRegionToJSON(json: any): AdminRegion {\n  return AdminRegionToJSONTyped(json, false);\n}\n\nexport function AdminRegionToJSONTyped(\n  value?: AdminRegion | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    country_code: value[\"countryCode\"],\n    country_text: value[\"countryText\"],\n    state_code: value[\"stateCode\"],\n    state_text: value[\"stateText\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface Administrative\n */\nexport interface Administrative {\n  /**\n   * The ISO 3166-1 alpha-2 country code of the administrative region.\n   * @type {string}\n   * @memberof Administrative\n   */\n  iso31661?: string;\n  /**\n   * The full country name.\n   * @type {string}\n   * @memberof Administrative\n   */\n  country?: string;\n  /**\n   * The ISO 3166-2 code identifying the principal subdivision (ex: provinces or states) within a country.\n   * @type {string}\n   * @memberof Administrative\n   */\n  iso31662?: string;\n  /**\n   * The full state or province name.\n   * @type {string}\n   * @memberof Administrative\n   */\n  state?: string;\n}\n\n/**\n * Check if a given object implements the Administrative interface.\n */\nexport function instanceOfAdministrative(\n  value: object,\n): value is Administrative {\n  return true;\n}\n\nexport function AdministrativeFromJSON(json: any): Administrative {\n  return AdministrativeFromJSONTyped(json, false);\n}\n\nexport function AdministrativeFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): Administrative {\n  if (json == null) {\n    return json;\n  }\n  return {\n    iso31661: json[\"iso_3166-1\"] == null ? undefined : json[\"iso_3166-1\"],\n    country: json[\"country\"] == null ? undefined : json[\"country\"],\n    iso31662: json[\"iso_3166-2\"] == null ? undefined : json[\"iso_3166-2\"],\n    state: json[\"state\"] == null ? undefined : json[\"state\"],\n  };\n}\n\nexport function AdministrativeToJSON(json: any): Administrative {\n  return AdministrativeToJSONTyped(json, false);\n}\n\nexport function AdministrativeToJSONTyped(\n  value?: Administrative | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    \"iso_3166-1\": value[\"iso31661\"],\n    country: value[\"country\"],\n    \"iso_3166-2\": value[\"iso31662\"],\n    state: value[\"state\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface AnnotationFilters\n */\nexport interface AnnotationFilters {\n  /**\n   *\n   * @type {string}\n   * @memberof AnnotationFilters\n   */\n  action?: AnnotationFiltersActionEnum;\n  /**\n   * A set of granular attributes to include between every pair of coordinates along the route. This can significantly increase the response size.\n   * @type {Array<string>}\n   * @memberof AnnotationFilters\n   */\n  attributes?: Array<AnnotationFiltersAttributesEnum>;\n}\n\n/**\n * @export\n */\nexport const AnnotationFiltersActionEnum = {\n  Include: \"include\",\n  Exclude: \"exclude\",\n} as const;\nexport type AnnotationFiltersActionEnum =\n  (typeof AnnotationFiltersActionEnum)[keyof typeof AnnotationFiltersActionEnum];\n\n/**\n * @export\n */\nexport const AnnotationFiltersAttributesEnum = {\n  ShapeAttributesSpeed: \"shape_attributes.speed\",\n  ShapeAttributesSpeedLimit: \"shape_attributes.speed_limit\",\n  ShapeAttributesTime: \"shape_attributes.time\",\n  ShapeAttributesLength: \"shape_attributes.length\",\n} as const;\nexport type AnnotationFiltersAttributesEnum =\n  (typeof AnnotationFiltersAttributesEnum)[keyof typeof AnnotationFiltersAttributesEnum];\n\n/**\n * Check if a given object implements the AnnotationFilters interface.\n */\nexport function instanceOfAnnotationFilters(\n  value: object,\n): value is AnnotationFilters {\n  return true;\n}\n\nexport function AnnotationFiltersFromJSON(json: any): AnnotationFilters {\n  return AnnotationFiltersFromJSONTyped(json, false);\n}\n\nexport function AnnotationFiltersFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): AnnotationFilters {\n  if (json == null) {\n    return json;\n  }\n  return {\n    action: json[\"action\"] == null ? undefined : json[\"action\"],\n    attributes: json[\"attributes\"] == null ? undefined : json[\"attributes\"],\n  };\n}\n\nexport function AnnotationFiltersToJSON(json: any): AnnotationFilters {\n  return AnnotationFiltersToJSONTyped(json, false);\n}\n\nexport function AnnotationFiltersToJSONTyped(\n  value?: AnnotationFilters | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    action: value[\"action\"],\n    attributes: value[\"attributes\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface AutoCostingOptions\n */\nexport interface AutoCostingOptions {\n  /**\n   * A penalty (in seconds) applied when transitioning between roads (determined by name).\n   * @type {number}\n   * @memberof AutoCostingOptions\n   */\n  maneuverPenalty?: number;\n  /**\n   * The estimated cost (in seconds) when a gate is encountered.\n   * @type {number}\n   * @memberof AutoCostingOptions\n   */\n  gateCost?: number;\n  /**\n   * A penalty (in seconds) applied to the route cost when a gate is encountered. This penalty can be used to reduce the likelihood of suggesting a route with gates unless absolutely necessary.\n   * @type {number}\n   * @memberof AutoCostingOptions\n   */\n  gatePenalty?: number;\n  /**\n   * The estimated cost (in seconds) when encountering an international border.\n   * @type {number}\n   * @memberof AutoCostingOptions\n   */\n  countryCrossingCost?: number;\n  /**\n   * A penalty applied to transitions to international border crossings. This penalty can be used to reduce the likelihood of suggesting a route with border crossings unless absolutely necessary.\n   * @type {number}\n   * @memberof AutoCostingOptions\n   */\n  countryCrossingPenalty?: number;\n  /**\n   * A penalty applied to transitions to service roads. This penalty can be used to reduce the likelihood of suggesting a route with service roads unless absolutely necessary. The default penalty is 15 for cars, busses, motor scooters, and motorcycles; and zero for others.\n   * @type {number}\n   * @memberof AutoCostingOptions\n   */\n  servicePenalty?: number;\n  /**\n   * A factor that multiplies the cost when service roads are encountered. The default is 1.2 for cars and busses, and 1 for trucks, motor scooters, and motorcycles.\n   * @type {number}\n   * @memberof AutoCostingOptions\n   */\n  serviceFactor?: number;\n  /**\n   * A measure of willingness to take living streets. Values near 0 attempt to avoid them, and values near 1 will favour them. Note that as some routes may be impossible without living streets, 0 does not guarantee avoidance of them. The default value is 0 for trucks; 0.1 for other motor vehicles; 0.5 for bicycles; and 0.6 for pedestrians.\n   * @type {number}\n   * @memberof AutoCostingOptions\n   */\n  useLivingStreets?: number;\n  /**\n   * A measure of willingness to take ferries. Values near 0 attempt to avoid ferries, and values near 1 will favour them. Note that as some routes may be impossible without ferries, 0 does not guarantee avoidance of them.\n   * @type {number}\n   * @memberof AutoCostingOptions\n   */\n  useFerry?: number;\n  /**\n   * If set to true, ignores any restrictions (eg: turn and conditional restrictions). Useful for matching GPS traces to the road network regardless of restrictions.\n   * @type {boolean}\n   * @memberof AutoCostingOptions\n   */\n  ignoreRestrictions?: boolean;\n  /**\n   * If set to true, ignores most restrictions (eg: turn and conditional restrictions), but still respects restrictions that impact vehicle safety such as weight and size.\n   * @type {boolean}\n   * @memberof AutoCostingOptions\n   */\n  ignoreNonVehicularRestrictions?: boolean;\n  /**\n   * If set to true, ignores directional restrictions on roads. Useful for matching GPS traces to the road network regardless of restrictions.\n   * @type {boolean}\n   * @memberof AutoCostingOptions\n   */\n  ignoreOneways?: boolean;\n  /**\n   * The height of the automobile (in meters).\n   * @type {number}\n   * @memberof AutoCostingOptions\n   */\n  height?: number;\n  /**\n   * The width of the automobile (in meters).\n   * @type {number}\n   * @memberof AutoCostingOptions\n   */\n  width?: number;\n  /**\n   * The estimated cost (in seconds) when a toll booth is encountered.\n   * @type {number}\n   * @memberof AutoCostingOptions\n   */\n  tollBoothCost?: number;\n  /**\n   * A penalty (in seconds) applied to the route cost when a toll booth is encountered. This penalty can be used to reduce the likelihood of suggesting a route with toll booths unless absolutely necessary.\n   * @type {number}\n   * @memberof AutoCostingOptions\n   */\n  tollBoothPenalty?: number;\n  /**\n   * The estimated cost (in seconds) when a ferry is encountered.\n   * @type {number}\n   * @memberof AutoCostingOptions\n   */\n  ferryCost?: number;\n  /**\n   * A measure of willingness to take highways. Values near 0 attempt to avoid highways, and values near 1 will favour them. Note that as some routes may be impossible without highways, 0 does not guarantee avoidance of them.\n   * @type {number}\n   * @memberof AutoCostingOptions\n   */\n  useHighways?: number;\n  /**\n   * A measure of willingness to take toll roads. Values near 0 attempt to avoid tolls, and values near 1 will favour them. Note that as some routes may be impossible without tolls, 0 does not guarantee avoidance of them.\n   * @type {number}\n   * @memberof AutoCostingOptions\n   */\n  useTolls?: number;\n  /**\n   * A measure of willingness to take track roads. Values near 0 attempt to avoid them, and values near 1 will favour them. Note that as some routes may be impossible without track roads, 0 does not guarantee avoidance of them. The default value is 0 for automobiles, busses, and trucks; and 0.5 for all other costing modes.\n   * @type {number}\n   * @memberof AutoCostingOptions\n   */\n  useTracks?: number;\n  /**\n   * The top speed (in kph) that the vehicle is capable of travelling.\n   * @type {number}\n   * @memberof AutoCostingOptions\n   */\n  topSpeed?: number;\n  /**\n   * If true changes the cost metric to be quasi-shortest (pure distance-based) costing. This will disable ALL other costing factors.\n   * @type {boolean}\n   * @memberof AutoCostingOptions\n   */\n  shortest?: boolean;\n  /**\n   * If true, ignores all known closures. This option cannot be set if `location.search_filter.exclude_closures` is also specified.\n   * @type {boolean}\n   * @memberof AutoCostingOptions\n   */\n  ignoreClosures?: boolean;\n  /**\n   * If true, indicates the desire to include HOV roads with a 2-occupant requirement in the route when advantageous.\n   * @type {boolean}\n   * @memberof AutoCostingOptions\n   */\n  includeHov2?: boolean;\n  /**\n   * If true, indicates the desire to include HOV roads with a 3-occupant requirement in the route when advantageous.\n   * @type {boolean}\n   * @memberof AutoCostingOptions\n   */\n  includeHov3?: boolean;\n  /**\n   * If true, indicates the desire to include toll roads which require the driver to pay a toll if the occupant requirement isn't met\n   * @type {boolean}\n   * @memberof AutoCostingOptions\n   */\n  includeHot?: boolean;\n  /**\n   * A factor that multiplies the cost when alleys are encountered.\n   * @type {number}\n   * @memberof AutoCostingOptions\n   */\n  alleyFactor?: number;\n}\n\n/**\n * Check if a given object implements the AutoCostingOptions interface.\n */\nexport function instanceOfAutoCostingOptions(\n  value: object,\n): value is AutoCostingOptions {\n  return true;\n}\n\nexport function AutoCostingOptionsFromJSON(json: any): AutoCostingOptions {\n  return AutoCostingOptionsFromJSONTyped(json, false);\n}\n\nexport function AutoCostingOptionsFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): AutoCostingOptions {\n  if (json == null) {\n    return json;\n  }\n  return {\n    maneuverPenalty:\n      json[\"maneuver_penalty\"] == null ? undefined : json[\"maneuver_penalty\"],\n    gateCost: json[\"gate_cost\"] == null ? undefined : json[\"gate_cost\"],\n    gatePenalty:\n      json[\"gate_penalty\"] == null ? undefined : json[\"gate_penalty\"],\n    countryCrossingCost:\n      json[\"country_crossing_cost\"] == null\n        ? undefined\n        : json[\"country_crossing_cost\"],\n    countryCrossingPenalty:\n      json[\"country_crossing_penalty\"] == null\n        ? undefined\n        : json[\"country_crossing_penalty\"],\n    servicePenalty:\n      json[\"service_penalty\"] == null ? undefined : json[\"service_penalty\"],\n    serviceFactor:\n      json[\"service_factor\"] == null ? undefined : json[\"service_factor\"],\n    useLivingStreets:\n      json[\"use_living_streets\"] == null\n        ? undefined\n        : json[\"use_living_streets\"],\n    useFerry: json[\"use_ferry\"] == null ? undefined : json[\"use_ferry\"],\n    ignoreRestrictions:\n      json[\"ignore_restrictions\"] == null\n        ? undefined\n        : json[\"ignore_restrictions\"],\n    ignoreNonVehicularRestrictions:\n      json[\"ignore_non_vehicular_restrictions\"] == null\n        ? undefined\n        : json[\"ignore_non_vehicular_restrictions\"],\n    ignoreOneways:\n      json[\"ignore_oneways\"] == null ? undefined : json[\"ignore_oneways\"],\n    height: json[\"height\"] == null ? undefined : json[\"height\"],\n    width: json[\"width\"] == null ? undefined : json[\"width\"],\n    tollBoothCost:\n      json[\"toll_booth_cost\"] == null ? undefined : json[\"toll_booth_cost\"],\n    tollBoothPenalty:\n      json[\"toll_booth_penalty\"] == null\n        ? undefined\n        : json[\"toll_booth_penalty\"],\n    ferryCost: json[\"ferry_cost\"] == null ? undefined : json[\"ferry_cost\"],\n    useHighways:\n      json[\"use_highways\"] == null ? undefined : json[\"use_highways\"],\n    useTolls: json[\"use_tolls\"] == null ? undefined : json[\"use_tolls\"],\n    useTracks: json[\"use_tracks\"] == null ? undefined : json[\"use_tracks\"],\n    topSpeed: json[\"top_speed\"] == null ? undefined : json[\"top_speed\"],\n    shortest: json[\"shortest\"] == null ? undefined : json[\"shortest\"],\n    ignoreClosures:\n      json[\"ignore_closures\"] == null ? undefined : json[\"ignore_closures\"],\n    includeHov2:\n      json[\"include_hov2\"] == null ? undefined : json[\"include_hov2\"],\n    includeHov3:\n      json[\"include_hov3\"] == null ? undefined : json[\"include_hov3\"],\n    includeHot: json[\"include_hot\"] == null ? undefined : json[\"include_hot\"],\n    alleyFactor:\n      json[\"alley_factor\"] == null ? undefined : json[\"alley_factor\"],\n  };\n}\n\nexport function AutoCostingOptionsToJSON(json: any): AutoCostingOptions {\n  return AutoCostingOptionsToJSONTyped(json, false);\n}\n\nexport function AutoCostingOptionsToJSONTyped(\n  value?: AutoCostingOptions | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    maneuver_penalty: value[\"maneuverPenalty\"],\n    gate_cost: value[\"gateCost\"],\n    gate_penalty: value[\"gatePenalty\"],\n    country_crossing_cost: value[\"countryCrossingCost\"],\n    country_crossing_penalty: value[\"countryCrossingPenalty\"],\n    service_penalty: value[\"servicePenalty\"],\n    service_factor: value[\"serviceFactor\"],\n    use_living_streets: value[\"useLivingStreets\"],\n    use_ferry: value[\"useFerry\"],\n    ignore_restrictions: value[\"ignoreRestrictions\"],\n    ignore_non_vehicular_restrictions: value[\"ignoreNonVehicularRestrictions\"],\n    ignore_oneways: value[\"ignoreOneways\"],\n    height: value[\"height\"],\n    width: value[\"width\"],\n    toll_booth_cost: value[\"tollBoothCost\"],\n    toll_booth_penalty: value[\"tollBoothPenalty\"],\n    ferry_cost: value[\"ferryCost\"],\n    use_highways: value[\"useHighways\"],\n    use_tolls: value[\"useTolls\"],\n    use_tracks: value[\"useTracks\"],\n    top_speed: value[\"topSpeed\"],\n    shortest: value[\"shortest\"],\n    ignore_closures: value[\"ignoreClosures\"],\n    include_hov2: value[\"includeHov2\"],\n    include_hov3: value[\"includeHov3\"],\n    include_hot: value[\"includeHot\"],\n    alley_factor: value[\"alleyFactor\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface BaseCostingOptions\n */\nexport interface BaseCostingOptions {\n  /**\n   * A penalty (in seconds) applied when transitioning between roads (determined by name).\n   * @type {number}\n   * @memberof BaseCostingOptions\n   */\n  maneuverPenalty?: number;\n  /**\n   * The estimated cost (in seconds) when a gate is encountered.\n   * @type {number}\n   * @memberof BaseCostingOptions\n   */\n  gateCost?: number;\n  /**\n   * A penalty (in seconds) applied to the route cost when a gate is encountered. This penalty can be used to reduce the likelihood of suggesting a route with gates unless absolutely necessary.\n   * @type {number}\n   * @memberof BaseCostingOptions\n   */\n  gatePenalty?: number;\n  /**\n   * The estimated cost (in seconds) when encountering an international border.\n   * @type {number}\n   * @memberof BaseCostingOptions\n   */\n  countryCrossingCost?: number;\n  /**\n   * A penalty applied to transitions to international border crossings. This penalty can be used to reduce the likelihood of suggesting a route with border crossings unless absolutely necessary.\n   * @type {number}\n   * @memberof BaseCostingOptions\n   */\n  countryCrossingPenalty?: number;\n  /**\n   * A penalty applied to transitions to service roads. This penalty can be used to reduce the likelihood of suggesting a route with service roads unless absolutely necessary. The default penalty is 15 for cars, busses, motor scooters, and motorcycles; and zero for others.\n   * @type {number}\n   * @memberof BaseCostingOptions\n   */\n  servicePenalty?: number;\n  /**\n   * A factor that multiplies the cost when service roads are encountered. The default is 1.2 for cars and busses, and 1 for trucks, motor scooters, and motorcycles.\n   * @type {number}\n   * @memberof BaseCostingOptions\n   */\n  serviceFactor?: number;\n  /**\n   * A measure of willingness to take living streets. Values near 0 attempt to avoid them, and values near 1 will favour them. Note that as some routes may be impossible without living streets, 0 does not guarantee avoidance of them. The default value is 0 for trucks; 0.1 for other motor vehicles; 0.5 for bicycles; and 0.6 for pedestrians.\n   * @type {number}\n   * @memberof BaseCostingOptions\n   */\n  useLivingStreets?: number;\n  /**\n   * A measure of willingness to take ferries. Values near 0 attempt to avoid ferries, and values near 1 will favour them. Note that as some routes may be impossible without ferries, 0 does not guarantee avoidance of them.\n   * @type {number}\n   * @memberof BaseCostingOptions\n   */\n  useFerry?: number;\n  /**\n   * If set to true, ignores any restrictions (eg: turn and conditional restrictions). Useful for matching GPS traces to the road network regardless of restrictions.\n   * @type {boolean}\n   * @memberof BaseCostingOptions\n   */\n  ignoreRestrictions?: boolean;\n  /**\n   * If set to true, ignores most restrictions (eg: turn and conditional restrictions), but still respects restrictions that impact vehicle safety such as weight and size.\n   * @type {boolean}\n   * @memberof BaseCostingOptions\n   */\n  ignoreNonVehicularRestrictions?: boolean;\n  /**\n   * If set to true, ignores directional restrictions on roads. Useful for matching GPS traces to the road network regardless of restrictions.\n   * @type {boolean}\n   * @memberof BaseCostingOptions\n   */\n  ignoreOneways?: boolean;\n}\n\n/**\n * Check if a given object implements the BaseCostingOptions interface.\n */\nexport function instanceOfBaseCostingOptions(\n  value: object,\n): value is BaseCostingOptions {\n  return true;\n}\n\nexport function BaseCostingOptionsFromJSON(json: any): BaseCostingOptions {\n  return BaseCostingOptionsFromJSONTyped(json, false);\n}\n\nexport function BaseCostingOptionsFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): BaseCostingOptions {\n  if (json == null) {\n    return json;\n  }\n  return {\n    maneuverPenalty:\n      json[\"maneuver_penalty\"] == null ? undefined : json[\"maneuver_penalty\"],\n    gateCost: json[\"gate_cost\"] == null ? undefined : json[\"gate_cost\"],\n    gatePenalty:\n      json[\"gate_penalty\"] == null ? undefined : json[\"gate_penalty\"],\n    countryCrossingCost:\n      json[\"country_crossing_cost\"] == null\n        ? undefined\n        : json[\"country_crossing_cost\"],\n    countryCrossingPenalty:\n      json[\"country_crossing_penalty\"] == null\n        ? undefined\n        : json[\"country_crossing_penalty\"],\n    servicePenalty:\n      json[\"service_penalty\"] == null ? undefined : json[\"service_penalty\"],\n    serviceFactor:\n      json[\"service_factor\"] == null ? undefined : json[\"service_factor\"],\n    useLivingStreets:\n      json[\"use_living_streets\"] == null\n        ? undefined\n        : json[\"use_living_streets\"],\n    useFerry: json[\"use_ferry\"] == null ? undefined : json[\"use_ferry\"],\n    ignoreRestrictions:\n      json[\"ignore_restrictions\"] == null\n        ? undefined\n        : json[\"ignore_restrictions\"],\n    ignoreNonVehicularRestrictions:\n      json[\"ignore_non_vehicular_restrictions\"] == null\n        ? undefined\n        : json[\"ignore_non_vehicular_restrictions\"],\n    ignoreOneways:\n      json[\"ignore_oneways\"] == null ? undefined : json[\"ignore_oneways\"],\n  };\n}\n\nexport function BaseCostingOptionsToJSON(json: any): BaseCostingOptions {\n  return BaseCostingOptionsToJSONTyped(json, false);\n}\n\nexport function BaseCostingOptionsToJSONTyped(\n  value?: BaseCostingOptions | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    maneuver_penalty: value[\"maneuverPenalty\"],\n    gate_cost: value[\"gateCost\"],\n    gate_penalty: value[\"gatePenalty\"],\n    country_crossing_cost: value[\"countryCrossingCost\"],\n    country_crossing_penalty: value[\"countryCrossingPenalty\"],\n    service_penalty: value[\"servicePenalty\"],\n    service_factor: value[\"serviceFactor\"],\n    use_living_streets: value[\"useLivingStreets\"],\n    use_ferry: value[\"useFerry\"],\n    ignore_restrictions: value[\"ignoreRestrictions\"],\n    ignore_non_vehicular_restrictions: value[\"ignoreNonVehicularRestrictions\"],\n    ignore_oneways: value[\"ignoreOneways\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface MotorScooterCostingOptions\n */\nexport interface MotorScooterCostingOptions {\n  /**\n   * A penalty (in seconds) applied when transitioning between roads (determined by name).\n   * @type {number}\n   * @memberof MotorScooterCostingOptions\n   */\n  maneuverPenalty?: number;\n  /**\n   * The estimated cost (in seconds) when a gate is encountered.\n   * @type {number}\n   * @memberof MotorScooterCostingOptions\n   */\n  gateCost?: number;\n  /**\n   * A penalty (in seconds) applied to the route cost when a gate is encountered. This penalty can be used to reduce the likelihood of suggesting a route with gates unless absolutely necessary.\n   * @type {number}\n   * @memberof MotorScooterCostingOptions\n   */\n  gatePenalty?: number;\n  /**\n   * The estimated cost (in seconds) when encountering an international border.\n   * @type {number}\n   * @memberof MotorScooterCostingOptions\n   */\n  countryCrossingCost?: number;\n  /**\n   * A penalty applied to transitions to international border crossings. This penalty can be used to reduce the likelihood of suggesting a route with border crossings unless absolutely necessary.\n   * @type {number}\n   * @memberof MotorScooterCostingOptions\n   */\n  countryCrossingPenalty?: number;\n  /**\n   * A penalty applied to transitions to service roads. This penalty can be used to reduce the likelihood of suggesting a route with service roads unless absolutely necessary. The default penalty is 15 for cars, busses, motor scooters, and motorcycles; and zero for others.\n   * @type {number}\n   * @memberof MotorScooterCostingOptions\n   */\n  servicePenalty?: number;\n  /**\n   * A factor that multiplies the cost when service roads are encountered. The default is 1.2 for cars and busses, and 1 for trucks, motor scooters, and motorcycles.\n   * @type {number}\n   * @memberof MotorScooterCostingOptions\n   */\n  serviceFactor?: number;\n  /**\n   * A measure of willingness to take living streets. Values near 0 attempt to avoid them, and values near 1 will favour them. Note that as some routes may be impossible without living streets, 0 does not guarantee avoidance of them. The default value is 0 for trucks; 0.1 for other motor vehicles; 0.5 for bicycles; and 0.6 for pedestrians.\n   * @type {number}\n   * @memberof MotorScooterCostingOptions\n   */\n  useLivingStreets?: number;\n  /**\n   * A measure of willingness to take ferries. Values near 0 attempt to avoid ferries, and values near 1 will favour them. Note that as some routes may be impossible without ferries, 0 does not guarantee avoidance of them.\n   * @type {number}\n   * @memberof MotorScooterCostingOptions\n   */\n  useFerry?: number;\n  /**\n   * If set to true, ignores any restrictions (eg: turn and conditional restrictions). Useful for matching GPS traces to the road network regardless of restrictions.\n   * @type {boolean}\n   * @memberof MotorScooterCostingOptions\n   */\n  ignoreRestrictions?: boolean;\n  /**\n   * If set to true, ignores most restrictions (eg: turn and conditional restrictions), but still respects restrictions that impact vehicle safety such as weight and size.\n   * @type {boolean}\n   * @memberof MotorScooterCostingOptions\n   */\n  ignoreNonVehicularRestrictions?: boolean;\n  /**\n   * If set to true, ignores directional restrictions on roads. Useful for matching GPS traces to the road network regardless of restrictions.\n   * @type {boolean}\n   * @memberof MotorScooterCostingOptions\n   */\n  ignoreOneways?: boolean;\n  /**\n   * The height of the automobile (in meters).\n   * @type {number}\n   * @memberof MotorScooterCostingOptions\n   */\n  height?: number;\n  /**\n   * The width of the automobile (in meters).\n   * @type {number}\n   * @memberof MotorScooterCostingOptions\n   */\n  width?: number;\n  /**\n   * The estimated cost (in seconds) when a toll booth is encountered.\n   * @type {number}\n   * @memberof MotorScooterCostingOptions\n   */\n  tollBoothCost?: number;\n  /**\n   * A penalty (in seconds) applied to the route cost when a toll booth is encountered. This penalty can be used to reduce the likelihood of suggesting a route with toll booths unless absolutely necessary.\n   * @type {number}\n   * @memberof MotorScooterCostingOptions\n   */\n  tollBoothPenalty?: number;\n  /**\n   * The estimated cost (in seconds) when a ferry is encountered.\n   * @type {number}\n   * @memberof MotorScooterCostingOptions\n   */\n  ferryCost?: number;\n  /**\n   * A measure of willingness to take highways. Values near 0 attempt to avoid highways, and values near 1 will favour them. Note that as some routes may be impossible without highways, 0 does not guarantee avoidance of them.\n   * @type {number}\n   * @memberof MotorScooterCostingOptions\n   */\n  useHighways?: number;\n  /**\n   * A measure of willingness to take toll roads. Values near 0 attempt to avoid tolls, and values near 1 will favour them. Note that as some routes may be impossible without tolls, 0 does not guarantee avoidance of them.\n   * @type {number}\n   * @memberof MotorScooterCostingOptions\n   */\n  useTolls?: number;\n  /**\n   * A measure of willingness to take track roads. Values near 0 attempt to avoid them, and values near 1 will favour them. Note that as some routes may be impossible without track roads, 0 does not guarantee avoidance of them. The default value is 0 for automobiles, busses, and trucks; and 0.5 for all other costing modes.\n   * @type {number}\n   * @memberof MotorScooterCostingOptions\n   */\n  useTracks?: number;\n  /**\n   * The top speed (in kph) that the vehicle is capable of travelling.\n   * @type {number}\n   * @memberof MotorScooterCostingOptions\n   */\n  topSpeed?: number;\n  /**\n   * If true changes the cost metric to be quasi-shortest (pure distance-based) costing. This will disable ALL other costing factors.\n   * @type {boolean}\n   * @memberof MotorScooterCostingOptions\n   */\n  shortest?: boolean;\n  /**\n   * If true, ignores all known closures. This option cannot be set if `location.search_filter.exclude_closures` is also specified.\n   * @type {boolean}\n   * @memberof MotorScooterCostingOptions\n   */\n  ignoreClosures?: boolean;\n  /**\n   * If true, indicates the desire to include HOV roads with a 2-occupant requirement in the route when advantageous.\n   * @type {boolean}\n   * @memberof MotorScooterCostingOptions\n   */\n  includeHov2?: boolean;\n  /**\n   * If true, indicates the desire to include HOV roads with a 3-occupant requirement in the route when advantageous.\n   * @type {boolean}\n   * @memberof MotorScooterCostingOptions\n   */\n  includeHov3?: boolean;\n  /**\n   * If true, indicates the desire to include toll roads which require the driver to pay a toll if the occupant requirement isn't met\n   * @type {boolean}\n   * @memberof MotorScooterCostingOptions\n   */\n  includeHot?: boolean;\n  /**\n   * A factor that multiplies the cost when alleys are encountered.\n   * @type {number}\n   * @memberof MotorScooterCostingOptions\n   */\n  alleyFactor?: number;\n  /**\n   * A measure of willingness to use primary roads. Values near 0 attempt to avoid primary roads and stay on roads with lower speeds, and values near 1 indicate the rider is more comfortable on these roads.\n   * @type {number}\n   * @memberof MotorScooterCostingOptions\n   */\n  usePrimary?: number;\n  /**\n   * A measure of willingness to take tackle hills. Values near 0 attempt to avoid hills and steeper grades even if it means a longer route, and values near 1 indicates that the rider does not fear them. Note that as some routes may be impossible without hills, 0 does not guarantee avoidance of them.\n   * @type {number}\n   * @memberof MotorScooterCostingOptions\n   */\n  useHills?: number;\n}\n\n/**\n * Check if a given object implements the MotorScooterCostingOptions interface.\n */\nexport function instanceOfMotorScooterCostingOptions(\n  value: object,\n): value is MotorScooterCostingOptions {\n  return true;\n}\n\nexport function MotorScooterCostingOptionsFromJSON(\n  json: any,\n): MotorScooterCostingOptions {\n  return MotorScooterCostingOptionsFromJSONTyped(json, false);\n}\n\nexport function MotorScooterCostingOptionsFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): MotorScooterCostingOptions {\n  if (json == null) {\n    return json;\n  }\n  return {\n    maneuverPenalty:\n      json[\"maneuver_penalty\"] == null ? undefined : json[\"maneuver_penalty\"],\n    gateCost: json[\"gate_cost\"] == null ? undefined : json[\"gate_cost\"],\n    gatePenalty:\n      json[\"gate_penalty\"] == null ? undefined : json[\"gate_penalty\"],\n    countryCrossingCost:\n      json[\"country_crossing_cost\"] == null\n        ? undefined\n        : json[\"country_crossing_cost\"],\n    countryCrossingPenalty:\n      json[\"country_crossing_penalty\"] == null\n        ? undefined\n        : json[\"country_crossing_penalty\"],\n    servicePenalty:\n      json[\"service_penalty\"] == null ? undefined : json[\"service_penalty\"],\n    serviceFactor:\n      json[\"service_factor\"] == null ? undefined : json[\"service_factor\"],\n    useLivingStreets:\n      json[\"use_living_streets\"] == null\n        ? undefined\n        : json[\"use_living_streets\"],\n    useFerry: json[\"use_ferry\"] == null ? undefined : json[\"use_ferry\"],\n    ignoreRestrictions:\n      json[\"ignore_restrictions\"] == null\n        ? undefined\n        : json[\"ignore_restrictions\"],\n    ignoreNonVehicularRestrictions:\n      json[\"ignore_non_vehicular_restrictions\"] == null\n        ? undefined\n        : json[\"ignore_non_vehicular_restrictions\"],\n    ignoreOneways:\n      json[\"ignore_oneways\"] == null ? undefined : json[\"ignore_oneways\"],\n    height: json[\"height\"] == null ? undefined : json[\"height\"],\n    width: json[\"width\"] == null ? undefined : json[\"width\"],\n    tollBoothCost:\n      json[\"toll_booth_cost\"] == null ? undefined : json[\"toll_booth_cost\"],\n    tollBoothPenalty:\n      json[\"toll_booth_penalty\"] == null\n        ? undefined\n        : json[\"toll_booth_penalty\"],\n    ferryCost: json[\"ferry_cost\"] == null ? undefined : json[\"ferry_cost\"],\n    useHighways:\n      json[\"use_highways\"] == null ? undefined : json[\"use_highways\"],\n    useTolls: json[\"use_tolls\"] == null ? undefined : json[\"use_tolls\"],\n    useTracks: json[\"use_tracks\"] == null ? undefined : json[\"use_tracks\"],\n    topSpeed: json[\"top_speed\"] == null ? undefined : json[\"top_speed\"],\n    shortest: json[\"shortest\"] == null ? undefined : json[\"shortest\"],\n    ignoreClosures:\n      json[\"ignore_closures\"] == null ? undefined : json[\"ignore_closures\"],\n    includeHov2:\n      json[\"include_hov2\"] == null ? undefined : json[\"include_hov2\"],\n    includeHov3:\n      json[\"include_hov3\"] == null ? undefined : json[\"include_hov3\"],\n    includeHot: json[\"include_hot\"] == null ? undefined : json[\"include_hot\"],\n    alleyFactor:\n      json[\"alley_factor\"] == null ? undefined : json[\"alley_factor\"],\n    usePrimary: json[\"use_primary\"] == null ? undefined : json[\"use_primary\"],\n    useHills: json[\"use_hills\"] == null ? undefined : json[\"use_hills\"],\n  };\n}\n\nexport function MotorScooterCostingOptionsToJSON(\n  json: any,\n): MotorScooterCostingOptions {\n  return MotorScooterCostingOptionsToJSONTyped(json, false);\n}\n\nexport function MotorScooterCostingOptionsToJSONTyped(\n  value?: MotorScooterCostingOptions | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    maneuver_penalty: value[\"maneuverPenalty\"],\n    gate_cost: value[\"gateCost\"],\n    gate_penalty: value[\"gatePenalty\"],\n    country_crossing_cost: value[\"countryCrossingCost\"],\n    country_crossing_penalty: value[\"countryCrossingPenalty\"],\n    service_penalty: value[\"servicePenalty\"],\n    service_factor: value[\"serviceFactor\"],\n    use_living_streets: value[\"useLivingStreets\"],\n    use_ferry: value[\"useFerry\"],\n    ignore_restrictions: value[\"ignoreRestrictions\"],\n    ignore_non_vehicular_restrictions: value[\"ignoreNonVehicularRestrictions\"],\n    ignore_oneways: value[\"ignoreOneways\"],\n    height: value[\"height\"],\n    width: value[\"width\"],\n    toll_booth_cost: value[\"tollBoothCost\"],\n    toll_booth_penalty: value[\"tollBoothPenalty\"],\n    ferry_cost: value[\"ferryCost\"],\n    use_highways: value[\"useHighways\"],\n    use_tolls: value[\"useTolls\"],\n    use_tracks: value[\"useTracks\"],\n    top_speed: value[\"topSpeed\"],\n    shortest: value[\"shortest\"],\n    ignore_closures: value[\"ignoreClosures\"],\n    include_hov2: value[\"includeHov2\"],\n    include_hov3: value[\"includeHov3\"],\n    include_hot: value[\"includeHot\"],\n    alley_factor: value[\"alleyFactor\"],\n    use_primary: value[\"usePrimary\"],\n    use_hills: value[\"useHills\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n * If set to blind, enables additional route instructions which are helpful for blind users. These include announcing street crossings, stairs, bridges, tunnels, gates, and bollards passed on the route. If set to wheelchair, the walking speed and step penalty are adjusted for wheelchair users.\n * @export\n */\nexport const PedestrianType = {\n  Foot: \"foot\",\n  Blind: \"blind\",\n  Wheelchair: \"wheelchair\",\n} as const;\nexport type PedestrianType =\n  (typeof PedestrianType)[keyof typeof PedestrianType];\n\nexport function instanceOfPedestrianType(value: any): boolean {\n  for (const key in PedestrianType) {\n    if (Object.prototype.hasOwnProperty.call(PedestrianType, key)) {\n      if (PedestrianType[key as keyof typeof PedestrianType] === value) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function PedestrianTypeFromJSON(json: any): PedestrianType {\n  return PedestrianTypeFromJSONTyped(json, false);\n}\n\nexport function PedestrianTypeFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): PedestrianType {\n  return json as PedestrianType;\n}\n\nexport function PedestrianTypeToJSON(value?: PedestrianType | null): any {\n  return value as any;\n}\n\nexport function PedestrianTypeToJSONTyped(\n  value: any,\n  ignoreDiscriminator: boolean,\n): PedestrianType {\n  return value as PedestrianType;\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { PedestrianType } from \"./PedestrianType\";\nimport {\n  PedestrianTypeFromJSON,\n  PedestrianTypeFromJSONTyped,\n  PedestrianTypeToJSON,\n  PedestrianTypeToJSONTyped,\n} from \"./PedestrianType\";\n\n/**\n *\n * @export\n * @interface PedestrianCostingOptions\n */\nexport interface PedestrianCostingOptions {\n  /**\n   * Walking speed in kph.\n   * @type {number}\n   * @memberof PedestrianCostingOptions\n   */\n  walkingSpeed?: number;\n  /**\n   * A factor that multiplies the cost when walkways are encountered.\n   * @type {number}\n   * @memberof PedestrianCostingOptions\n   */\n  walkwayFactor?: number;\n  /**\n   * A factor that multiplies the cost when sidewalks are encountered.\n   * @type {number}\n   * @memberof PedestrianCostingOptions\n   */\n  sidewalkFactor?: number;\n  /**\n   * A factor that multiplies the cost when alleys are encountered.\n   * @type {number}\n   * @memberof PedestrianCostingOptions\n   */\n  alleyFactor?: number;\n  /**\n   * A factor that multiplies the cost when driveways are encountered.\n   * @type {number}\n   * @memberof PedestrianCostingOptions\n   */\n  drivewayFactor?: number;\n  /**\n   * A penalty (in seconds) added to each transition onto a path with steps or stairs.\n   * @type {number}\n   * @memberof PedestrianCostingOptions\n   */\n  stepPenalty?: number;\n  /**\n   * A measure of willingness to take ferries. Values near 0 attempt to avoid ferries, and values near 1 will favour them. Note that as some routes may be impossible without ferries, 0 does not guarantee avoidance of them.\n   * @type {number}\n   * @memberof PedestrianCostingOptions\n   */\n  useFerry?: number;\n  /**\n   * A measure of willingness to take living streets. Values near 0 attempt to avoid them, and values near 1 will favour them. Note that as some routes may be impossible without living streets, 0 does not guarantee avoidance of them. The default value is 0 for trucks; 0.1 for other motor vehicles; 0.5 for bicycles; and 0.6 for pedestrians.\n   * @type {number}\n   * @memberof PedestrianCostingOptions\n   */\n  useLivingStreets?: number;\n  /**\n   * A measure of willingness to take track roads. Values near 0 attempt to avoid them, and values near 1 will favour them. Note that as some routes may be impossible without track roads, 0 does not guarantee avoidance of them. The default value is 0 for automobiles, busses, and trucks; and 0.5 for all other costing modes.\n   * @type {number}\n   * @memberof PedestrianCostingOptions\n   */\n  useTracks?: number;\n  /**\n   * A measure of willingness to take tackle hills. Values near 0 attempt to avoid hills and steeper grades even if it means a longer route, and values near 1 indicates that the user does not fear them. Note that as some routes may be impossible without hills, 0 does not guarantee avoidance of them.\n   * @type {number}\n   * @memberof PedestrianCostingOptions\n   */\n  useHills?: number;\n  /**\n   * A measure of preference for streets that are lit. 0 indicates indifference toward lit streets, and 1 indicates that unlit streets should be avoided. Note that even with values near 1, there is no guarantee that the returned route will include lit segments.\n   * @type {number}\n   * @memberof PedestrianCostingOptions\n   */\n  useLit?: number;\n  /**\n   * A penalty applied to transitions to service roads. This penalty can be used to reduce the likelihood of suggesting a route with service roads unless absolutely necessary. The default penalty is 15 for cars, busses, motor scooters, and motorcycles; and zero for others.\n   * @type {number}\n   * @memberof PedestrianCostingOptions\n   */\n  servicePenalty?: number;\n  /**\n   * A factor that multiplies the cost when service roads are encountered. The default is 1.2 for cars and busses, and 1 for trucks, motor scooters, and motorcycles.\n   * @type {number}\n   * @memberof PedestrianCostingOptions\n   */\n  serviceFactor?: number;\n  /**\n   * The maximum difficulty of hiking trails allowed. This corresponds to the OSM `sac_scale`.\n   * @type {number}\n   * @memberof PedestrianCostingOptions\n   */\n  maxHikingDifficulty?: number;\n  /**\n   * The estimated cost (in seconds) to rent a bicycle from a sharing station in `bikeshare` mode.\n   * @type {number}\n   * @memberof PedestrianCostingOptions\n   */\n  bssRentCost?: number;\n  /**\n   * A penalty (in seconds) to rent a bicycle in `bikeshare` mode.\n   * @type {number}\n   * @memberof PedestrianCostingOptions\n   */\n  bssRentPenalty?: number;\n  /**\n   *\n   * @type {PedestrianType}\n   * @memberof PedestrianCostingOptions\n   */\n  type?: PedestrianType;\n}\n\n/**\n * Check if a given object implements the PedestrianCostingOptions interface.\n */\nexport function instanceOfPedestrianCostingOptions(\n  value: object,\n): value is PedestrianCostingOptions {\n  return true;\n}\n\nexport function PedestrianCostingOptionsFromJSON(\n  json: any,\n): PedestrianCostingOptions {\n  return PedestrianCostingOptionsFromJSONTyped(json, false);\n}\n\nexport function PedestrianCostingOptionsFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): PedestrianCostingOptions {\n  if (json == null) {\n    return json;\n  }\n  return {\n    walkingSpeed:\n      json[\"walking_speed\"] == null ? undefined : json[\"walking_speed\"],\n    walkwayFactor:\n      json[\"walkway_factor\"] == null ? undefined : json[\"walkway_factor\"],\n    sidewalkFactor:\n      json[\"sidewalk_factor\"] == null ? undefined : json[\"sidewalk_factor\"],\n    alleyFactor:\n      json[\"alley_factor\"] == null ? undefined : json[\"alley_factor\"],\n    drivewayFactor:\n      json[\"driveway_factor\"] == null ? undefined : json[\"driveway_factor\"],\n    stepPenalty:\n      json[\"step_penalty\"] == null ? undefined : json[\"step_penalty\"],\n    useFerry: json[\"use_ferry\"] == null ? undefined : json[\"use_ferry\"],\n    useLivingStreets:\n      json[\"use_living_streets\"] == null\n        ? undefined\n        : json[\"use_living_streets\"],\n    useTracks: json[\"use_tracks\"] == null ? undefined : json[\"use_tracks\"],\n    useHills: json[\"use_hills\"] == null ? undefined : json[\"use_hills\"],\n    useLit: json[\"use_lit\"] == null ? undefined : json[\"use_lit\"],\n    servicePenalty:\n      json[\"service_penalty\"] == null ? undefined : json[\"service_penalty\"],\n    serviceFactor:\n      json[\"service_factor\"] == null ? undefined : json[\"service_factor\"],\n    maxHikingDifficulty:\n      json[\"max_hiking_difficulty\"] == null\n        ? undefined\n        : json[\"max_hiking_difficulty\"],\n    bssRentCost:\n      json[\"bss_rent_cost\"] == null ? undefined : json[\"bss_rent_cost\"],\n    bssRentPenalty:\n      json[\"bss_rent_penalty\"] == null ? undefined : json[\"bss_rent_penalty\"],\n    type:\n      json[\"type\"] == null ? undefined : PedestrianTypeFromJSON(json[\"type\"]),\n  };\n}\n\nexport function PedestrianCostingOptionsToJSON(\n  json: any,\n): PedestrianCostingOptions {\n  return PedestrianCostingOptionsToJSONTyped(json, false);\n}\n\nexport function PedestrianCostingOptionsToJSONTyped(\n  value?: PedestrianCostingOptions | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    walking_speed: value[\"walkingSpeed\"],\n    walkway_factor: value[\"walkwayFactor\"],\n    sidewalk_factor: value[\"sidewalkFactor\"],\n    alley_factor: value[\"alleyFactor\"],\n    driveway_factor: value[\"drivewayFactor\"],\n    step_penalty: value[\"stepPenalty\"],\n    use_ferry: value[\"useFerry\"],\n    use_living_streets: value[\"useLivingStreets\"],\n    use_tracks: value[\"useTracks\"],\n    use_hills: value[\"useHills\"],\n    use_lit: value[\"useLit\"],\n    service_penalty: value[\"servicePenalty\"],\n    service_factor: value[\"serviceFactor\"],\n    max_hiking_difficulty: value[\"maxHikingDifficulty\"],\n    bss_rent_cost: value[\"bssRentCost\"],\n    bss_rent_penalty: value[\"bssRentPenalty\"],\n    type: PedestrianTypeToJSON(value[\"type\"]),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface TruckCostingOptions\n */\nexport interface TruckCostingOptions {\n  /**\n   * A penalty (in seconds) applied when transitioning between roads (determined by name).\n   * @type {number}\n   * @memberof TruckCostingOptions\n   */\n  maneuverPenalty?: number;\n  /**\n   * The estimated cost (in seconds) when a gate is encountered.\n   * @type {number}\n   * @memberof TruckCostingOptions\n   */\n  gateCost?: number;\n  /**\n   * A penalty (in seconds) applied to the route cost when a gate is encountered. This penalty can be used to reduce the likelihood of suggesting a route with gates unless absolutely necessary.\n   * @type {number}\n   * @memberof TruckCostingOptions\n   */\n  gatePenalty?: number;\n  /**\n   * The estimated cost (in seconds) when encountering an international border.\n   * @type {number}\n   * @memberof TruckCostingOptions\n   */\n  countryCrossingCost?: number;\n  /**\n   * A penalty applied to transitions to international border crossings. This penalty can be used to reduce the likelihood of suggesting a route with border crossings unless absolutely necessary.\n   * @type {number}\n   * @memberof TruckCostingOptions\n   */\n  countryCrossingPenalty?: number;\n  /**\n   * A penalty applied to transitions to service roads. This penalty can be used to reduce the likelihood of suggesting a route with service roads unless absolutely necessary. The default penalty is 15 for cars, busses, motor scooters, and motorcycles; and zero for others.\n   * @type {number}\n   * @memberof TruckCostingOptions\n   */\n  servicePenalty?: number;\n  /**\n   * A factor that multiplies the cost when service roads are encountered. The default is 1.2 for cars and busses, and 1 for trucks, motor scooters, and motorcycles.\n   * @type {number}\n   * @memberof TruckCostingOptions\n   */\n  serviceFactor?: number;\n  /**\n   * A measure of willingness to take living streets. Values near 0 attempt to avoid them, and values near 1 will favour them. Note that as some routes may be impossible without living streets, 0 does not guarantee avoidance of them. The default value is 0 for trucks; 0.1 for other motor vehicles; 0.5 for bicycles; and 0.6 for pedestrians.\n   * @type {number}\n   * @memberof TruckCostingOptions\n   */\n  useLivingStreets?: number;\n  /**\n   * A measure of willingness to take ferries. Values near 0 attempt to avoid ferries, and values near 1 will favour them. Note that as some routes may be impossible without ferries, 0 does not guarantee avoidance of them.\n   * @type {number}\n   * @memberof TruckCostingOptions\n   */\n  useFerry?: number;\n  /**\n   * If set to true, ignores any restrictions (eg: turn and conditional restrictions). Useful for matching GPS traces to the road network regardless of restrictions.\n   * @type {boolean}\n   * @memberof TruckCostingOptions\n   */\n  ignoreRestrictions?: boolean;\n  /**\n   * If set to true, ignores most restrictions (eg: turn and conditional restrictions), but still respects restrictions that impact vehicle safety such as weight and size.\n   * @type {boolean}\n   * @memberof TruckCostingOptions\n   */\n  ignoreNonVehicularRestrictions?: boolean;\n  /**\n   * If set to true, ignores directional restrictions on roads. Useful for matching GPS traces to the road network regardless of restrictions.\n   * @type {boolean}\n   * @memberof TruckCostingOptions\n   */\n  ignoreOneways?: boolean;\n  /**\n   * The height of the truck (in meters).\n   * @type {number}\n   * @memberof TruckCostingOptions\n   */\n  height?: number;\n  /**\n   * The width of the truck (in meters).\n   * @type {number}\n   * @memberof TruckCostingOptions\n   */\n  width?: number;\n  /**\n   * The estimated cost (in seconds) when a toll booth is encountered.\n   * @type {number}\n   * @memberof TruckCostingOptions\n   */\n  tollBoothCost?: number;\n  /**\n   * A penalty (in seconds) applied to the route cost when a toll booth is encountered. This penalty can be used to reduce the likelihood of suggesting a route with toll booths unless absolutely necessary.\n   * @type {number}\n   * @memberof TruckCostingOptions\n   */\n  tollBoothPenalty?: number;\n  /**\n   * The estimated cost (in seconds) when a ferry is encountered.\n   * @type {number}\n   * @memberof TruckCostingOptions\n   */\n  ferryCost?: number;\n  /**\n   * A measure of willingness to take highways. Values near 0 attempt to avoid highways, and values near 1 will favour them. Note that as some routes may be impossible without highways, 0 does not guarantee avoidance of them.\n   * @type {number}\n   * @memberof TruckCostingOptions\n   */\n  useHighways?: number;\n  /**\n   * A measure of willingness to take toll roads. Values near 0 attempt to avoid tolls, and values near 1 will favour them. Note that as some routes may be impossible without tolls, 0 does not guarantee avoidance of them.\n   * @type {number}\n   * @memberof TruckCostingOptions\n   */\n  useTolls?: number;\n  /**\n   * A measure of willingness to take track roads. Values near 0 attempt to avoid them, and values near 1 will favour them. Note that as some routes may be impossible without track roads, 0 does not guarantee avoidance of them. The default value is 0 for automobiles, busses, and trucks; and 0.5 for all other costing modes.\n   * @type {number}\n   * @memberof TruckCostingOptions\n   */\n  useTracks?: number;\n  /**\n   * The top speed (in kph) that the vehicle is capable of travelling.\n   * @type {number}\n   * @memberof TruckCostingOptions\n   */\n  topSpeed?: number;\n  /**\n   * If true changes the cost metric to be quasi-shortest (pure distance-based) costing. This will disable ALL other costing factors.\n   * @type {boolean}\n   * @memberof TruckCostingOptions\n   */\n  shortest?: boolean;\n  /**\n   * If true, ignores all known closures. This option cannot be set if `location.search_filter.exclude_closures` is also specified.\n   * @type {boolean}\n   * @memberof TruckCostingOptions\n   */\n  ignoreClosures?: boolean;\n  /**\n   * If true, indicates the desire to include HOV roads with a 2-occupant requirement in the route when advantageous.\n   * @type {boolean}\n   * @memberof TruckCostingOptions\n   */\n  includeHov2?: boolean;\n  /**\n   * If true, indicates the desire to include HOV roads with a 3-occupant requirement in the route when advantageous.\n   * @type {boolean}\n   * @memberof TruckCostingOptions\n   */\n  includeHov3?: boolean;\n  /**\n   * If true, indicates the desire to include toll roads which require the driver to pay a toll if the occupant requirement isn't met\n   * @type {boolean}\n   * @memberof TruckCostingOptions\n   */\n  includeHot?: boolean;\n  /**\n   * A factor that multiplies the cost when alleys are encountered.\n   * @type {number}\n   * @memberof TruckCostingOptions\n   */\n  alleyFactor?: number;\n  /**\n   * The length of the truck (in meters).\n   * @type {number}\n   * @memberof TruckCostingOptions\n   */\n  length?: number;\n  /**\n   * The weight of the truck (in tonnes).\n   * @type {number}\n   * @memberof TruckCostingOptions\n   */\n  weight?: number;\n  /**\n   * The axle load of the truck (in tonnes).\n   * @type {number}\n   * @memberof TruckCostingOptions\n   */\n  axleLoad?: number;\n  /**\n   * Whether or not the truck is carrying hazardous materials.\n   * @type {boolean}\n   * @memberof TruckCostingOptions\n   */\n  hazmat?: boolean;\n}\n\n/**\n * Check if a given object implements the TruckCostingOptions interface.\n */\nexport function instanceOfTruckCostingOptions(\n  value: object,\n): value is TruckCostingOptions {\n  return true;\n}\n\nexport function TruckCostingOptionsFromJSON(json: any): TruckCostingOptions {\n  return TruckCostingOptionsFromJSONTyped(json, false);\n}\n\nexport function TruckCostingOptionsFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): TruckCostingOptions {\n  if (json == null) {\n    return json;\n  }\n  return {\n    maneuverPenalty:\n      json[\"maneuver_penalty\"] == null ? undefined : json[\"maneuver_penalty\"],\n    gateCost: json[\"gate_cost\"] == null ? undefined : json[\"gate_cost\"],\n    gatePenalty:\n      json[\"gate_penalty\"] == null ? undefined : json[\"gate_penalty\"],\n    countryCrossingCost:\n      json[\"country_crossing_cost\"] == null\n        ? undefined\n        : json[\"country_crossing_cost\"],\n    countryCrossingPenalty:\n      json[\"country_crossing_penalty\"] == null\n        ? undefined\n        : json[\"country_crossing_penalty\"],\n    servicePenalty:\n      json[\"service_penalty\"] == null ? undefined : json[\"service_penalty\"],\n    serviceFactor:\n      json[\"service_factor\"] == null ? undefined : json[\"service_factor\"],\n    useLivingStreets:\n      json[\"use_living_streets\"] == null\n        ? undefined\n        : json[\"use_living_streets\"],\n    useFerry: json[\"use_ferry\"] == null ? undefined : json[\"use_ferry\"],\n    ignoreRestrictions:\n      json[\"ignore_restrictions\"] == null\n        ? undefined\n        : json[\"ignore_restrictions\"],\n    ignoreNonVehicularRestrictions:\n      json[\"ignore_non_vehicular_restrictions\"] == null\n        ? undefined\n        : json[\"ignore_non_vehicular_restrictions\"],\n    ignoreOneways:\n      json[\"ignore_oneways\"] == null ? undefined : json[\"ignore_oneways\"],\n    height: json[\"height\"] == null ? undefined : json[\"height\"],\n    width: json[\"width\"] == null ? undefined : json[\"width\"],\n    tollBoothCost:\n      json[\"toll_booth_cost\"] == null ? undefined : json[\"toll_booth_cost\"],\n    tollBoothPenalty:\n      json[\"toll_booth_penalty\"] == null\n        ? undefined\n        : json[\"toll_booth_penalty\"],\n    ferryCost: json[\"ferry_cost\"] == null ? undefined : json[\"ferry_cost\"],\n    useHighways:\n      json[\"use_highways\"] == null ? undefined : json[\"use_highways\"],\n    useTolls: json[\"use_tolls\"] == null ? undefined : json[\"use_tolls\"],\n    useTracks: json[\"use_tracks\"] == null ? undefined : json[\"use_tracks\"],\n    topSpeed: json[\"top_speed\"] == null ? undefined : json[\"top_speed\"],\n    shortest: json[\"shortest\"] == null ? undefined : json[\"shortest\"],\n    ignoreClosures:\n      json[\"ignore_closures\"] == null ? undefined : json[\"ignore_closures\"],\n    includeHov2:\n      json[\"include_hov2\"] == null ? undefined : json[\"include_hov2\"],\n    includeHov3:\n      json[\"include_hov3\"] == null ? undefined : json[\"include_hov3\"],\n    includeHot: json[\"include_hot\"] == null ? undefined : json[\"include_hot\"],\n    alleyFactor:\n      json[\"alley_factor\"] == null ? undefined : json[\"alley_factor\"],\n    length: json[\"length\"] == null ? undefined : json[\"length\"],\n    weight: json[\"weight\"] == null ? undefined : json[\"weight\"],\n    axleLoad: json[\"axle_load\"] == null ? undefined : json[\"axle_load\"],\n    hazmat: json[\"hazmat\"] == null ? undefined : json[\"hazmat\"],\n  };\n}\n\nexport function TruckCostingOptionsToJSON(json: any): TruckCostingOptions {\n  return TruckCostingOptionsToJSONTyped(json, false);\n}\n\nexport function TruckCostingOptionsToJSONTyped(\n  value?: TruckCostingOptions | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    maneuver_penalty: value[\"maneuverPenalty\"],\n    gate_cost: value[\"gateCost\"],\n    gate_penalty: value[\"gatePenalty\"],\n    country_crossing_cost: value[\"countryCrossingCost\"],\n    country_crossing_penalty: value[\"countryCrossingPenalty\"],\n    service_penalty: value[\"servicePenalty\"],\n    service_factor: value[\"serviceFactor\"],\n    use_living_streets: value[\"useLivingStreets\"],\n    use_ferry: value[\"useFerry\"],\n    ignore_restrictions: value[\"ignoreRestrictions\"],\n    ignore_non_vehicular_restrictions: value[\"ignoreNonVehicularRestrictions\"],\n    ignore_oneways: value[\"ignoreOneways\"],\n    height: value[\"height\"],\n    width: value[\"width\"],\n    toll_booth_cost: value[\"tollBoothCost\"],\n    toll_booth_penalty: value[\"tollBoothPenalty\"],\n    ferry_cost: value[\"ferryCost\"],\n    use_highways: value[\"useHighways\"],\n    use_tolls: value[\"useTolls\"],\n    use_tracks: value[\"useTracks\"],\n    top_speed: value[\"topSpeed\"],\n    shortest: value[\"shortest\"],\n    ignore_closures: value[\"ignoreClosures\"],\n    include_hov2: value[\"includeHov2\"],\n    include_hov3: value[\"includeHov3\"],\n    include_hot: value[\"includeHot\"],\n    alley_factor: value[\"alleyFactor\"],\n    length: value[\"length\"],\n    weight: value[\"weight\"],\n    axle_load: value[\"axleLoad\"],\n    hazmat: value[\"hazmat\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface BicycleCostingOptions\n */\nexport interface BicycleCostingOptions {\n  /**\n   * A penalty (in seconds) applied when transitioning between roads (determined by name).\n   * @type {number}\n   * @memberof BicycleCostingOptions\n   */\n  maneuverPenalty?: number;\n  /**\n   * The estimated cost (in seconds) when a gate is encountered.\n   * @type {number}\n   * @memberof BicycleCostingOptions\n   */\n  gateCost?: number;\n  /**\n   * A penalty (in seconds) applied to the route cost when a gate is encountered. This penalty can be used to reduce the likelihood of suggesting a route with gates unless absolutely necessary.\n   * @type {number}\n   * @memberof BicycleCostingOptions\n   */\n  gatePenalty?: number;\n  /**\n   * The estimated cost (in seconds) when encountering an international border.\n   * @type {number}\n   * @memberof BicycleCostingOptions\n   */\n  countryCrossingCost?: number;\n  /**\n   * A penalty applied to transitions to international border crossings. This penalty can be used to reduce the likelihood of suggesting a route with border crossings unless absolutely necessary.\n   * @type {number}\n   * @memberof BicycleCostingOptions\n   */\n  countryCrossingPenalty?: number;\n  /**\n   * A penalty applied to transitions to service roads. This penalty can be used to reduce the likelihood of suggesting a route with service roads unless absolutely necessary. The default penalty is 15 for cars, busses, motor scooters, and motorcycles; and zero for others.\n   * @type {number}\n   * @memberof BicycleCostingOptions\n   */\n  servicePenalty?: number;\n  /**\n   * A factor that multiplies the cost when service roads are encountered. The default is 1.2 for cars and busses, and 1 for trucks, motor scooters, and motorcycles.\n   * @type {number}\n   * @memberof BicycleCostingOptions\n   */\n  serviceFactor?: number;\n  /**\n   * A measure of willingness to take living streets. Values near 0 attempt to avoid them, and values near 1 will favour them. Note that as some routes may be impossible without living streets, 0 does not guarantee avoidance of them. The default value is 0 for trucks; 0.1 for other motor vehicles; 0.5 for bicycles; and 0.6 for pedestrians.\n   * @type {number}\n   * @memberof BicycleCostingOptions\n   */\n  useLivingStreets?: number;\n  /**\n   * A measure of willingness to take ferries. Values near 0 attempt to avoid ferries, and values near 1 will favour them. Note that as some routes may be impossible without ferries, 0 does not guarantee avoidance of them.\n   * @type {number}\n   * @memberof BicycleCostingOptions\n   */\n  useFerry?: number;\n  /**\n   * If set to true, ignores any restrictions (eg: turn and conditional restrictions). Useful for matching GPS traces to the road network regardless of restrictions.\n   * @type {boolean}\n   * @memberof BicycleCostingOptions\n   */\n  ignoreRestrictions?: boolean;\n  /**\n   * If set to true, ignores most restrictions (eg: turn and conditional restrictions), but still respects restrictions that impact vehicle safety such as weight and size.\n   * @type {boolean}\n   * @memberof BicycleCostingOptions\n   */\n  ignoreNonVehicularRestrictions?: boolean;\n  /**\n   * If set to true, ignores directional restrictions on roads. Useful for matching GPS traces to the road network regardless of restrictions.\n   * @type {boolean}\n   * @memberof BicycleCostingOptions\n   */\n  ignoreOneways?: boolean;\n  /**\n   * The type of bicycle:\n   * * Road: has narrow tires and is generally lightweight and designed for speed on paved surfaces * Hybrid or City: designed for city riding or casual riding on roads and paths with good surfaces * Cross: similar to a road bike, but has wider tires so it can handle rougher surfaces * Mountain: able to handle most surfaces, but generally heavier and slower on paved surfaces\n   * @type {string}\n   * @memberof BicycleCostingOptions\n   */\n  bicycleType?: BicycleCostingOptionsBicycleTypeEnum;\n  /**\n   * The average comfortable travel speed (in kph) along smooth, flat roads. The costing will vary the speed based on the surface, bicycle type, elevation change, etc. This value should be the average sustainable cruising speed the cyclist can maintain over the entire route.\n   * The default speeds are as follows based on bicycle type:\n   *   * Road - 25kph\n   *   * Cross - 20kph\n   *   * Hybrid - 18kph\n   *   * Mountain - 16kph\n   * @type {number}\n   * @memberof BicycleCostingOptions\n   */\n  cyclingSpeed?: number;\n  /**\n   * A measure of willingness to use roads alongside other vehicles. Values near 0 attempt to avoid roads and stay on cycleways, and values near 1 indicate the cyclist is more comfortable on roads.\n   * @type {number}\n   * @memberof BicycleCostingOptions\n   */\n  useRoads?: number;\n  /**\n   * A measure of willingness to take tackle hills. Values near 0 attempt to avoid hills and steeper grades even if it means a longer route, and values near 1 indicates that the user does not fear them. Note that as some routes may be impossible without hills, 0 does not guarantee avoidance of them.\n   * @type {number}\n   * @memberof BicycleCostingOptions\n   */\n  useHills?: number;\n  /**\n   * A measure of how much the cyclist wants to avoid roads with poor surfaces relative to the type of bicycle being ridden. When 0, there is no penalization of roads with poorer surfaces, and only bicycle speed is taken into account. As the value approaches 1, roads with poor surfaces relative to the bicycle type receive a heaver penalty, so they will only be taken if they significantly reduce travel time. When the value is 1, all bad surfaces are completely avoided from the route, including the start and end points.\n   * @type {number}\n   * @memberof BicycleCostingOptions\n   */\n  avoidBadSurfaces?: number;\n  /**\n   * The estimated cost (in seconds) to return a bicycle in `bikeshare` mode.\n   * @type {number}\n   * @memberof BicycleCostingOptions\n   */\n  bssReturnCost?: number;\n  /**\n   * A penalty (in seconds) to return a bicycle in `bikeshare` mode.\n   * @type {number}\n   * @memberof BicycleCostingOptions\n   */\n  bssReturnPenalty?: number;\n}\n\n/**\n * @export\n */\nexport const BicycleCostingOptionsBicycleTypeEnum = {\n  Road: \"Road\",\n  Hybrid: \"Hybrid\",\n  Cross: \"Cross\",\n  Mountain: \"Mountain\",\n} as const;\nexport type BicycleCostingOptionsBicycleTypeEnum =\n  (typeof BicycleCostingOptionsBicycleTypeEnum)[keyof typeof BicycleCostingOptionsBicycleTypeEnum];\n\n/**\n * Check if a given object implements the BicycleCostingOptions interface.\n */\nexport function instanceOfBicycleCostingOptions(\n  value: object,\n): value is BicycleCostingOptions {\n  return true;\n}\n\nexport function BicycleCostingOptionsFromJSON(\n  json: any,\n): BicycleCostingOptions {\n  return BicycleCostingOptionsFromJSONTyped(json, false);\n}\n\nexport function BicycleCostingOptionsFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): BicycleCostingOptions {\n  if (json == null) {\n    return json;\n  }\n  return {\n    maneuverPenalty:\n      json[\"maneuver_penalty\"] == null ? undefined : json[\"maneuver_penalty\"],\n    gateCost: json[\"gate_cost\"] == null ? undefined : json[\"gate_cost\"],\n    gatePenalty:\n      json[\"gate_penalty\"] == null ? undefined : json[\"gate_penalty\"],\n    countryCrossingCost:\n      json[\"country_crossing_cost\"] == null\n        ? undefined\n        : json[\"country_crossing_cost\"],\n    countryCrossingPenalty:\n      json[\"country_crossing_penalty\"] == null\n        ? undefined\n        : json[\"country_crossing_penalty\"],\n    servicePenalty:\n      json[\"service_penalty\"] == null ? undefined : json[\"service_penalty\"],\n    serviceFactor:\n      json[\"service_factor\"] == null ? undefined : json[\"service_factor\"],\n    useLivingStreets:\n      json[\"use_living_streets\"] == null\n        ? undefined\n        : json[\"use_living_streets\"],\n    useFerry: json[\"use_ferry\"] == null ? undefined : json[\"use_ferry\"],\n    ignoreRestrictions:\n      json[\"ignore_restrictions\"] == null\n        ? undefined\n        : json[\"ignore_restrictions\"],\n    ignoreNonVehicularRestrictions:\n      json[\"ignore_non_vehicular_restrictions\"] == null\n        ? undefined\n        : json[\"ignore_non_vehicular_restrictions\"],\n    ignoreOneways:\n      json[\"ignore_oneways\"] == null ? undefined : json[\"ignore_oneways\"],\n    bicycleType:\n      json[\"bicycle_type\"] == null ? undefined : json[\"bicycle_type\"],\n    cyclingSpeed:\n      json[\"cycling_speed\"] == null ? undefined : json[\"cycling_speed\"],\n    useRoads: json[\"use_roads\"] == null ? undefined : json[\"use_roads\"],\n    useHills: json[\"use_hills\"] == null ? undefined : json[\"use_hills\"],\n    avoidBadSurfaces:\n      json[\"avoid_bad_surfaces\"] == null\n        ? undefined\n        : json[\"avoid_bad_surfaces\"],\n    bssReturnCost:\n      json[\"bss_return_cost\"] == null ? undefined : json[\"bss_return_cost\"],\n    bssReturnPenalty:\n      json[\"bss_return_penalty\"] == null\n        ? undefined\n        : json[\"bss_return_penalty\"],\n  };\n}\n\nexport function BicycleCostingOptionsToJSON(json: any): BicycleCostingOptions {\n  return BicycleCostingOptionsToJSONTyped(json, false);\n}\n\nexport function BicycleCostingOptionsToJSONTyped(\n  value?: BicycleCostingOptions | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    maneuver_penalty: value[\"maneuverPenalty\"],\n    gate_cost: value[\"gateCost\"],\n    gate_penalty: value[\"gatePenalty\"],\n    country_crossing_cost: value[\"countryCrossingCost\"],\n    country_crossing_penalty: value[\"countryCrossingPenalty\"],\n    service_penalty: value[\"servicePenalty\"],\n    service_factor: value[\"serviceFactor\"],\n    use_living_streets: value[\"useLivingStreets\"],\n    use_ferry: value[\"useFerry\"],\n    ignore_restrictions: value[\"ignoreRestrictions\"],\n    ignore_non_vehicular_restrictions: value[\"ignoreNonVehicularRestrictions\"],\n    ignore_oneways: value[\"ignoreOneways\"],\n    bicycle_type: value[\"bicycleType\"],\n    cycling_speed: value[\"cyclingSpeed\"],\n    use_roads: value[\"useRoads\"],\n    use_hills: value[\"useHills\"],\n    avoid_bad_surfaces: value[\"avoidBadSurfaces\"],\n    bss_return_cost: value[\"bssReturnCost\"],\n    bss_return_penalty: value[\"bssReturnPenalty\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface LowSpeedVehicleCostingOptions\n */\nexport interface LowSpeedVehicleCostingOptions {\n  /**\n   * A penalty (in seconds) applied when transitioning between roads (determined by name).\n   * @type {number}\n   * @memberof LowSpeedVehicleCostingOptions\n   */\n  maneuverPenalty?: number;\n  /**\n   * The estimated cost (in seconds) when a gate is encountered.\n   * @type {number}\n   * @memberof LowSpeedVehicleCostingOptions\n   */\n  gateCost?: number;\n  /**\n   * A penalty (in seconds) applied to the route cost when a gate is encountered. This penalty can be used to reduce the likelihood of suggesting a route with gates unless absolutely necessary.\n   * @type {number}\n   * @memberof LowSpeedVehicleCostingOptions\n   */\n  gatePenalty?: number;\n  /**\n   * The estimated cost (in seconds) when encountering an international border.\n   * @type {number}\n   * @memberof LowSpeedVehicleCostingOptions\n   */\n  countryCrossingCost?: number;\n  /**\n   * A penalty applied to transitions to international border crossings. This penalty can be used to reduce the likelihood of suggesting a route with border crossings unless absolutely necessary.\n   * @type {number}\n   * @memberof LowSpeedVehicleCostingOptions\n   */\n  countryCrossingPenalty?: number;\n  /**\n   * A penalty applied to transitions to service roads. This penalty can be used to reduce the likelihood of suggesting a route with service roads unless absolutely necessary. The default penalty is 15 for cars, busses, motor scooters, and motorcycles; and zero for others.\n   * @type {number}\n   * @memberof LowSpeedVehicleCostingOptions\n   */\n  servicePenalty?: number;\n  /**\n   * A factor that multiplies the cost when service roads are encountered. The default is 1.2 for cars and busses, and 1 for trucks, motor scooters, and motorcycles.\n   * @type {number}\n   * @memberof LowSpeedVehicleCostingOptions\n   */\n  serviceFactor?: number;\n  /**\n   * A measure of willingness to take living streets. Values near 0 attempt to avoid them, and values near 1 will favour them. Note that as some routes may be impossible without living streets, 0 does not guarantee avoidance of them. The default value is 0 for trucks; 0.1 for other motor vehicles; 0.5 for bicycles; and 0.6 for pedestrians.\n   * @type {number}\n   * @memberof LowSpeedVehicleCostingOptions\n   */\n  useLivingStreets?: number;\n  /**\n   * A measure of willingness to take ferries. Values near 0 attempt to avoid ferries, and values near 1 will favour them. Note that as some routes may be impossible without ferries, 0 does not guarantee avoidance of them.\n   * @type {number}\n   * @memberof LowSpeedVehicleCostingOptions\n   */\n  useFerry?: number;\n  /**\n   * If set to true, ignores any restrictions (eg: turn and conditional restrictions). Useful for matching GPS traces to the road network regardless of restrictions.\n   * @type {boolean}\n   * @memberof LowSpeedVehicleCostingOptions\n   */\n  ignoreRestrictions?: boolean;\n  /**\n   * If set to true, ignores most restrictions (eg: turn and conditional restrictions), but still respects restrictions that impact vehicle safety such as weight and size.\n   * @type {boolean}\n   * @memberof LowSpeedVehicleCostingOptions\n   */\n  ignoreNonVehicularRestrictions?: boolean;\n  /**\n   * If set to true, ignores directional restrictions on roads. Useful for matching GPS traces to the road network regardless of restrictions.\n   * @type {boolean}\n   * @memberof LowSpeedVehicleCostingOptions\n   */\n  ignoreOneways?: boolean;\n  /**\n   * The type of vehicle:\n   * * low_speed_vehicle (BETA): a low-speed vehicle which falls under a different regulatory and licensing regime than automobiles (ex: LSV in the US and Canada, Quadricycles in the EU, etc.) * golf_cart: a street legal golf cart that is under a similar regulator regime as the generic LSV laws, but may need to follow special paths when available or abide by restrictions specific to golf carts.\n   * @type {string}\n   * @memberof LowSpeedVehicleCostingOptions\n   */\n  vehicleType?: LowSpeedVehicleCostingOptionsVehicleTypeEnum;\n  /**\n   * The top speed (in kph) that the vehicle is capable of travelling.\n   * This impacts travel time calculations as well as which roads are preferred. A very low speed vehicle will tend to prefer lower speed roads even in the presence of other legal routes.\n   * @type {number}\n   * @memberof LowSpeedVehicleCostingOptions\n   */\n  topSpeed?: number;\n  /**\n   * The maximum speed limit for highways on which it is legal for the vehicle to travel. Defaults to 57 (kph; around 35 mph). Acceptable values range from 20 to 80. Highways with *tagged* speed limits higher than this value will not be routed over (some caveats apply; this feature is still BETA).\n   * @type {number}\n   * @memberof LowSpeedVehicleCostingOptions\n   */\n  maxAllowedSpeedLimit?: number;\n}\n\n/**\n * @export\n */\nexport const LowSpeedVehicleCostingOptionsVehicleTypeEnum = {\n  LowSpeedVehicle: \"low_speed_vehicle\",\n  GolfCart: \"golf_cart\",\n} as const;\nexport type LowSpeedVehicleCostingOptionsVehicleTypeEnum =\n  (typeof LowSpeedVehicleCostingOptionsVehicleTypeEnum)[keyof typeof LowSpeedVehicleCostingOptionsVehicleTypeEnum];\n\n/**\n * Check if a given object implements the LowSpeedVehicleCostingOptions interface.\n */\nexport function instanceOfLowSpeedVehicleCostingOptions(\n  value: object,\n): value is LowSpeedVehicleCostingOptions {\n  return true;\n}\n\nexport function LowSpeedVehicleCostingOptionsFromJSON(\n  json: any,\n): LowSpeedVehicleCostingOptions {\n  return LowSpeedVehicleCostingOptionsFromJSONTyped(json, false);\n}\n\nexport function LowSpeedVehicleCostingOptionsFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): LowSpeedVehicleCostingOptions {\n  if (json == null) {\n    return json;\n  }\n  return {\n    maneuverPenalty:\n      json[\"maneuver_penalty\"] == null ? undefined : json[\"maneuver_penalty\"],\n    gateCost: json[\"gate_cost\"] == null ? undefined : json[\"gate_cost\"],\n    gatePenalty:\n      json[\"gate_penalty\"] == null ? undefined : json[\"gate_penalty\"],\n    countryCrossingCost:\n      json[\"country_crossing_cost\"] == null\n        ? undefined\n        : json[\"country_crossing_cost\"],\n    countryCrossingPenalty:\n      json[\"country_crossing_penalty\"] == null\n        ? undefined\n        : json[\"country_crossing_penalty\"],\n    servicePenalty:\n      json[\"service_penalty\"] == null ? undefined : json[\"service_penalty\"],\n    serviceFactor:\n      json[\"service_factor\"] == null ? undefined : json[\"service_factor\"],\n    useLivingStreets:\n      json[\"use_living_streets\"] == null\n        ? undefined\n        : json[\"use_living_streets\"],\n    useFerry: json[\"use_ferry\"] == null ? undefined : json[\"use_ferry\"],\n    ignoreRestrictions:\n      json[\"ignore_restrictions\"] == null\n        ? undefined\n        : json[\"ignore_restrictions\"],\n    ignoreNonVehicularRestrictions:\n      json[\"ignore_non_vehicular_restrictions\"] == null\n        ? undefined\n        : json[\"ignore_non_vehicular_restrictions\"],\n    ignoreOneways:\n      json[\"ignore_oneways\"] == null ? undefined : json[\"ignore_oneways\"],\n    vehicleType:\n      json[\"vehicle_type\"] == null ? undefined : json[\"vehicle_type\"],\n    topSpeed: json[\"top_speed\"] == null ? undefined : json[\"top_speed\"],\n    maxAllowedSpeedLimit:\n      json[\"max_allowed_speed_limit\"] == null\n        ? undefined\n        : json[\"max_allowed_speed_limit\"],\n  };\n}\n\nexport function LowSpeedVehicleCostingOptionsToJSON(\n  json: any,\n): LowSpeedVehicleCostingOptions {\n  return LowSpeedVehicleCostingOptionsToJSONTyped(json, false);\n}\n\nexport function LowSpeedVehicleCostingOptionsToJSONTyped(\n  value?: LowSpeedVehicleCostingOptions | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    maneuver_penalty: value[\"maneuverPenalty\"],\n    gate_cost: value[\"gateCost\"],\n    gate_penalty: value[\"gatePenalty\"],\n    country_crossing_cost: value[\"countryCrossingCost\"],\n    country_crossing_penalty: value[\"countryCrossingPenalty\"],\n    service_penalty: value[\"servicePenalty\"],\n    service_factor: value[\"serviceFactor\"],\n    use_living_streets: value[\"useLivingStreets\"],\n    use_ferry: value[\"useFerry\"],\n    ignore_restrictions: value[\"ignoreRestrictions\"],\n    ignore_non_vehicular_restrictions: value[\"ignoreNonVehicularRestrictions\"],\n    ignore_oneways: value[\"ignoreOneways\"],\n    vehicle_type: value[\"vehicleType\"],\n    top_speed: value[\"topSpeed\"],\n    max_allowed_speed_limit: value[\"maxAllowedSpeedLimit\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface MotorcycleCostingOptions\n */\nexport interface MotorcycleCostingOptions {\n  /**\n   * A penalty (in seconds) applied when transitioning between roads (determined by name).\n   * @type {number}\n   * @memberof MotorcycleCostingOptions\n   */\n  maneuverPenalty?: number;\n  /**\n   * The estimated cost (in seconds) when a gate is encountered.\n   * @type {number}\n   * @memberof MotorcycleCostingOptions\n   */\n  gateCost?: number;\n  /**\n   * A penalty (in seconds) applied to the route cost when a gate is encountered. This penalty can be used to reduce the likelihood of suggesting a route with gates unless absolutely necessary.\n   * @type {number}\n   * @memberof MotorcycleCostingOptions\n   */\n  gatePenalty?: number;\n  /**\n   * The estimated cost (in seconds) when encountering an international border.\n   * @type {number}\n   * @memberof MotorcycleCostingOptions\n   */\n  countryCrossingCost?: number;\n  /**\n   * A penalty applied to transitions to international border crossings. This penalty can be used to reduce the likelihood of suggesting a route with border crossings unless absolutely necessary.\n   * @type {number}\n   * @memberof MotorcycleCostingOptions\n   */\n  countryCrossingPenalty?: number;\n  /**\n   * A penalty applied to transitions to service roads. This penalty can be used to reduce the likelihood of suggesting a route with service roads unless absolutely necessary. The default penalty is 15 for cars, busses, motor scooters, and motorcycles; and zero for others.\n   * @type {number}\n   * @memberof MotorcycleCostingOptions\n   */\n  servicePenalty?: number;\n  /**\n   * A factor that multiplies the cost when service roads are encountered. The default is 1.2 for cars and busses, and 1 for trucks, motor scooters, and motorcycles.\n   * @type {number}\n   * @memberof MotorcycleCostingOptions\n   */\n  serviceFactor?: number;\n  /**\n   * A measure of willingness to take living streets. Values near 0 attempt to avoid them, and values near 1 will favour them. Note that as some routes may be impossible without living streets, 0 does not guarantee avoidance of them. The default value is 0 for trucks; 0.1 for other motor vehicles; 0.5 for bicycles; and 0.6 for pedestrians.\n   * @type {number}\n   * @memberof MotorcycleCostingOptions\n   */\n  useLivingStreets?: number;\n  /**\n   * A measure of willingness to take ferries. Values near 0 attempt to avoid ferries, and values near 1 will favour them. Note that as some routes may be impossible without ferries, 0 does not guarantee avoidance of them.\n   * @type {number}\n   * @memberof MotorcycleCostingOptions\n   */\n  useFerry?: number;\n  /**\n   * If set to true, ignores any restrictions (eg: turn and conditional restrictions). Useful for matching GPS traces to the road network regardless of restrictions.\n   * @type {boolean}\n   * @memberof MotorcycleCostingOptions\n   */\n  ignoreRestrictions?: boolean;\n  /**\n   * If set to true, ignores most restrictions (eg: turn and conditional restrictions), but still respects restrictions that impact vehicle safety such as weight and size.\n   * @type {boolean}\n   * @memberof MotorcycleCostingOptions\n   */\n  ignoreNonVehicularRestrictions?: boolean;\n  /**\n   * If set to true, ignores directional restrictions on roads. Useful for matching GPS traces to the road network regardless of restrictions.\n   * @type {boolean}\n   * @memberof MotorcycleCostingOptions\n   */\n  ignoreOneways?: boolean;\n  /**\n   * The height of the automobile (in meters).\n   * @type {number}\n   * @memberof MotorcycleCostingOptions\n   */\n  height?: number;\n  /**\n   * The width of the automobile (in meters).\n   * @type {number}\n   * @memberof MotorcycleCostingOptions\n   */\n  width?: number;\n  /**\n   * The estimated cost (in seconds) when a toll booth is encountered.\n   * @type {number}\n   * @memberof MotorcycleCostingOptions\n   */\n  tollBoothCost?: number;\n  /**\n   * A penalty (in seconds) applied to the route cost when a toll booth is encountered. This penalty can be used to reduce the likelihood of suggesting a route with toll booths unless absolutely necessary.\n   * @type {number}\n   * @memberof MotorcycleCostingOptions\n   */\n  tollBoothPenalty?: number;\n  /**\n   * The estimated cost (in seconds) when a ferry is encountered.\n   * @type {number}\n   * @memberof MotorcycleCostingOptions\n   */\n  ferryCost?: number;\n  /**\n   * A measure of willingness to use highways. Values near 0 attempt to avoid highways and stay on roads with lower speeds, and values near 1 indicate the rider is more comfortable on these roads.\n   * @type {number}\n   * @memberof MotorcycleCostingOptions\n   */\n  useHighways?: number;\n  /**\n   * A measure of willingness to take toll roads. Values near 0 attempt to avoid tolls, and values near 1 will favour them. Note that as some routes may be impossible without tolls, 0 does not guarantee avoidance of them.\n   * @type {number}\n   * @memberof MotorcycleCostingOptions\n   */\n  useTolls?: number;\n  /**\n   * A measure of willingness to take track roads. Values near 0 attempt to avoid them, and values near 1 will favour them. Note that as some routes may be impossible without track roads, 0 does not guarantee avoidance of them. The default value is 0 for automobiles, busses, and trucks; and 0.5 for all other costing modes.\n   * @type {number}\n   * @memberof MotorcycleCostingOptions\n   */\n  useTracks?: number;\n  /**\n   * The top speed (in kph) that the vehicle is capable of travelling.\n   * @type {number}\n   * @memberof MotorcycleCostingOptions\n   */\n  topSpeed?: number;\n  /**\n   * If true changes the cost metric to be quasi-shortest (pure distance-based) costing. This will disable ALL other costing factors.\n   * @type {boolean}\n   * @memberof MotorcycleCostingOptions\n   */\n  shortest?: boolean;\n  /**\n   * If true, ignores all known closures. This option cannot be set if `location.search_filter.exclude_closures` is also specified.\n   * @type {boolean}\n   * @memberof MotorcycleCostingOptions\n   */\n  ignoreClosures?: boolean;\n  /**\n   * If true, indicates the desire to include HOV roads with a 2-occupant requirement in the route when advantageous.\n   * @type {boolean}\n   * @memberof MotorcycleCostingOptions\n   */\n  includeHov2?: boolean;\n  /**\n   * If true, indicates the desire to include HOV roads with a 3-occupant requirement in the route when advantageous.\n   * @type {boolean}\n   * @memberof MotorcycleCostingOptions\n   */\n  includeHov3?: boolean;\n  /**\n   * If true, indicates the desire to include toll roads which require the driver to pay a toll if the occupant requirement isn't met\n   * @type {boolean}\n   * @memberof MotorcycleCostingOptions\n   */\n  includeHot?: boolean;\n  /**\n   * A factor that multiplies the cost when alleys are encountered.\n   * @type {number}\n   * @memberof MotorcycleCostingOptions\n   */\n  alleyFactor?: number;\n  /**\n   * A measure of the rider's sense of adventure. Values near 0 attempt to avoid highways and stay on roads with potentially unsuitable terrain (trails, tracks, unclassified, or bad surfaces), and values near 1 will tend to avoid major roads and route on secondary roads.\n   * @type {number}\n   * @memberof MotorcycleCostingOptions\n   */\n  useTrails?: number;\n}\n\n/**\n * Check if a given object implements the MotorcycleCostingOptions interface.\n */\nexport function instanceOfMotorcycleCostingOptions(\n  value: object,\n): value is MotorcycleCostingOptions {\n  return true;\n}\n\nexport function MotorcycleCostingOptionsFromJSON(\n  json: any,\n): MotorcycleCostingOptions {\n  return MotorcycleCostingOptionsFromJSONTyped(json, false);\n}\n\nexport function MotorcycleCostingOptionsFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): MotorcycleCostingOptions {\n  if (json == null) {\n    return json;\n  }\n  return {\n    maneuverPenalty:\n      json[\"maneuver_penalty\"] == null ? undefined : json[\"maneuver_penalty\"],\n    gateCost: json[\"gate_cost\"] == null ? undefined : json[\"gate_cost\"],\n    gatePenalty:\n      json[\"gate_penalty\"] == null ? undefined : json[\"gate_penalty\"],\n    countryCrossingCost:\n      json[\"country_crossing_cost\"] == null\n        ? undefined\n        : json[\"country_crossing_cost\"],\n    countryCrossingPenalty:\n      json[\"country_crossing_penalty\"] == null\n        ? undefined\n        : json[\"country_crossing_penalty\"],\n    servicePenalty:\n      json[\"service_penalty\"] == null ? undefined : json[\"service_penalty\"],\n    serviceFactor:\n      json[\"service_factor\"] == null ? undefined : json[\"service_factor\"],\n    useLivingStreets:\n      json[\"use_living_streets\"] == null\n        ? undefined\n        : json[\"use_living_streets\"],\n    useFerry: json[\"use_ferry\"] == null ? undefined : json[\"use_ferry\"],\n    ignoreRestrictions:\n      json[\"ignore_restrictions\"] == null\n        ? undefined\n        : json[\"ignore_restrictions\"],\n    ignoreNonVehicularRestrictions:\n      json[\"ignore_non_vehicular_restrictions\"] == null\n        ? undefined\n        : json[\"ignore_non_vehicular_restrictions\"],\n    ignoreOneways:\n      json[\"ignore_oneways\"] == null ? undefined : json[\"ignore_oneways\"],\n    height: json[\"height\"] == null ? undefined : json[\"height\"],\n    width: json[\"width\"] == null ? undefined : json[\"width\"],\n    tollBoothCost:\n      json[\"toll_booth_cost\"] == null ? undefined : json[\"toll_booth_cost\"],\n    tollBoothPenalty:\n      json[\"toll_booth_penalty\"] == null\n        ? undefined\n        : json[\"toll_booth_penalty\"],\n    ferryCost: json[\"ferry_cost\"] == null ? undefined : json[\"ferry_cost\"],\n    useHighways:\n      json[\"use_highways\"] == null ? undefined : json[\"use_highways\"],\n    useTolls: json[\"use_tolls\"] == null ? undefined : json[\"use_tolls\"],\n    useTracks: json[\"use_tracks\"] == null ? undefined : json[\"use_tracks\"],\n    topSpeed: json[\"top_speed\"] == null ? undefined : json[\"top_speed\"],\n    shortest: json[\"shortest\"] == null ? undefined : json[\"shortest\"],\n    ignoreClosures:\n      json[\"ignore_closures\"] == null ? undefined : json[\"ignore_closures\"],\n    includeHov2:\n      json[\"include_hov2\"] == null ? undefined : json[\"include_hov2\"],\n    includeHov3:\n      json[\"include_hov3\"] == null ? undefined : json[\"include_hov3\"],\n    includeHot: json[\"include_hot\"] == null ? undefined : json[\"include_hot\"],\n    alleyFactor:\n      json[\"alley_factor\"] == null ? undefined : json[\"alley_factor\"],\n    useTrails: json[\"use_trails\"] == null ? undefined : json[\"use_trails\"],\n  };\n}\n\nexport function MotorcycleCostingOptionsToJSON(\n  json: any,\n): MotorcycleCostingOptions {\n  return MotorcycleCostingOptionsToJSONTyped(json, false);\n}\n\nexport function MotorcycleCostingOptionsToJSONTyped(\n  value?: MotorcycleCostingOptions | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    maneuver_penalty: value[\"maneuverPenalty\"],\n    gate_cost: value[\"gateCost\"],\n    gate_penalty: value[\"gatePenalty\"],\n    country_crossing_cost: value[\"countryCrossingCost\"],\n    country_crossing_penalty: value[\"countryCrossingPenalty\"],\n    service_penalty: value[\"servicePenalty\"],\n    service_factor: value[\"serviceFactor\"],\n    use_living_streets: value[\"useLivingStreets\"],\n    use_ferry: value[\"useFerry\"],\n    ignore_restrictions: value[\"ignoreRestrictions\"],\n    ignore_non_vehicular_restrictions: value[\"ignoreNonVehicularRestrictions\"],\n    ignore_oneways: value[\"ignoreOneways\"],\n    height: value[\"height\"],\n    width: value[\"width\"],\n    toll_booth_cost: value[\"tollBoothCost\"],\n    toll_booth_penalty: value[\"tollBoothPenalty\"],\n    ferry_cost: value[\"ferryCost\"],\n    use_highways: value[\"useHighways\"],\n    use_tolls: value[\"useTolls\"],\n    use_tracks: value[\"useTracks\"],\n    top_speed: value[\"topSpeed\"],\n    shortest: value[\"shortest\"],\n    ignore_closures: value[\"ignoreClosures\"],\n    include_hov2: value[\"includeHov2\"],\n    include_hov3: value[\"includeHov3\"],\n    include_hot: value[\"includeHot\"],\n    alley_factor: value[\"alleyFactor\"],\n    use_trails: value[\"useTrails\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { MotorScooterCostingOptions } from \"./MotorScooterCostingOptions\";\nimport {\n  MotorScooterCostingOptionsFromJSON,\n  MotorScooterCostingOptionsFromJSONTyped,\n  MotorScooterCostingOptionsToJSON,\n  MotorScooterCostingOptionsToJSONTyped,\n} from \"./MotorScooterCostingOptions\";\nimport type { PedestrianCostingOptions } from \"./PedestrianCostingOptions\";\nimport {\n  PedestrianCostingOptionsFromJSON,\n  PedestrianCostingOptionsFromJSONTyped,\n  PedestrianCostingOptionsToJSON,\n  PedestrianCostingOptionsToJSONTyped,\n} from \"./PedestrianCostingOptions\";\nimport type { TruckCostingOptions } from \"./TruckCostingOptions\";\nimport {\n  TruckCostingOptionsFromJSON,\n  TruckCostingOptionsFromJSONTyped,\n  TruckCostingOptionsToJSON,\n  TruckCostingOptionsToJSONTyped,\n} from \"./TruckCostingOptions\";\nimport type { BicycleCostingOptions } from \"./BicycleCostingOptions\";\nimport {\n  BicycleCostingOptionsFromJSON,\n  BicycleCostingOptionsFromJSONTyped,\n  BicycleCostingOptionsToJSON,\n  BicycleCostingOptionsToJSONTyped,\n} from \"./BicycleCostingOptions\";\nimport type { LowSpeedVehicleCostingOptions } from \"./LowSpeedVehicleCostingOptions\";\nimport {\n  LowSpeedVehicleCostingOptionsFromJSON,\n  LowSpeedVehicleCostingOptionsFromJSONTyped,\n  LowSpeedVehicleCostingOptionsToJSON,\n  LowSpeedVehicleCostingOptionsToJSONTyped,\n} from \"./LowSpeedVehicleCostingOptions\";\nimport type { MotorcycleCostingOptions } from \"./MotorcycleCostingOptions\";\nimport {\n  MotorcycleCostingOptionsFromJSON,\n  MotorcycleCostingOptionsFromJSONTyped,\n  MotorcycleCostingOptionsToJSON,\n  MotorcycleCostingOptionsToJSONTyped,\n} from \"./MotorcycleCostingOptions\";\nimport type { AutoCostingOptions } from \"./AutoCostingOptions\";\nimport {\n  AutoCostingOptionsFromJSON,\n  AutoCostingOptionsFromJSONTyped,\n  AutoCostingOptionsToJSON,\n  AutoCostingOptionsToJSONTyped,\n} from \"./AutoCostingOptions\";\n\n/**\n *\n * @export\n * @interface CostingOptions\n */\nexport interface CostingOptions {\n  /**\n   *\n   * @type {AutoCostingOptions}\n   * @memberof CostingOptions\n   */\n  auto?: AutoCostingOptions;\n  /**\n   *\n   * @type {AutoCostingOptions}\n   * @memberof CostingOptions\n   */\n  bus?: AutoCostingOptions;\n  /**\n   *\n   * @type {AutoCostingOptions}\n   * @memberof CostingOptions\n   */\n  taxi?: AutoCostingOptions;\n  /**\n   *\n   * @type {TruckCostingOptions}\n   * @memberof CostingOptions\n   */\n  truck?: TruckCostingOptions;\n  /**\n   *\n   * @type {BicycleCostingOptions}\n   * @memberof CostingOptions\n   */\n  bicycle?: BicycleCostingOptions;\n  /**\n   *\n   * @type {MotorScooterCostingOptions}\n   * @memberof CostingOptions\n   */\n  motorScooter?: MotorScooterCostingOptions;\n  /**\n   *\n   * @type {MotorcycleCostingOptions}\n   * @memberof CostingOptions\n   */\n  motorcycle?: MotorcycleCostingOptions;\n  /**\n   *\n   * @type {PedestrianCostingOptions}\n   * @memberof CostingOptions\n   */\n  pedestrian?: PedestrianCostingOptions;\n  /**\n   *\n   * @type {LowSpeedVehicleCostingOptions}\n   * @memberof CostingOptions\n   */\n  lowSpeedVehicle?: LowSpeedVehicleCostingOptions;\n}\n\n/**\n * Check if a given object implements the CostingOptions interface.\n */\nexport function instanceOfCostingOptions(\n  value: object,\n): value is CostingOptions {\n  return true;\n}\n\nexport function CostingOptionsFromJSON(json: any): CostingOptions {\n  return CostingOptionsFromJSONTyped(json, false);\n}\n\nexport function CostingOptionsFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): CostingOptions {\n  if (json == null) {\n    return json;\n  }\n  return {\n    auto:\n      json[\"auto\"] == null\n        ? undefined\n        : AutoCostingOptionsFromJSON(json[\"auto\"]),\n    bus:\n      json[\"bus\"] == null ? undefined : AutoCostingOptionsFromJSON(json[\"bus\"]),\n    taxi:\n      json[\"taxi\"] == null\n        ? undefined\n        : AutoCostingOptionsFromJSON(json[\"taxi\"]),\n    truck:\n      json[\"truck\"] == null\n        ? undefined\n        : TruckCostingOptionsFromJSON(json[\"truck\"]),\n    bicycle:\n      json[\"bicycle\"] == null\n        ? undefined\n        : BicycleCostingOptionsFromJSON(json[\"bicycle\"]),\n    motorScooter:\n      json[\"motor_scooter\"] == null\n        ? undefined\n        : MotorScooterCostingOptionsFromJSON(json[\"motor_scooter\"]),\n    motorcycle:\n      json[\"motorcycle\"] == null\n        ? undefined\n        : MotorcycleCostingOptionsFromJSON(json[\"motorcycle\"]),\n    pedestrian:\n      json[\"pedestrian\"] == null\n        ? undefined\n        : PedestrianCostingOptionsFromJSON(json[\"pedestrian\"]),\n    lowSpeedVehicle:\n      json[\"low_speed_vehicle\"] == null\n        ? undefined\n        : LowSpeedVehicleCostingOptionsFromJSON(json[\"low_speed_vehicle\"]),\n  };\n}\n\nexport function CostingOptionsToJSON(json: any): CostingOptions {\n  return CostingOptionsToJSONTyped(json, false);\n}\n\nexport function CostingOptionsToJSONTyped(\n  value?: CostingOptions | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    auto: AutoCostingOptionsToJSON(value[\"auto\"]),\n    bus: AutoCostingOptionsToJSON(value[\"bus\"]),\n    taxi: AutoCostingOptionsToJSON(value[\"taxi\"]),\n    truck: TruckCostingOptionsToJSON(value[\"truck\"]),\n    bicycle: BicycleCostingOptionsToJSON(value[\"bicycle\"]),\n    motor_scooter: MotorScooterCostingOptionsToJSON(value[\"motorScooter\"]),\n    motorcycle: MotorcycleCostingOptionsToJSON(value[\"motorcycle\"]),\n    pedestrian: PedestrianCostingOptionsToJSON(value[\"pedestrian\"]),\n    low_speed_vehicle: LowSpeedVehicleCostingOptionsToJSON(\n      value[\"lowSpeedVehicle\"],\n    ),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n *\n * @export\n */\nexport const MapMatchCostingModel = {\n  Auto: \"auto\",\n  Bus: \"bus\",\n  Taxi: \"taxi\",\n  Truck: \"truck\",\n  Bicycle: \"bicycle\",\n  Bikeshare: \"bikeshare\",\n  MotorScooter: \"motor_scooter\",\n  Motorcycle: \"motorcycle\",\n  Pedestrian: \"pedestrian\",\n  LowSpeedVehicle: \"low_speed_vehicle\",\n} as const;\nexport type MapMatchCostingModel =\n  (typeof MapMatchCostingModel)[keyof typeof MapMatchCostingModel];\n\nexport function instanceOfMapMatchCostingModel(value: any): boolean {\n  for (const key in MapMatchCostingModel) {\n    if (Object.prototype.hasOwnProperty.call(MapMatchCostingModel, key)) {\n      if (\n        MapMatchCostingModel[key as keyof typeof MapMatchCostingModel] === value\n      ) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function MapMatchCostingModelFromJSON(json: any): MapMatchCostingModel {\n  return MapMatchCostingModelFromJSONTyped(json, false);\n}\n\nexport function MapMatchCostingModelFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): MapMatchCostingModel {\n  return json as MapMatchCostingModel;\n}\n\nexport function MapMatchCostingModelToJSON(\n  value?: MapMatchCostingModel | null,\n): any {\n  return value as any;\n}\n\nexport function MapMatchCostingModelToJSONTyped(\n  value: any,\n  ignoreDiscriminator: boolean,\n): MapMatchCostingModel {\n  return value as MapMatchCostingModel;\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n *\n * @export\n */\nexport const DistanceUnit = {\n  Km: \"km\",\n  Mi: \"mi\",\n} as const;\nexport type DistanceUnit = (typeof DistanceUnit)[keyof typeof DistanceUnit];\n\nexport function instanceOfDistanceUnit(value: any): boolean {\n  for (const key in DistanceUnit) {\n    if (Object.prototype.hasOwnProperty.call(DistanceUnit, key)) {\n      if (DistanceUnit[key as keyof typeof DistanceUnit] === value) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function DistanceUnitFromJSON(json: any): DistanceUnit {\n  return DistanceUnitFromJSONTyped(json, false);\n}\n\nexport function DistanceUnitFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): DistanceUnit {\n  return json as DistanceUnit;\n}\n\nexport function DistanceUnitToJSON(value?: DistanceUnit | null): any {\n  return value as any;\n}\n\nexport function DistanceUnitToJSONTyped(\n  value: any,\n  ignoreDiscriminator: boolean,\n): DistanceUnit {\n  return value as DistanceUnit;\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n *\n * @export\n */\nexport const RoutingLanguages = {\n  BgBg: \"bg-BG\",\n  CaEs: \"ca-ES\",\n  CsCz: \"cs-CZ\",\n  DaDk: \"da-DK\",\n  DeDe: \"de-DE\",\n  ElGr: \"el-GR\",\n  EnGb: \"en-GB\",\n  EnUsXPirate: \"en-US-x-pirate\",\n  EnUs: \"en-US\",\n  EsEs: \"es-ES\",\n  EtEe: \"et-EE\",\n  FiFi: \"fi-FI\",\n  FrFr: \"fr-FR\",\n  HiIn: \"hi-IN\",\n  HuHu: \"hu-HU\",\n  ItIt: \"it-IT\",\n  JaJp: \"ja-JP\",\n  NbNo: \"nb-NO\",\n  NlNl: \"nl-NL\",\n  PlPl: \"pl-PL\",\n  PtBr: \"pt-BR\",\n  PtPt: \"pt-PT\",\n  RoRo: \"ro-RO\",\n  RuRu: \"ru-RU\",\n  SkSk: \"sk-SK\",\n  SlSi: \"sl-SI\",\n  SvSe: \"sv-SE\",\n  TrTr: \"tr-TR\",\n  UkUa: \"uk-UA\",\n} as const;\nexport type RoutingLanguages =\n  (typeof RoutingLanguages)[keyof typeof RoutingLanguages];\n\nexport function instanceOfRoutingLanguages(value: any): boolean {\n  for (const key in RoutingLanguages) {\n    if (Object.prototype.hasOwnProperty.call(RoutingLanguages, key)) {\n      if (RoutingLanguages[key as keyof typeof RoutingLanguages] === value) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function RoutingLanguagesFromJSON(json: any): RoutingLanguages {\n  return RoutingLanguagesFromJSONTyped(json, false);\n}\n\nexport function RoutingLanguagesFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): RoutingLanguages {\n  return json as RoutingLanguages;\n}\n\nexport function RoutingLanguagesToJSON(value?: RoutingLanguages | null): any {\n  return value as any;\n}\n\nexport function RoutingLanguagesToJSONTyped(\n  value: any,\n  ignoreDiscriminator: boolean,\n): RoutingLanguages {\n  return value as RoutingLanguages;\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface MapMatchWaypoint\n */\nexport interface MapMatchWaypoint {\n  /**\n   * The latitude of a point in the shape.\n   * @type {number}\n   * @memberof MapMatchWaypoint\n   */\n  lat: number;\n  /**\n   * The longitude of a point in the shape.\n   * @type {number}\n   * @memberof MapMatchWaypoint\n   */\n  lon: number;\n  /**\n   * A `break` represents the start or end of a leg, and allows reversals. A `through` location is an intermediate waypoint that must be visited between `break`s, but at which reversals are not allowed. A `via` is similar to a `through` except that reversals are allowed. A `break_through` is similar to a `break` in that it can be the start/end of a leg, but does not allow reversals. Defaults to `break`.\n   * @type {string}\n   * @memberof MapMatchWaypoint\n   */\n  type?: MapMatchWaypointTypeEnum;\n  /**\n   * The timestamp of the waypoint, in seconds. This can inform the map matching algorithm about when the point was measured. A UNIX timestamp, or any increasing integer sequence measuring seconds from some reference point can be used.\n   * @type {number}\n   * @memberof MapMatchWaypoint\n   */\n  time?: number;\n}\n\n/**\n * @export\n */\nexport const MapMatchWaypointTypeEnum = {\n  Break: \"break\",\n  Through: \"through\",\n  Via: \"via\",\n  BreakThrough: \"break_through\",\n} as const;\nexport type MapMatchWaypointTypeEnum =\n  (typeof MapMatchWaypointTypeEnum)[keyof typeof MapMatchWaypointTypeEnum];\n\n/**\n * Check if a given object implements the MapMatchWaypoint interface.\n */\nexport function instanceOfMapMatchWaypoint(\n  value: object,\n): value is MapMatchWaypoint {\n  if (!(\"lat\" in value) || value[\"lat\"] === undefined) return false;\n  if (!(\"lon\" in value) || value[\"lon\"] === undefined) return false;\n  return true;\n}\n\nexport function MapMatchWaypointFromJSON(json: any): MapMatchWaypoint {\n  return MapMatchWaypointFromJSONTyped(json, false);\n}\n\nexport function MapMatchWaypointFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): MapMatchWaypoint {\n  if (json == null) {\n    return json;\n  }\n  return {\n    lat: json[\"lat\"],\n    lon: json[\"lon\"],\n    type: json[\"type\"] == null ? undefined : json[\"type\"],\n    time: json[\"time\"] == null ? undefined : json[\"time\"],\n  };\n}\n\nexport function MapMatchWaypointToJSON(json: any): MapMatchWaypoint {\n  return MapMatchWaypointToJSONTyped(json, false);\n}\n\nexport function MapMatchWaypointToJSONTyped(\n  value?: MapMatchWaypoint | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    lat: value[\"lat\"],\n    lon: value[\"lon\"],\n    type: value[\"type\"],\n    time: value[\"time\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { CostingOptions } from \"./CostingOptions\";\nimport {\n  CostingOptionsFromJSON,\n  CostingOptionsFromJSONTyped,\n  CostingOptionsToJSON,\n  CostingOptionsToJSONTyped,\n} from \"./CostingOptions\";\nimport type { MapMatchCostingModel } from \"./MapMatchCostingModel\";\nimport {\n  MapMatchCostingModelFromJSON,\n  MapMatchCostingModelFromJSONTyped,\n  MapMatchCostingModelToJSON,\n  MapMatchCostingModelToJSONTyped,\n} from \"./MapMatchCostingModel\";\nimport type { DistanceUnit } from \"./DistanceUnit\";\nimport {\n  DistanceUnitFromJSON,\n  DistanceUnitFromJSONTyped,\n  DistanceUnitToJSON,\n  DistanceUnitToJSONTyped,\n} from \"./DistanceUnit\";\nimport type { RoutingLanguages } from \"./RoutingLanguages\";\nimport {\n  RoutingLanguagesFromJSON,\n  RoutingLanguagesFromJSONTyped,\n  RoutingLanguagesToJSON,\n  RoutingLanguagesToJSONTyped,\n} from \"./RoutingLanguages\";\nimport type { MapMatchWaypoint } from \"./MapMatchWaypoint\";\nimport {\n  MapMatchWaypointFromJSON,\n  MapMatchWaypointFromJSONTyped,\n  MapMatchWaypointToJSON,\n  MapMatchWaypointToJSONTyped,\n} from \"./MapMatchWaypoint\";\n\n/**\n *\n * @export\n * @interface BaseTraceRequest\n */\nexport interface BaseTraceRequest {\n  /**\n   *\n   * @type {DistanceUnit}\n   * @memberof BaseTraceRequest\n   */\n  units?: DistanceUnit;\n  /**\n   *\n   * @type {RoutingLanguages}\n   * @memberof BaseTraceRequest\n   */\n  language?: RoutingLanguages;\n  /**\n   * The level of directional narrative to include. Locations and times will always be returned, but narrative generation verbosity can be controlled with this parameter.\n   * @type {string}\n   * @memberof BaseTraceRequest\n   */\n  directionsType?: BaseTraceRequestDirectionsTypeEnum;\n  /**\n   * An identifier to disambiguate requests (echoed by the server).\n   * @type {string}\n   * @memberof BaseTraceRequest\n   */\n  id?: string;\n  /**\n   * REQUIRED if `encoded_polyline` is not present. Note that `break` type locations are only supported when `shape_match` is set to `map_match`.\n   * @type {Array<MapMatchWaypoint>}\n   * @memberof BaseTraceRequest\n   */\n  shape?: Array<MapMatchWaypoint>;\n  /**\n   * REQUIRED if `shape` is not present. An encoded polyline (https://developers.google.com/maps/documentation/utilities/polylinealgorithm). Note that the polyline must be encoded with 6 digits of precision rather than the default 5!\n   * @type {string}\n   * @memberof BaseTraceRequest\n   */\n  encodedPolyline?: string;\n  /**\n   *\n   * @type {MapMatchCostingModel}\n   * @memberof BaseTraceRequest\n   */\n  costing: MapMatchCostingModel;\n  /**\n   *\n   * @type {CostingOptions}\n   * @memberof BaseTraceRequest\n   */\n  costingOptions?: CostingOptions;\n  /**\n   * Three snapping modes provide some control over how the map matching occurs. `edge_walk` is fast, but requires extremely precise data that matches the route graph almost perfectly. `map_snap` can handle significantly noisier data, but is very expensive. `walk_or_snap`, the default, tries to use edge walking first and falls back to map matching if edge walking fails.\n   * In general, you should not need to change this parameter unless you want to trace a multi-leg route with multiple `break` locations in the `shape`.\n   * @type {string}\n   * @memberof BaseTraceRequest\n   */\n  shapeMatch?: BaseTraceRequestShapeMatchEnum;\n}\n\n/**\n * @export\n */\nexport const BaseTraceRequestDirectionsTypeEnum = {\n  None: \"none\",\n  Maneuvers: \"maneuvers\",\n  Instructions: \"instructions\",\n} as const;\nexport type BaseTraceRequestDirectionsTypeEnum =\n  (typeof BaseTraceRequestDirectionsTypeEnum)[keyof typeof BaseTraceRequestDirectionsTypeEnum];\n\n/**\n * @export\n */\nexport const BaseTraceRequestShapeMatchEnum = {\n  EdgeWalk: \"edge_walk\",\n  MapSnap: \"map_snap\",\n  WalkOrSnap: \"walk_or_snap\",\n} as const;\nexport type BaseTraceRequestShapeMatchEnum =\n  (typeof BaseTraceRequestShapeMatchEnum)[keyof typeof BaseTraceRequestShapeMatchEnum];\n\n/**\n * Check if a given object implements the BaseTraceRequest interface.\n */\nexport function instanceOfBaseTraceRequest(\n  value: object,\n): value is BaseTraceRequest {\n  if (!(\"costing\" in value) || value[\"costing\"] === undefined) return false;\n  return true;\n}\n\nexport function BaseTraceRequestFromJSON(json: any): BaseTraceRequest {\n  return BaseTraceRequestFromJSONTyped(json, false);\n}\n\nexport function BaseTraceRequestFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): BaseTraceRequest {\n  if (json == null) {\n    return json;\n  }\n  return {\n    units:\n      json[\"units\"] == null ? undefined : DistanceUnitFromJSON(json[\"units\"]),\n    language:\n      json[\"language\"] == null\n        ? undefined\n        : RoutingLanguagesFromJSON(json[\"language\"]),\n    directionsType:\n      json[\"directions_type\"] == null ? undefined : json[\"directions_type\"],\n    id: json[\"id\"] == null ? undefined : json[\"id\"],\n    shape:\n      json[\"shape\"] == null\n        ? undefined\n        : (json[\"shape\"] as Array<any>).map(MapMatchWaypointFromJSON),\n    encodedPolyline:\n      json[\"encoded_polyline\"] == null ? undefined : json[\"encoded_polyline\"],\n    costing: MapMatchCostingModelFromJSON(json[\"costing\"]),\n    costingOptions:\n      json[\"costing_options\"] == null\n        ? undefined\n        : CostingOptionsFromJSON(json[\"costing_options\"]),\n    shapeMatch: json[\"shape_match\"] == null ? undefined : json[\"shape_match\"],\n  };\n}\n\nexport function BaseTraceRequestToJSON(json: any): BaseTraceRequest {\n  return BaseTraceRequestToJSONTyped(json, false);\n}\n\nexport function BaseTraceRequestToJSONTyped(\n  value?: BaseTraceRequest | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    units: DistanceUnitToJSON(value[\"units\"]),\n    language: RoutingLanguagesToJSON(value[\"language\"]),\n    directions_type: value[\"directionsType\"],\n    id: value[\"id\"],\n    shape:\n      value[\"shape\"] == null\n        ? undefined\n        : (value[\"shape\"] as Array<any>).map(MapMatchWaypointToJSON),\n    encoded_polyline: value[\"encodedPolyline\"],\n    costing: MapMatchCostingModelToJSON(value[\"costing\"]),\n    costing_options: CostingOptionsToJSON(value[\"costingOptions\"]),\n    shape_match: value[\"shapeMatch\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface BikeNetwork\n */\nexport interface BikeNetwork {\n  /**\n   *\n   * @type {boolean}\n   * @memberof BikeNetwork\n   */\n  mountain?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof BikeNetwork\n   */\n  local?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof BikeNetwork\n   */\n  regional?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof BikeNetwork\n   */\n  national?: boolean;\n}\n\n/**\n * Check if a given object implements the BikeNetwork interface.\n */\nexport function instanceOfBikeNetwork(value: object): value is BikeNetwork {\n  return true;\n}\n\nexport function BikeNetworkFromJSON(json: any): BikeNetwork {\n  return BikeNetworkFromJSONTyped(json, false);\n}\n\nexport function BikeNetworkFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): BikeNetwork {\n  if (json == null) {\n    return json;\n  }\n  return {\n    mountain: json[\"mountain\"] == null ? undefined : json[\"mountain\"],\n    local: json[\"local\"] == null ? undefined : json[\"local\"],\n    regional: json[\"regional\"] == null ? undefined : json[\"regional\"],\n    national: json[\"national\"] == null ? undefined : json[\"national\"],\n  };\n}\n\nexport function BikeNetworkToJSON(json: any): BikeNetwork {\n  return BikeNetworkToJSONTyped(json, false);\n}\n\nexport function BikeNetworkToJSONTyped(\n  value?: BikeNetwork | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    mountain: value[\"mountain\"],\n    local: value[\"local\"],\n    regional: value[\"regional\"],\n    national: value[\"national\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n * Our database contains info from multiple sources. These identifiers can be used to either limit search results or to determine the relevance of a result.\n * @export\n */\nexport const GeocodingSource = {\n  Openstreetmap: \"openstreetmap\",\n  Openaddresses: \"openaddresses\",\n  Whosonfirst: \"whosonfirst\",\n  Geonames: \"geonames\",\n  Foursquare: \"foursquare\",\n} as const;\nexport type GeocodingSource =\n  (typeof GeocodingSource)[keyof typeof GeocodingSource];\n\nexport function instanceOfGeocodingSource(value: any): boolean {\n  for (const key in GeocodingSource) {\n    if (Object.prototype.hasOwnProperty.call(GeocodingSource, key)) {\n      if (GeocodingSource[key as keyof typeof GeocodingSource] === value) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function GeocodingSourceFromJSON(json: any): GeocodingSource {\n  return GeocodingSourceFromJSONTyped(json, false);\n}\n\nexport function GeocodingSourceFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): GeocodingSource {\n  return json as GeocodingSource;\n}\n\nexport function GeocodingSourceToJSON(value?: GeocodingSource | null): any {\n  return value as any;\n}\n\nexport function GeocodingSourceToJSONTyped(\n  value: any,\n  ignoreDiscriminator: boolean,\n): GeocodingSource {\n  return value as GeocodingSource;\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n * Our database is organized into several layers (in the GIS sense of the term) as follows:\n *\n * - `venue`: Points of interest, businesses, and things with walls\n * - `address`: Places with a street address\n * - `street`: Streets, roads, highways\n * - `county`: Places that issue passports, nations, nation-states\n * - `macroregion`: A related group of regions (mostly in Europe)\n * - `region`: The first administrative division within a country (usually states and provinces)\n * - `macrocounty`: A related group of counties (mostly in Europe)\n * - `county`: Official governmental areas; usually bigger than a locality, but almost always smaller than a region\n * - `locality`: Towns, hamlets, cities, etc.\n * - `localadmin`: Local administrative boundaries\n * - `borough`: Local administrative boundaries within cities (not widely used, but present in places such as NYC and Mexico City)\n * - `neighbourhood`: Social communities and neighborhoods (note the British spelling in the API!)\n * - `postalcode`: Postal codes used by mail services (note: not used for reverse geocoding)\n * - `coarse`: An alias for simultaneously using all administrative layers (everything except `venue` and `address`)\n * - `marinearea`: Places with fishes and boats.\n * - `ocean`: A really big marine area.\n *\n * @export\n */\nexport const GeocodingLayer = {\n  Venue: \"venue\",\n  Address: \"address\",\n  Street: \"street\",\n  Country: \"country\",\n  Macroregion: \"macroregion\",\n  Region: \"region\",\n  Macrocounty: \"macrocounty\",\n  County: \"county\",\n  Locality: \"locality\",\n  Localadmin: \"localadmin\",\n  Borough: \"borough\",\n  Neighbourhood: \"neighbourhood\",\n  Postalcode: \"postalcode\",\n  Coarse: \"coarse\",\n  Dependency: \"dependency\",\n  Macrohood: \"macrohood\",\n  Marinearea: \"marinearea\",\n  Disputed: \"disputed\",\n  Empire: \"empire\",\n  Continent: \"continent\",\n  Ocean: \"ocean\",\n} as const;\nexport type GeocodingLayer =\n  (typeof GeocodingLayer)[keyof typeof GeocodingLayer];\n\nexport function instanceOfGeocodingLayer(value: any): boolean {\n  for (const key in GeocodingLayer) {\n    if (Object.prototype.hasOwnProperty.call(GeocodingLayer, key)) {\n      if (GeocodingLayer[key as keyof typeof GeocodingLayer] === value) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function GeocodingLayerFromJSON(json: any): GeocodingLayer {\n  return GeocodingLayerFromJSONTyped(json, false);\n}\n\nexport function GeocodingLayerFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): GeocodingLayer {\n  return json as GeocodingLayer;\n}\n\nexport function GeocodingLayerToJSON(value?: GeocodingLayer | null): any {\n  return value as any;\n}\n\nexport function GeocodingLayerToJSONTyped(\n  value: any,\n  ignoreDiscriminator: boolean,\n): GeocodingLayer {\n  return value as GeocodingLayer;\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { GeocodingSource } from \"./GeocodingSource\";\nimport {\n  GeocodingSourceFromJSON,\n  GeocodingSourceFromJSONTyped,\n  GeocodingSourceToJSON,\n  GeocodingSourceToJSONTyped,\n} from \"./GeocodingSource\";\nimport type { GeocodingLayer } from \"./GeocodingLayer\";\nimport {\n  GeocodingLayerFromJSON,\n  GeocodingLayerFromJSONTyped,\n  GeocodingLayerToJSON,\n  GeocodingLayerToJSONTyped,\n} from \"./GeocodingLayer\";\n\n/**\n *\n * @export\n * @interface SearchQuery\n */\nexport interface SearchQuery {\n  /**\n   * The place name (address, venue name, etc.) to search for.\n   * @type {string}\n   * @memberof SearchQuery\n   */\n  text?: string;\n  /**\n   * The latitude of the point to focus the search on. This will bias results toward the focus point. Requires `focus.point.lon`.\n   * @type {number}\n   * @memberof SearchQuery\n   */\n  focusPointLat?: number;\n  /**\n   * The longitude of the point to focus the search on. This will bias results toward the focus point. Requires `focus.point.lat`.\n   * @type {number}\n   * @memberof SearchQuery\n   */\n  focusPointLon?: number;\n  /**\n   * Defines the min latitude component of a bounding box to limit the search to. Requires all other `boundary.rect` parameters to be specified.\n   * @type {number}\n   * @memberof SearchQuery\n   */\n  boundaryRectMinLat?: number;\n  /**\n   * Defines the max latitude component of a bounding box to limit the search to. Requires all other `boundary.rect` parameters to be specified.\n   * @type {number}\n   * @memberof SearchQuery\n   */\n  boundaryRectMaxLat?: number;\n  /**\n   * Defines the min longitude component of a bounding box to limit the search to. Requires all other `boundary.rect` parameters to be specified.\n   * @type {number}\n   * @memberof SearchQuery\n   */\n  boundaryRectMinLon?: number;\n  /**\n   * Defines the max longitude component of a bounding box to limit the search to. Requires all other `boundary.rect` parameters to be specified.\n   * @type {number}\n   * @memberof SearchQuery\n   */\n  boundaryRectMaxLon?: number;\n  /**\n   * The latitude of the center of a circle to limit the search to. Requires `boundary.circle.lon`.\n   * @type {number}\n   * @memberof SearchQuery\n   */\n  boundaryCircleLat?: number;\n  /**\n   * The longitude of the center of a circle to limit the search to. Requires `boundary.circle.lat`.\n   * @type {number}\n   * @memberof SearchQuery\n   */\n  boundaryCircleLon?: number;\n  /**\n   * The radius of the circle (in kilometers) to limit the search to. Defaults to 50km if unspecified.\n   * @type {number}\n   * @memberof SearchQuery\n   */\n  boundaryCircleRadius?: number;\n  /**\n   * A list of country codes in ISO 3116-1 alpha-2 or alpha-3 format.\n   * @type {Array<string>}\n   * @memberof SearchQuery\n   */\n  boundaryCountry?: Array<string>;\n  /**\n   * The GID of an area to limit the search to.\n   * @type {string}\n   * @memberof SearchQuery\n   */\n  boundaryGid?: string;\n  /**\n   * A list of layers to limit the search to.\n   * @type {Array<GeocodingLayer>}\n   * @memberof SearchQuery\n   */\n  layers?: Array<GeocodingLayer>;\n  /**\n   * A list of sources to limit the search to.\n   * @type {Array<GeocodingSource>}\n   * @memberof SearchQuery\n   */\n  sources?: Array<GeocodingSource>;\n  /**\n   * The maximum number of results to return.\n   * @type {number}\n   * @memberof SearchQuery\n   */\n  size?: number;\n  /**\n   * A BCP47 language tag which specifies a preference for localization of results. By default, results are in the default locale of the source data, but specifying a language will attempt to localize the results. Note that while a `langtag` (in RFC 5646 terms) can contain script, region, etc., only the `language` portion, an ISO 639 code, will be considered. So `en-US` and `en-GB` will both be treated as English.\n   * @type {string}\n   * @memberof SearchQuery\n   */\n  lang?: string;\n}\n\n/**\n * Check if a given object implements the SearchQuery interface.\n */\nexport function instanceOfSearchQuery(value: object): value is SearchQuery {\n  return \"text\" in value;\n}\n\nexport function SearchQueryFromJSON(json: any): SearchQuery {\n  return SearchQueryFromJSONTyped(json, false);\n}\n\nexport function SearchQueryFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): SearchQuery {\n  if (json == null) {\n    return json;\n  }\n  return {\n    text: json[\"text\"] == null ? undefined : json[\"text\"],\n    focusPointLat:\n      json[\"focus.point.lat\"] == null ? undefined : json[\"focus.point.lat\"],\n    focusPointLon:\n      json[\"focus.point.lon\"] == null ? undefined : json[\"focus.point.lon\"],\n    boundaryRectMinLat:\n      json[\"boundary.rect.min_lat\"] == null\n        ? undefined\n        : json[\"boundary.rect.min_lat\"],\n    boundaryRectMaxLat:\n      json[\"boundary.rect.max_lat\"] == null\n        ? undefined\n        : json[\"boundary.rect.max_lat\"],\n    boundaryRectMinLon:\n      json[\"boundary.rect.min_lon\"] == null\n        ? undefined\n        : json[\"boundary.rect.min_lon\"],\n    boundaryRectMaxLon:\n      json[\"boundary.rect.max_lon\"] == null\n        ? undefined\n        : json[\"boundary.rect.max_lon\"],\n    boundaryCircleLat:\n      json[\"boundary.circle.lat\"] == null\n        ? undefined\n        : json[\"boundary.circle.lat\"],\n    boundaryCircleLon:\n      json[\"boundary.circle.lon\"] == null\n        ? undefined\n        : json[\"boundary.circle.lon\"],\n    boundaryCircleRadius:\n      json[\"boundary.circle.radius\"] == null\n        ? undefined\n        : json[\"boundary.circle.radius\"],\n    boundaryCountry:\n      json[\"boundary.country\"] == null ? undefined : json[\"boundary.country\"],\n    boundaryGid:\n      json[\"boundary.gid\"] == null ? undefined : json[\"boundary.gid\"],\n    layers:\n      json[\"layers\"] == null\n        ? undefined\n        : (json[\"layers\"] as Array<any>).map(GeocodingLayerFromJSON),\n    sources:\n      json[\"sources\"] == null\n        ? undefined\n        : (json[\"sources\"] as Array<any>).map(GeocodingSourceFromJSON),\n    size: json[\"size\"] == null ? undefined : json[\"size\"],\n    lang: json[\"lang\"] == null ? undefined : json[\"lang\"],\n  };\n}\n\nexport function SearchQueryToJSON(json: any): SearchQuery {\n  return SearchQueryToJSONTyped(json, false);\n}\n\nexport function SearchQueryToJSONTyped(\n  value?: SearchQuery | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    text: value[\"text\"],\n    \"focus.point.lat\": value[\"focusPointLat\"],\n    \"focus.point.lon\": value[\"focusPointLon\"],\n    \"boundary.rect.min_lat\": value[\"boundaryRectMinLat\"],\n    \"boundary.rect.max_lat\": value[\"boundaryRectMaxLat\"],\n    \"boundary.rect.min_lon\": value[\"boundaryRectMinLon\"],\n    \"boundary.rect.max_lon\": value[\"boundaryRectMaxLon\"],\n    \"boundary.circle.lat\": value[\"boundaryCircleLat\"],\n    \"boundary.circle.lon\": value[\"boundaryCircleLon\"],\n    \"boundary.circle.radius\": value[\"boundaryCircleRadius\"],\n    \"boundary.country\": value[\"boundaryCountry\"],\n    \"boundary.gid\": value[\"boundaryGid\"],\n    layers:\n      value[\"layers\"] == null\n        ? undefined\n        : (value[\"layers\"] as Array<any>).map(GeocodingLayerToJSON),\n    sources:\n      value[\"sources\"] == null\n        ? undefined\n        : (value[\"sources\"] as Array<any>).map(GeocodingSourceToJSON),\n    size: value[\"size\"],\n    lang: value[\"lang\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { GeocodingSource } from \"./GeocodingSource\";\nimport {\n  GeocodingSourceFromJSON,\n  GeocodingSourceFromJSONTyped,\n  GeocodingSourceToJSON,\n  GeocodingSourceToJSONTyped,\n} from \"./GeocodingSource\";\nimport type { GeocodingLayer } from \"./GeocodingLayer\";\nimport {\n  GeocodingLayerFromJSON,\n  GeocodingLayerFromJSONTyped,\n  GeocodingLayerToJSON,\n  GeocodingLayerToJSONTyped,\n} from \"./GeocodingLayer\";\n\n/**\n *\n * @export\n * @interface SearchStructuredQuery\n */\nexport interface SearchStructuredQuery {\n  /**\n   * A street name, optionally with a house number.\n   * @type {string}\n   * @memberof SearchStructuredQuery\n   */\n  address?: string;\n  /**\n   * Varies by area, but has a locally specific meaning (NOT always an official administrative unit).\n   * @type {string}\n   * @memberof SearchStructuredQuery\n   */\n  neighbourhood?: string;\n  /**\n   * A unit within a city (not widely used, but present in places like NYC and Mexico City).\n   * @type {string}\n   * @memberof SearchStructuredQuery\n   */\n  borough?: string;\n  /**\n   * The city, village, town, etc. that the place/address is part of.\n   * @type {string}\n   * @memberof SearchStructuredQuery\n   */\n  locality?: string;\n  /**\n   * Administrative divisions between localities and regions. Not commonly used as input to structured geocoding.\n   * @type {string}\n   * @memberof SearchStructuredQuery\n   */\n  county?: string;\n  /**\n   * Typically the first administrative division within a country. For example, a US state or a Canadian province.\n   * @type {string}\n   * @memberof SearchStructuredQuery\n   */\n  region?: string;\n  /**\n   * A mail sorting code.\n   * @type {string}\n   * @memberof SearchStructuredQuery\n   */\n  postalcode?: string;\n  /**\n   * A country code in ISO 3116-1 alpha-2 or alpha-3 format.\n   * @type {string}\n   * @memberof SearchStructuredQuery\n   */\n  country?: string;\n  /**\n   * The latitude of the point to focus the search on. This will bias results toward the focus point. Requires `focus.point.lon`.\n   * @type {number}\n   * @memberof SearchStructuredQuery\n   */\n  focusPointLat?: number;\n  /**\n   * The longitude of the point to focus the search on. This will bias results toward the focus point. Requires `focus.point.lat`.\n   * @type {number}\n   * @memberof SearchStructuredQuery\n   */\n  focusPointLon?: number;\n  /**\n   * Defines the min latitude component of a bounding box to limit the search to. Requires all other `boundary.rect` parameters to be specified.\n   * @type {number}\n   * @memberof SearchStructuredQuery\n   */\n  boundaryRectMinLat?: number;\n  /**\n   * Defines the max latitude component of a bounding box to limit the search to. Requires all other `boundary.rect` parameters to be specified.\n   * @type {number}\n   * @memberof SearchStructuredQuery\n   */\n  boundaryRectMaxLat?: number;\n  /**\n   * Defines the min longitude component of a bounding box to limit the search to. Requires all other `boundary.rect` parameters to be specified.\n   * @type {number}\n   * @memberof SearchStructuredQuery\n   */\n  boundaryRectMinLon?: number;\n  /**\n   * Defines the max longitude component of a bounding box to limit the search to. Requires all other `boundary.rect` parameters to be specified.\n   * @type {number}\n   * @memberof SearchStructuredQuery\n   */\n  boundaryRectMaxLon?: number;\n  /**\n   * The latitude of the center of a circle to limit the search to. Requires `boundary.circle.lon`.\n   * @type {number}\n   * @memberof SearchStructuredQuery\n   */\n  boundaryCircleLat?: number;\n  /**\n   * The longitude of the center of a circle to limit the search to. Requires `boundary.circle.lat`.\n   * @type {number}\n   * @memberof SearchStructuredQuery\n   */\n  boundaryCircleLon?: number;\n  /**\n   * The radius of the circle (in kilometers) to limit the search to. Defaults to 50km if unspecified.\n   * @type {number}\n   * @memberof SearchStructuredQuery\n   */\n  boundaryCircleRadius?: number;\n  /**\n   * A list of country codes in ISO 3116-1 alpha-2 or alpha-3 format.\n   * @type {Array<string>}\n   * @memberof SearchStructuredQuery\n   */\n  boundaryCountry?: Array<string>;\n  /**\n   * The GID of an area to limit the search to.\n   * @type {string}\n   * @memberof SearchStructuredQuery\n   */\n  boundaryGid?: string;\n  /**\n   * A list of layers to limit the search to.\n   * @type {Array<GeocodingLayer>}\n   * @memberof SearchStructuredQuery\n   */\n  layers?: Array<GeocodingLayer>;\n  /**\n   * A list of sources to limit the search to.\n   * @type {Array<GeocodingSource>}\n   * @memberof SearchStructuredQuery\n   */\n  sources?: Array<GeocodingSource>;\n  /**\n   * The maximum number of results to return.\n   * @type {number}\n   * @memberof SearchStructuredQuery\n   */\n  size?: number;\n  /**\n   * A BCP47 language tag which specifies a preference for localization of results. By default, results are in the default locale of the source data, but specifying a language will attempt to localize the results. Note that while a `langtag` (in RFC 5646 terms) can contain script, region, etc., only the `language` portion, an ISO 639 code, will be considered. So `en-US` and `en-GB` will both be treated as English.\n   * @type {string}\n   * @memberof SearchStructuredQuery\n   */\n  lang?: string;\n}\n\n/**\n * Check if a given object implements the SearchStructuredQuery interface.\n */\nexport function instanceOfSearchStructuredQuery(\n  value: object,\n): value is SearchStructuredQuery {\n  return true;\n}\n\nexport function SearchStructuredQueryFromJSON(\n  json: any,\n): SearchStructuredQuery {\n  return SearchStructuredQueryFromJSONTyped(json, false);\n}\n\nexport function SearchStructuredQueryFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): SearchStructuredQuery {\n  if (json == null) {\n    return json;\n  }\n  return {\n    address: json[\"address\"] == null ? undefined : json[\"address\"],\n    neighbourhood:\n      json[\"neighbourhood\"] == null ? undefined : json[\"neighbourhood\"],\n    borough: json[\"borough\"] == null ? undefined : json[\"borough\"],\n    locality: json[\"locality\"] == null ? undefined : json[\"locality\"],\n    county: json[\"county\"] == null ? undefined : json[\"county\"],\n    region: json[\"region\"] == null ? undefined : json[\"region\"],\n    postalcode: json[\"postalcode\"] == null ? undefined : json[\"postalcode\"],\n    country: json[\"country\"] == null ? undefined : json[\"country\"],\n    focusPointLat:\n      json[\"focus.point.lat\"] == null ? undefined : json[\"focus.point.lat\"],\n    focusPointLon:\n      json[\"focus.point.lon\"] == null ? undefined : json[\"focus.point.lon\"],\n    boundaryRectMinLat:\n      json[\"boundary.rect.min_lat\"] == null\n        ? undefined\n        : json[\"boundary.rect.min_lat\"],\n    boundaryRectMaxLat:\n      json[\"boundary.rect.max_lat\"] == null\n        ? undefined\n        : json[\"boundary.rect.max_lat\"],\n    boundaryRectMinLon:\n      json[\"boundary.rect.min_lon\"] == null\n        ? undefined\n        : json[\"boundary.rect.min_lon\"],\n    boundaryRectMaxLon:\n      json[\"boundary.rect.max_lon\"] == null\n        ? undefined\n        : json[\"boundary.rect.max_lon\"],\n    boundaryCircleLat:\n      json[\"boundary.circle.lat\"] == null\n        ? undefined\n        : json[\"boundary.circle.lat\"],\n    boundaryCircleLon:\n      json[\"boundary.circle.lon\"] == null\n        ? undefined\n        : json[\"boundary.circle.lon\"],\n    boundaryCircleRadius:\n      json[\"boundary.circle.radius\"] == null\n        ? undefined\n        : json[\"boundary.circle.radius\"],\n    boundaryCountry:\n      json[\"boundary.country\"] == null ? undefined : json[\"boundary.country\"],\n    boundaryGid:\n      json[\"boundary.gid\"] == null ? undefined : json[\"boundary.gid\"],\n    layers:\n      json[\"layers\"] == null\n        ? undefined\n        : (json[\"layers\"] as Array<any>).map(GeocodingLayerFromJSON),\n    sources:\n      json[\"sources\"] == null\n        ? undefined\n        : (json[\"sources\"] as Array<any>).map(GeocodingSourceFromJSON),\n    size: json[\"size\"] == null ? undefined : json[\"size\"],\n    lang: json[\"lang\"] == null ? undefined : json[\"lang\"],\n  };\n}\n\nexport function SearchStructuredQueryToJSON(json: any): SearchStructuredQuery {\n  return SearchStructuredQueryToJSONTyped(json, false);\n}\n\nexport function SearchStructuredQueryToJSONTyped(\n  value?: SearchStructuredQuery | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    address: value[\"address\"],\n    neighbourhood: value[\"neighbourhood\"],\n    borough: value[\"borough\"],\n    locality: value[\"locality\"],\n    county: value[\"county\"],\n    region: value[\"region\"],\n    postalcode: value[\"postalcode\"],\n    country: value[\"country\"],\n    \"focus.point.lat\": value[\"focusPointLat\"],\n    \"focus.point.lon\": value[\"focusPointLon\"],\n    \"boundary.rect.min_lat\": value[\"boundaryRectMinLat\"],\n    \"boundary.rect.max_lat\": value[\"boundaryRectMaxLat\"],\n    \"boundary.rect.min_lon\": value[\"boundaryRectMinLon\"],\n    \"boundary.rect.max_lon\": value[\"boundaryRectMaxLon\"],\n    \"boundary.circle.lat\": value[\"boundaryCircleLat\"],\n    \"boundary.circle.lon\": value[\"boundaryCircleLon\"],\n    \"boundary.circle.radius\": value[\"boundaryCircleRadius\"],\n    \"boundary.country\": value[\"boundaryCountry\"],\n    \"boundary.gid\": value[\"boundaryGid\"],\n    layers:\n      value[\"layers\"] == null\n        ? undefined\n        : (value[\"layers\"] as Array<any>).map(GeocodingLayerToJSON),\n    sources:\n      value[\"sources\"] == null\n        ? undefined\n        : (value[\"sources\"] as Array<any>).map(GeocodingSourceToJSON),\n    size: value[\"size\"],\n    lang: value[\"lang\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport type { SearchQuery } from \"./SearchQuery\";\nimport {\n  instanceOfSearchQuery,\n  SearchQueryFromJSON,\n  SearchQueryFromJSONTyped,\n  SearchQueryToJSON,\n} from \"./SearchQuery\";\nimport type { SearchStructuredQuery } from \"./SearchStructuredQuery\";\nimport {\n  instanceOfSearchStructuredQuery,\n  SearchStructuredQueryFromJSON,\n  SearchStructuredQueryFromJSONTyped,\n  SearchStructuredQueryToJSON,\n} from \"./SearchStructuredQuery\";\n\n/**\n * @type BulkRequestQuery\n *\n * @export\n */\nexport type BulkRequestQuery = SearchQuery | SearchStructuredQuery;\n\nexport function BulkRequestQueryFromJSON(json: any): BulkRequestQuery {\n  return BulkRequestQueryFromJSONTyped(json, false);\n}\n\nexport function BulkRequestQueryFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): BulkRequestQuery {\n  if (json == null) {\n    return json;\n  }\n  if (typeof json !== \"object\") {\n    return json;\n  }\n  if (instanceOfSearchQuery(json)) {\n    return SearchQueryFromJSONTyped(json, true);\n  }\n  if (instanceOfSearchStructuredQuery(json)) {\n    return SearchStructuredQueryFromJSONTyped(json, true);\n  }\n\n  return {} as any;\n}\n\nexport function BulkRequestQueryToJSON(json: any): any {\n  return BulkRequestQueryToJSONTyped(json, false);\n}\n\nexport function BulkRequestQueryToJSONTyped(\n  value?: BulkRequestQuery | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n  if (typeof value !== \"object\") {\n    return value;\n  }\n  if (instanceOfSearchQuery(value)) {\n    return SearchQueryToJSON(value as SearchQuery);\n  }\n  if (instanceOfSearchStructuredQuery(value)) {\n    return SearchStructuredQueryToJSON(value as SearchStructuredQuery);\n  }\n\n  return {};\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { BulkRequestQuery } from \"./BulkRequestQuery\";\nimport {\n  BulkRequestQueryFromJSON,\n  BulkRequestQueryFromJSONTyped,\n  BulkRequestQueryToJSON,\n  BulkRequestQueryToJSONTyped,\n} from \"./BulkRequestQuery\";\n\n/**\n *\n * @export\n * @interface BulkRequest\n */\nexport interface BulkRequest {\n  /**\n   *\n   * @type {string}\n   * @memberof BulkRequest\n   */\n  endpoint?: BulkRequestEndpointEnum;\n  /**\n   *\n   * @type {BulkRequestQuery}\n   * @memberof BulkRequest\n   */\n  query?: BulkRequestQuery;\n}\n\n/**\n * @export\n */\nexport const BulkRequestEndpointEnum = {\n  V1Search: \"/v1/search\",\n  V1SearchStructured: \"/v1/search/structured\",\n} as const;\nexport type BulkRequestEndpointEnum =\n  (typeof BulkRequestEndpointEnum)[keyof typeof BulkRequestEndpointEnum];\n\n/**\n * Check if a given object implements the BulkRequest interface.\n */\nexport function instanceOfBulkRequest(value: object): value is BulkRequest {\n  return true;\n}\n\nexport function BulkRequestFromJSON(json: any): BulkRequest {\n  return BulkRequestFromJSONTyped(json, false);\n}\n\nexport function BulkRequestFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): BulkRequest {\n  if (json == null) {\n    return json;\n  }\n  return {\n    endpoint: json[\"endpoint\"] == null ? undefined : json[\"endpoint\"],\n    query:\n      json[\"query\"] == null\n        ? undefined\n        : BulkRequestQueryFromJSON(json[\"query\"]),\n  };\n}\n\nexport function BulkRequestToJSON(json: any): BulkRequest {\n  return BulkRequestToJSONTyped(json, false);\n}\n\nexport function BulkRequestToJSONTyped(\n  value?: BulkRequest | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    endpoint: value[\"endpoint\"],\n    query: BulkRequestQueryToJSON(value[\"query\"]),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface GeocodingObject\n */\nexport interface GeocodingObject {\n  /**\n   * A URL containing attribution information. If you are not using Stadia Maps and our standard attribution already for your basemaps, you must include this attribution link somewhere in your website/app.\n   * @type {string}\n   * @memberof GeocodingObject\n   */\n  attribution?: string;\n  /**\n   * Technical details of the query. This is most useful for debugging during development. See the full example for the list of properties; these should be self-explanatory, so we don't enumerate them in the spec.\n   * @type {{ [key: string]: any; }}\n   * @memberof GeocodingObject\n   */\n  query?: { [key: string]: any };\n  /**\n   * An array of non-critical warnings. This is normally for informational/debugging purposes and not a serious problem.\n   * @type {Array<string>}\n   * @memberof GeocodingObject\n   */\n  warnings?: Array<string>;\n  /**\n   * An array of more serious errors (for example, omitting a required parameter). Don’t ignore these.\n   * @type {Array<string>}\n   * @memberof GeocodingObject\n   */\n  errors?: Array<string>;\n}\n\n/**\n * Check if a given object implements the GeocodingObject interface.\n */\nexport function instanceOfGeocodingObject(\n  value: object,\n): value is GeocodingObject {\n  return true;\n}\n\nexport function GeocodingObjectFromJSON(json: any): GeocodingObject {\n  return GeocodingObjectFromJSONTyped(json, false);\n}\n\nexport function GeocodingObjectFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): GeocodingObject {\n  if (json == null) {\n    return json;\n  }\n  return {\n    attribution: json[\"attribution\"] == null ? undefined : json[\"attribution\"],\n    query: json[\"query\"] == null ? undefined : json[\"query\"],\n    warnings: json[\"warnings\"] == null ? undefined : json[\"warnings\"],\n    errors: json[\"errors\"] == null ? undefined : json[\"errors\"],\n  };\n}\n\nexport function GeocodingObjectToJSON(json: any): GeocodingObject {\n  return GeocodingObjectToJSONTyped(json, false);\n}\n\nexport function GeocodingObjectToJSONTyped(\n  value?: GeocodingObject | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    attribution: value[\"attribution\"],\n    query: value[\"query\"],\n    warnings: value[\"warnings\"],\n    errors: value[\"errors\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface GeoJSONPoint\n */\nexport interface GeoJSONPoint {\n  /**\n   *\n   * @type {string}\n   * @memberof GeoJSONPoint\n   */\n  type: GeoJSONPointTypeEnum;\n  /**\n   *\n   * @type {Array<number>}\n   * @memberof GeoJSONPoint\n   */\n  coordinates: Array<number>;\n}\n\n/**\n * @export\n */\nexport const GeoJSONPointTypeEnum = {\n  Point: \"Point\",\n  MultiPoint: \"MultiPoint\",\n  LineString: \"LineString\",\n  MultiLineString: \"MultiLineString\",\n  Polygon: \"Polygon\",\n  MultiPolygon: \"MultiPolygon\",\n} as const;\nexport type GeoJSONPointTypeEnum =\n  (typeof GeoJSONPointTypeEnum)[keyof typeof GeoJSONPointTypeEnum];\n\n/**\n * Check if a given object implements the GeoJSONPoint interface.\n */\nexport function instanceOfGeoJSONPoint(value: object): value is GeoJSONPoint {\n  if (!(\"type\" in value) || value[\"type\"] === undefined) return false;\n  if (!(\"coordinates\" in value) || value[\"coordinates\"] === undefined)\n    return false;\n  return true;\n}\n\nexport function GeoJSONPointFromJSON(json: any): GeoJSONPoint {\n  return GeoJSONPointFromJSONTyped(json, false);\n}\n\nexport function GeoJSONPointFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): GeoJSONPoint {\n  if (json == null) {\n    return json;\n  }\n  return {\n    type: json[\"type\"],\n    coordinates: json[\"coordinates\"],\n  };\n}\n\nexport function GeoJSONPointToJSON(json: any): GeoJSONPoint {\n  return GeoJSONPointToJSONTyped(json, false);\n}\n\nexport function GeoJSONPointToJSONTyped(\n  value?: GeoJSONPoint | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    type: value[\"type\"],\n    coordinates: value[\"coordinates\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface GeocodingGeoJSONPropertiesAddendumOsm\n */\nexport interface GeocodingGeoJSONPropertiesAddendumOsm {\n  [key: string]: any | any;\n  /**\n   *\n   * @type {string}\n   * @memberof GeocodingGeoJSONPropertiesAddendumOsm\n   */\n  website?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof GeocodingGeoJSONPropertiesAddendumOsm\n   */\n  wikipedia?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof GeocodingGeoJSONPropertiesAddendumOsm\n   */\n  wikidata?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof GeocodingGeoJSONPropertiesAddendumOsm\n   */\n  phone?: string;\n}\n\n/**\n * Check if a given object implements the GeocodingGeoJSONPropertiesAddendumOsm interface.\n */\nexport function instanceOfGeocodingGeoJSONPropertiesAddendumOsm(\n  value: object,\n): value is GeocodingGeoJSONPropertiesAddendumOsm {\n  return true;\n}\n\nexport function GeocodingGeoJSONPropertiesAddendumOsmFromJSON(\n  json: any,\n): GeocodingGeoJSONPropertiesAddendumOsm {\n  return GeocodingGeoJSONPropertiesAddendumOsmFromJSONTyped(json, false);\n}\n\nexport function GeocodingGeoJSONPropertiesAddendumOsmFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): GeocodingGeoJSONPropertiesAddendumOsm {\n  if (json == null) {\n    return json;\n  }\n  return {\n    ...json,\n    website: json[\"website\"] == null ? undefined : json[\"website\"],\n    wikipedia: json[\"wikipedia\"] == null ? undefined : json[\"wikipedia\"],\n    wikidata: json[\"wikidata\"] == null ? undefined : json[\"wikidata\"],\n    phone: json[\"phone\"] == null ? undefined : json[\"phone\"],\n  };\n}\n\nexport function GeocodingGeoJSONPropertiesAddendumOsmToJSON(\n  json: any,\n): GeocodingGeoJSONPropertiesAddendumOsm {\n  return GeocodingGeoJSONPropertiesAddendumOsmToJSONTyped(json, false);\n}\n\nexport function GeocodingGeoJSONPropertiesAddendumOsmToJSONTyped(\n  value?: GeocodingGeoJSONPropertiesAddendumOsm | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    ...value,\n    website: value[\"website\"],\n    wikipedia: value[\"wikipedia\"],\n    wikidata: value[\"wikidata\"],\n    phone: value[\"phone\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { GeocodingGeoJSONPropertiesAddendumOsm } from \"./GeocodingGeoJSONPropertiesAddendumOsm\";\nimport {\n  GeocodingGeoJSONPropertiesAddendumOsmFromJSON,\n  GeocodingGeoJSONPropertiesAddendumOsmFromJSONTyped,\n  GeocodingGeoJSONPropertiesAddendumOsmToJSON,\n  GeocodingGeoJSONPropertiesAddendumOsmToJSONTyped,\n} from \"./GeocodingGeoJSONPropertiesAddendumOsm\";\n\n/**\n * Optional additional information from the underlying data source (ex: OSM). This includes select fields. The most useful fields are mapped in the definition here, but others may be available.\n * @export\n * @interface GeocodingGeoJSONPropertiesAddendum\n */\nexport interface GeocodingGeoJSONPropertiesAddendum {\n  [key: string]: any | any;\n  /**\n   *\n   * @type {GeocodingGeoJSONPropertiesAddendumOsm}\n   * @memberof GeocodingGeoJSONPropertiesAddendum\n   */\n  osm?: GeocodingGeoJSONPropertiesAddendumOsm;\n}\n\n/**\n * Check if a given object implements the GeocodingGeoJSONPropertiesAddendum interface.\n */\nexport function instanceOfGeocodingGeoJSONPropertiesAddendum(\n  value: object,\n): value is GeocodingGeoJSONPropertiesAddendum {\n  return true;\n}\n\nexport function GeocodingGeoJSONPropertiesAddendumFromJSON(\n  json: any,\n): GeocodingGeoJSONPropertiesAddendum {\n  return GeocodingGeoJSONPropertiesAddendumFromJSONTyped(json, false);\n}\n\nexport function GeocodingGeoJSONPropertiesAddendumFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): GeocodingGeoJSONPropertiesAddendum {\n  if (json == null) {\n    return json;\n  }\n  return {\n    ...json,\n    osm:\n      json[\"osm\"] == null\n        ? undefined\n        : GeocodingGeoJSONPropertiesAddendumOsmFromJSON(json[\"osm\"]),\n  };\n}\n\nexport function GeocodingGeoJSONPropertiesAddendumToJSON(\n  json: any,\n): GeocodingGeoJSONPropertiesAddendum {\n  return GeocodingGeoJSONPropertiesAddendumToJSONTyped(json, false);\n}\n\nexport function GeocodingGeoJSONPropertiesAddendumToJSONTyped(\n  value?: GeocodingGeoJSONPropertiesAddendum | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    ...value,\n    osm: GeocodingGeoJSONPropertiesAddendumOsmToJSON(value[\"osm\"]),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { GeocodingGeoJSONPropertiesAddendum } from \"./GeocodingGeoJSONPropertiesAddendum\";\nimport {\n  GeocodingGeoJSONPropertiesAddendumFromJSON,\n  GeocodingGeoJSONPropertiesAddendumFromJSONTyped,\n  GeocodingGeoJSONPropertiesAddendumToJSON,\n  GeocodingGeoJSONPropertiesAddendumToJSONTyped,\n} from \"./GeocodingGeoJSONPropertiesAddendum\";\n\n/**\n *\n * @export\n * @interface GeocodingGeoJSONProperties\n */\nexport interface GeocodingGeoJSONProperties {\n  [key: string]: any | any;\n  /**\n   * A scoped GID for this result. This can be passed to the place endpoint. Note that these are not always stable long-term.\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  gid?: string;\n  /**\n   * An ID referencing the original data source (specified via source) for the result. These IDs are specific to the source that they originated from. For example, in the case of OSM, these typically look like way/123 or point/123.\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  sourceId?: string;\n  /**\n   * A full, human-readable label. However, you may not necessarily want to use this; be sure to read the docs for name, locality, and region before making a decision. This field is mostly localized. The order of components is generally locally correct (ex: for an address in South Korea, the house number appears after the street name). However, components will use a request language equivalent if one exists (ex: Seoul instead of 서울 if lang=en).\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  label?: string;\n  /**\n   * The data layer containing the place (e.g. \"address\" or \"venue\").\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  layer?: string;\n  /**\n   * The ID of the data source that the result came from.\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  source?: string;\n  /**\n   * The name of the place, the street address including house number, or label of similar relevance. If your app is localized to a specific region, you may get better display results by combining name, locality OR region (or neither?), and postal code together in the local format. Experiment with what works best for your use case.\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  name?: string;\n  /**\n   * The accuracy of the geographic coordinates in the result. This value is a property of the result itself and won't change based on the query.\n   * A point result means that the record can reasonably be represented by a single geographic point. Addresses, venues, or interpolated addresses usually have point accuracy.\n   * Larger areas, such as a city or country, cannot be represented by a single point, so a centroid is given instead.\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  accuracy?: GeocodingGeoJSONPropertiesAccuracyEnum;\n  /**\n   *\n   * @type {GeocodingGeoJSONPropertiesAddendum}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  addendum?: GeocodingGeoJSONPropertiesAddendum;\n  /**\n   *\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  continent?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  continentGid?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  country?: string;\n  /**\n   * The ISO 3166-1 alpha-3 code for the country the place is located in.\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  countryA?: string;\n  /**\n   * The ISO 3166-1 alpha-2 code for the country the place is located in.\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  countryCode?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  countryGid?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  neighbourhood?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  neighbourhoodGid?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  borough?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  boroughGid?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  postalcode?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  street?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  housenumber?: string;\n  /**\n   * The city, village, town, etc. that the place / address is part of. Note that values may not always match postal or local conventions perfectly.\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  locality?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  localityGid?: string;\n  /**\n   * Administrative divisions between localities and regions. Useful for disambiguating nearby results with similar names.\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  county?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  countyGid?: string;\n  /**\n   * Typically the first administrative division within a country. For example, a US state or a Canadian province.\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  region?: string;\n  /**\n   * The abbreviation for the region (e.g. PA for the US state of Pennsylvania).\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  regionA?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  regionGid?: string;\n  /**\n   * In many countries, this is the lowest level of government. Sometimes interchangeable with locality.\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  localadmin?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  localadminGid?: string;\n  /**\n   * For search and structured search results, the type of match.\n   * @type {string}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  matchType?: GeocodingGeoJSONPropertiesMatchTypeEnum;\n  /**\n   * The level of confidence that the result matches what the user searched for. Only available on forward geocoding endpoints.\n   * @type {number}\n   * @memberof GeocodingGeoJSONProperties\n   */\n  confidence?: number;\n}\n\n/**\n * @export\n */\nexport const GeocodingGeoJSONPropertiesAccuracyEnum = {\n  Point: \"point\",\n  Centroid: \"centroid\",\n} as const;\nexport type GeocodingGeoJSONPropertiesAccuracyEnum =\n  (typeof GeocodingGeoJSONPropertiesAccuracyEnum)[keyof typeof GeocodingGeoJSONPropertiesAccuracyEnum];\n\n/**\n * @export\n */\nexport const GeocodingGeoJSONPropertiesMatchTypeEnum = {\n  Exact: \"exact\",\n  Interpolated: \"interpolated\",\n  Fallback: \"fallback\",\n} as const;\nexport type GeocodingGeoJSONPropertiesMatchTypeEnum =\n  (typeof GeocodingGeoJSONPropertiesMatchTypeEnum)[keyof typeof GeocodingGeoJSONPropertiesMatchTypeEnum];\n\n/**\n * Check if a given object implements the GeocodingGeoJSONProperties interface.\n */\nexport function instanceOfGeocodingGeoJSONProperties(\n  value: object,\n): value is GeocodingGeoJSONProperties {\n  return true;\n}\n\nexport function GeocodingGeoJSONPropertiesFromJSON(\n  json: any,\n): GeocodingGeoJSONProperties {\n  return GeocodingGeoJSONPropertiesFromJSONTyped(json, false);\n}\n\nexport function GeocodingGeoJSONPropertiesFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): GeocodingGeoJSONProperties {\n  if (json == null) {\n    return json;\n  }\n  return {\n    ...json,\n    gid: json[\"gid\"] == null ? undefined : json[\"gid\"],\n    sourceId: json[\"source_id\"] == null ? undefined : json[\"source_id\"],\n    label: json[\"label\"] == null ? undefined : json[\"label\"],\n    layer: json[\"layer\"] == null ? undefined : json[\"layer\"],\n    source: json[\"source\"] == null ? undefined : json[\"source\"],\n    name: json[\"name\"] == null ? undefined : json[\"name\"],\n    accuracy: json[\"accuracy\"] == null ? undefined : json[\"accuracy\"],\n    addendum:\n      json[\"addendum\"] == null\n        ? undefined\n        : GeocodingGeoJSONPropertiesAddendumFromJSON(json[\"addendum\"]),\n    continent: json[\"continent\"] == null ? undefined : json[\"continent\"],\n    continentGid:\n      json[\"continent_gid\"] == null ? undefined : json[\"continent_gid\"],\n    country: json[\"country\"] == null ? undefined : json[\"country\"],\n    countryA: json[\"country_a\"] == null ? undefined : json[\"country_a\"],\n    countryCode:\n      json[\"country_code\"] == null ? undefined : json[\"country_code\"],\n    countryGid: json[\"country_gid\"] == null ? undefined : json[\"country_gid\"],\n    neighbourhood:\n      json[\"neighbourhood\"] == null ? undefined : json[\"neighbourhood\"],\n    neighbourhoodGid:\n      json[\"neighbourhood_gid\"] == null ? undefined : json[\"neighbourhood_gid\"],\n    borough: json[\"borough\"] == null ? undefined : json[\"borough\"],\n    boroughGid: json[\"borough_gid\"] == null ? undefined : json[\"borough_gid\"],\n    postalcode: json[\"postalcode\"] == null ? undefined : json[\"postalcode\"],\n    street: json[\"street\"] == null ? undefined : json[\"street\"],\n    housenumber: json[\"housenumber\"] == null ? undefined : json[\"housenumber\"],\n    locality: json[\"locality\"] == null ? undefined : json[\"locality\"],\n    localityGid:\n      json[\"locality_gid\"] == null ? undefined : json[\"locality_gid\"],\n    county: json[\"county\"] == null ? undefined : json[\"county\"],\n    countyGid: json[\"county_gid\"] == null ? undefined : json[\"county_gid\"],\n    region: json[\"region\"] == null ? undefined : json[\"region\"],\n    regionA: json[\"region_a\"] == null ? undefined : json[\"region_a\"],\n    regionGid: json[\"region_gid\"] == null ? undefined : json[\"region_gid\"],\n    localadmin: json[\"localadmin\"] == null ? undefined : json[\"localadmin\"],\n    localadminGid:\n      json[\"localadmin_gid\"] == null ? undefined : json[\"localadmin_gid\"],\n    matchType: json[\"match_type\"] == null ? undefined : json[\"match_type\"],\n    confidence: json[\"confidence\"] == null ? undefined : json[\"confidence\"],\n  };\n}\n\nexport function GeocodingGeoJSONPropertiesToJSON(\n  json: any,\n): GeocodingGeoJSONProperties {\n  return GeocodingGeoJSONPropertiesToJSONTyped(json, false);\n}\n\nexport function GeocodingGeoJSONPropertiesToJSONTyped(\n  value?: GeocodingGeoJSONProperties | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    ...value,\n    gid: value[\"gid\"],\n    source_id: value[\"sourceId\"],\n    label: value[\"label\"],\n    layer: value[\"layer\"],\n    source: value[\"source\"],\n    name: value[\"name\"],\n    accuracy: value[\"accuracy\"],\n    addendum: GeocodingGeoJSONPropertiesAddendumToJSON(value[\"addendum\"]),\n    continent: value[\"continent\"],\n    continent_gid: value[\"continentGid\"],\n    country: value[\"country\"],\n    country_a: value[\"countryA\"],\n    country_code: value[\"countryCode\"],\n    country_gid: value[\"countryGid\"],\n    neighbourhood: value[\"neighbourhood\"],\n    neighbourhood_gid: value[\"neighbourhoodGid\"],\n    borough: value[\"borough\"],\n    borough_gid: value[\"boroughGid\"],\n    postalcode: value[\"postalcode\"],\n    street: value[\"street\"],\n    housenumber: value[\"housenumber\"],\n    locality: value[\"locality\"],\n    locality_gid: value[\"localityGid\"],\n    county: value[\"county\"],\n    county_gid: value[\"countyGid\"],\n    region: value[\"region\"],\n    region_a: value[\"regionA\"],\n    region_gid: value[\"regionGid\"],\n    localadmin: value[\"localadmin\"],\n    localadmin_gid: value[\"localadminGid\"],\n    match_type: value[\"matchType\"],\n    confidence: value[\"confidence\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { GeoJSONPoint } from \"./GeoJSONPoint\";\nimport {\n  GeoJSONPointFromJSON,\n  GeoJSONPointFromJSONTyped,\n  GeoJSONPointToJSON,\n  GeoJSONPointToJSONTyped,\n} from \"./GeoJSONPoint\";\nimport type { GeocodingGeoJSONProperties } from \"./GeocodingGeoJSONProperties\";\nimport {\n  GeocodingGeoJSONPropertiesFromJSON,\n  GeocodingGeoJSONPropertiesFromJSONTyped,\n  GeocodingGeoJSONPropertiesToJSON,\n  GeocodingGeoJSONPropertiesToJSONTyped,\n} from \"./GeocodingGeoJSONProperties\";\n\n/**\n *\n * @export\n * @interface GeocodingGeoJSONFeature\n */\nexport interface GeocodingGeoJSONFeature {\n  /**\n   *\n   * @type {string}\n   * @memberof GeocodingGeoJSONFeature\n   */\n  type: GeocodingGeoJSONFeatureTypeEnum;\n  /**\n   *\n   * @type {GeoJSONPoint}\n   * @memberof GeocodingGeoJSONFeature\n   */\n  geometry: GeoJSONPoint;\n  /**\n   *\n   * @type {GeocodingGeoJSONProperties}\n   * @memberof GeocodingGeoJSONFeature\n   */\n  properties?: GeocodingGeoJSONProperties;\n  /**\n   * An array of 4 floating point numbers representing the (W, S, E, N) extremes of the features found.\n   * @type {Array<number>}\n   * @memberof GeocodingGeoJSONFeature\n   */\n  bbox?: Array<number>;\n}\n\n/**\n * @export\n */\nexport const GeocodingGeoJSONFeatureTypeEnum = {\n  Feature: \"Feature\",\n} as const;\nexport type GeocodingGeoJSONFeatureTypeEnum =\n  (typeof GeocodingGeoJSONFeatureTypeEnum)[keyof typeof GeocodingGeoJSONFeatureTypeEnum];\n\n/**\n * Check if a given object implements the GeocodingGeoJSONFeature interface.\n */\nexport function instanceOfGeocodingGeoJSONFeature(\n  value: object,\n): value is GeocodingGeoJSONFeature {\n  if (!(\"type\" in value) || value[\"type\"] === undefined) return false;\n  if (!(\"geometry\" in value) || value[\"geometry\"] === undefined) return false;\n  return true;\n}\n\nexport function GeocodingGeoJSONFeatureFromJSON(\n  json: any,\n): GeocodingGeoJSONFeature {\n  return GeocodingGeoJSONFeatureFromJSONTyped(json, false);\n}\n\nexport function GeocodingGeoJSONFeatureFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): GeocodingGeoJSONFeature {\n  if (json == null) {\n    return json;\n  }\n  return {\n    type: json[\"type\"],\n    geometry: GeoJSONPointFromJSON(json[\"geometry\"]),\n    properties:\n      json[\"properties\"] == null\n        ? undefined\n        : GeocodingGeoJSONPropertiesFromJSON(json[\"properties\"]),\n    bbox: json[\"bbox\"] == null ? undefined : json[\"bbox\"],\n  };\n}\n\nexport function GeocodingGeoJSONFeatureToJSON(\n  json: any,\n): GeocodingGeoJSONFeature {\n  return GeocodingGeoJSONFeatureToJSONTyped(json, false);\n}\n\nexport function GeocodingGeoJSONFeatureToJSONTyped(\n  value?: GeocodingGeoJSONFeature | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    type: value[\"type\"],\n    geometry: GeoJSONPointToJSON(value[\"geometry\"]),\n    properties: GeocodingGeoJSONPropertiesToJSON(value[\"properties\"]),\n    bbox: value[\"bbox\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { GeocodingObject } from \"./GeocodingObject\";\nimport {\n  GeocodingObjectFromJSON,\n  GeocodingObjectFromJSONTyped,\n  GeocodingObjectToJSON,\n  GeocodingObjectToJSONTyped,\n} from \"./GeocodingObject\";\nimport type { GeocodingGeoJSONFeature } from \"./GeocodingGeoJSONFeature\";\nimport {\n  GeocodingGeoJSONFeatureFromJSON,\n  GeocodingGeoJSONFeatureFromJSONTyped,\n  GeocodingGeoJSONFeatureToJSON,\n  GeocodingGeoJSONFeatureToJSONTyped,\n} from \"./GeocodingGeoJSONFeature\";\n\n/**\n *\n * @export\n * @interface GeocodeResponse\n */\nexport interface GeocodeResponse {\n  /**\n   *\n   * @type {GeocodingObject}\n   * @memberof GeocodeResponse\n   */\n  geocoding: GeocodingObject;\n  /**\n   * An array of 4 floating point numbers representing the (W, S, E, N) extremes of the features found.\n   * @type {Array<number>}\n   * @memberof GeocodeResponse\n   */\n  bbox?: Array<number>;\n  /**\n   *\n   * @type {Array<GeocodingGeoJSONFeature>}\n   * @memberof GeocodeResponse\n   */\n  features: Array<GeocodingGeoJSONFeature>;\n}\n\n/**\n * Check if a given object implements the GeocodeResponse interface.\n */\nexport function instanceOfGeocodeResponse(\n  value: object,\n): value is GeocodeResponse {\n  if (!(\"geocoding\" in value) || value[\"geocoding\"] === undefined) return false;\n  if (!(\"features\" in value) || value[\"features\"] === undefined) return false;\n  return true;\n}\n\nexport function GeocodeResponseFromJSON(json: any): GeocodeResponse {\n  return GeocodeResponseFromJSONTyped(json, false);\n}\n\nexport function GeocodeResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): GeocodeResponse {\n  if (json == null) {\n    return json;\n  }\n  return {\n    geocoding: GeocodingObjectFromJSON(json[\"geocoding\"]),\n    bbox: json[\"bbox\"] == null ? undefined : json[\"bbox\"],\n    features: (json[\"features\"] as Array<any>).map(\n      GeocodingGeoJSONFeatureFromJSON,\n    ),\n  };\n}\n\nexport function GeocodeResponseToJSON(json: any): GeocodeResponse {\n  return GeocodeResponseToJSONTyped(json, false);\n}\n\nexport function GeocodeResponseToJSONTyped(\n  value?: GeocodeResponse | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    geocoding: GeocodingObjectToJSON(value[\"geocoding\"]),\n    bbox: value[\"bbox\"],\n    features: (value[\"features\"] as Array<any>).map(\n      GeocodingGeoJSONFeatureToJSON,\n    ),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { GeocodeResponse } from \"./GeocodeResponse\";\nimport {\n  GeocodeResponseFromJSON,\n  GeocodeResponseFromJSONTyped,\n  GeocodeResponseToJSON,\n  GeocodeResponseToJSONTyped,\n} from \"./GeocodeResponse\";\n\n/**\n *\n * @export\n * @interface BulkSearchResponse\n */\nexport interface BulkSearchResponse {\n  /**\n   *\n   * @type {number}\n   * @memberof BulkSearchResponse\n   */\n  status: number;\n  /**\n   *\n   * @type {GeocodeResponse}\n   * @memberof BulkSearchResponse\n   */\n  response?: GeocodeResponse;\n  /**\n   * An error message describing what went wrong (if the status is not 200).\n   * @type {string}\n   * @memberof BulkSearchResponse\n   */\n  msg?: string;\n}\n\n/**\n * Check if a given object implements the BulkSearchResponse interface.\n */\nexport function instanceOfBulkSearchResponse(\n  value: object,\n): value is BulkSearchResponse {\n  if (!(\"status\" in value) || value[\"status\"] === undefined) return false;\n  return true;\n}\n\nexport function BulkSearchResponseFromJSON(json: any): BulkSearchResponse {\n  return BulkSearchResponseFromJSONTyped(json, false);\n}\n\nexport function BulkSearchResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): BulkSearchResponse {\n  if (json == null) {\n    return json;\n  }\n  return {\n    status: json[\"status\"],\n    response:\n      json[\"response\"] == null\n        ? undefined\n        : GeocodeResponseFromJSON(json[\"response\"]),\n    msg: json[\"msg\"] == null ? undefined : json[\"msg\"],\n  };\n}\n\nexport function BulkSearchResponseToJSON(json: any): BulkSearchResponse {\n  return BulkSearchResponseToJSONTyped(json, false);\n}\n\nexport function BulkSearchResponseToJSONTyped(\n  value?: BulkSearchResponse | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    status: value[\"status\"],\n    response: GeocodeResponseToJSON(value[\"response\"]),\n    msg: value[\"msg\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface WofContextComponent\n */\nexport interface WofContextComponent {\n  /**\n   *\n   * @type {string}\n   * @memberof WofContextComponent\n   */\n  abbreviation?: string | null;\n  /**\n   * A globally unique identifier for a feature. Note: these are not stable for all datasets! For example, OSM features may be deleted and re-added with a new ID. Others like Who's on First guarantee stability long term.\n   * @type {string}\n   * @memberof WofContextComponent\n   */\n  gid: string;\n  /**\n   *\n   * @type {string}\n   * @memberof WofContextComponent\n   */\n  name: string;\n}\n\n/**\n * Check if a given object implements the WofContextComponent interface.\n */\nexport function instanceOfWofContextComponent(\n  value: object,\n): value is WofContextComponent {\n  if (!(\"gid\" in value) || value[\"gid\"] === undefined) return false;\n  if (!(\"name\" in value) || value[\"name\"] === undefined) return false;\n  return true;\n}\n\nexport function WofContextComponentFromJSON(json: any): WofContextComponent {\n  return WofContextComponentFromJSONTyped(json, false);\n}\n\nexport function WofContextComponentFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): WofContextComponent {\n  if (json == null) {\n    return json;\n  }\n  return {\n    abbreviation:\n      json[\"abbreviation\"] == null ? undefined : json[\"abbreviation\"],\n    gid: json[\"gid\"],\n    name: json[\"name\"],\n  };\n}\n\nexport function WofContextComponentToJSON(json: any): WofContextComponent {\n  return WofContextComponentToJSONTyped(json, false);\n}\n\nexport function WofContextComponentToJSONTyped(\n  value?: WofContextComponent | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    abbreviation: value[\"abbreviation\"],\n    gid: value[\"gid\"],\n    name: value[\"name\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { WofContextComponent } from \"./WofContextComponent\";\nimport {\n  WofContextComponentFromJSON,\n  WofContextComponentFromJSONTyped,\n  WofContextComponentToJSON,\n  WofContextComponentToJSONTyped,\n} from \"./WofContextComponent\";\n\n/**\n *\n * @export\n * @interface WofContext\n */\nexport interface WofContext {\n  /**\n   *\n   * @type {WofContextComponent}\n   * @memberof WofContext\n   */\n  borough?: WofContextComponent | null;\n  /**\n   *\n   * @type {WofContextComponent}\n   * @memberof WofContext\n   */\n  continent?: WofContextComponent | null;\n  /**\n   *\n   * @type {WofContextComponent}\n   * @memberof WofContext\n   */\n  country?: WofContextComponent | null;\n  /**\n   *\n   * @type {WofContextComponent}\n   * @memberof WofContext\n   */\n  county?: WofContextComponent | null;\n  /**\n   *\n   * @type {WofContextComponent}\n   * @memberof WofContext\n   */\n  dependency?: WofContextComponent | null;\n  /**\n   *\n   * @type {WofContextComponent}\n   * @memberof WofContext\n   */\n  localadmin?: WofContextComponent | null;\n  /**\n   *\n   * @type {WofContextComponent}\n   * @memberof WofContext\n   */\n  locality?: WofContextComponent | null;\n  /**\n   *\n   * @type {WofContextComponent}\n   * @memberof WofContext\n   */\n  macrocounty?: WofContextComponent | null;\n  /**\n   *\n   * @type {WofContextComponent}\n   * @memberof WofContext\n   */\n  macroregion?: WofContextComponent | null;\n  /**\n   *\n   * @type {WofContextComponent}\n   * @memberof WofContext\n   */\n  marinearea?: WofContextComponent | null;\n  /**\n   *\n   * @type {WofContextComponent}\n   * @memberof WofContext\n   */\n  neighbourhood?: WofContextComponent | null;\n  /**\n   *\n   * @type {WofContextComponent}\n   * @memberof WofContext\n   */\n  ocean?: WofContextComponent | null;\n  /**\n   *\n   * @type {WofContextComponent}\n   * @memberof WofContext\n   */\n  region?: WofContextComponent | null;\n}\n\n/**\n * Check if a given object implements the WofContext interface.\n */\nexport function instanceOfWofContext(value: object): value is WofContext {\n  return true;\n}\n\nexport function WofContextFromJSON(json: any): WofContext {\n  return WofContextFromJSONTyped(json, false);\n}\n\nexport function WofContextFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): WofContext {\n  if (json == null) {\n    return json;\n  }\n  return {\n    borough:\n      json[\"borough\"] == null\n        ? undefined\n        : WofContextComponentFromJSON(json[\"borough\"]),\n    continent:\n      json[\"continent\"] == null\n        ? undefined\n        : WofContextComponentFromJSON(json[\"continent\"]),\n    country:\n      json[\"country\"] == null\n        ? undefined\n        : WofContextComponentFromJSON(json[\"country\"]),\n    county:\n      json[\"county\"] == null\n        ? undefined\n        : WofContextComponentFromJSON(json[\"county\"]),\n    dependency:\n      json[\"dependency\"] == null\n        ? undefined\n        : WofContextComponentFromJSON(json[\"dependency\"]),\n    localadmin:\n      json[\"localadmin\"] == null\n        ? undefined\n        : WofContextComponentFromJSON(json[\"localadmin\"]),\n    locality:\n      json[\"locality\"] == null\n        ? undefined\n        : WofContextComponentFromJSON(json[\"locality\"]),\n    macrocounty:\n      json[\"macrocounty\"] == null\n        ? undefined\n        : WofContextComponentFromJSON(json[\"macrocounty\"]),\n    macroregion:\n      json[\"macroregion\"] == null\n        ? undefined\n        : WofContextComponentFromJSON(json[\"macroregion\"]),\n    marinearea:\n      json[\"marinearea\"] == null\n        ? undefined\n        : WofContextComponentFromJSON(json[\"marinearea\"]),\n    neighbourhood:\n      json[\"neighbourhood\"] == null\n        ? undefined\n        : WofContextComponentFromJSON(json[\"neighbourhood\"]),\n    ocean:\n      json[\"ocean\"] == null\n        ? undefined\n        : WofContextComponentFromJSON(json[\"ocean\"]),\n    region:\n      json[\"region\"] == null\n        ? undefined\n        : WofContextComponentFromJSON(json[\"region\"]),\n  };\n}\n\nexport function WofContextToJSON(json: any): WofContext {\n  return WofContextToJSONTyped(json, false);\n}\n\nexport function WofContextToJSONTyped(\n  value?: WofContext | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    borough: WofContextComponentToJSON(value[\"borough\"]),\n    continent: WofContextComponentToJSON(value[\"continent\"]),\n    country: WofContextComponentToJSON(value[\"country\"]),\n    county: WofContextComponentToJSON(value[\"county\"]),\n    dependency: WofContextComponentToJSON(value[\"dependency\"]),\n    localadmin: WofContextComponentToJSON(value[\"localadmin\"]),\n    locality: WofContextComponentToJSON(value[\"locality\"]),\n    macrocounty: WofContextComponentToJSON(value[\"macrocounty\"]),\n    macroregion: WofContextComponentToJSON(value[\"macroregion\"]),\n    marinearea: WofContextComponentToJSON(value[\"marinearea\"]),\n    neighbourhood: WofContextComponentToJSON(value[\"neighbourhood\"]),\n    ocean: WofContextComponentToJSON(value[\"ocean\"]),\n    region: WofContextComponentToJSON(value[\"region\"]),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { WofContext } from \"./WofContext\";\nimport {\n  WofContextFromJSON,\n  WofContextFromJSONTyped,\n  WofContextToJSON,\n  WofContextToJSONTyped,\n} from \"./WofContext\";\n\n/**\n * The geographic context for a feature.\n *\n * Note that while data sources and country codes are listed,\n * this does not *necessarily* mean that the view is a specific hierarchy endorsed by that source.\n * We generally attempt to present the same view as OpenStreetMap.\n * Contact us if your use case requires a specific political view of the world.\n * @export\n * @interface Context\n */\nexport interface Context {\n  /**\n   * The ISO 3166-1 alpha-2 country code in which the feature is located.\n   * @type {string}\n   * @memberof Context\n   */\n  iso3166A2?: string | null;\n  /**\n   * The ISO 3166-1 alpha-3 country code in which the feature is located.\n   * @type {string}\n   * @memberof Context\n   */\n  iso3166A3?: string | null;\n  /**\n   * The geographic context, with administrative hierarchy modeled using the Who's on First taxonomy.\n   * @type {WofContext}\n   * @memberof Context\n   */\n  whosonfirst: WofContext;\n}\n\n/**\n * Check if a given object implements the Context interface.\n */\nexport function instanceOfContext(value: object): value is Context {\n  if (!(\"whosonfirst\" in value) || value[\"whosonfirst\"] === undefined)\n    return false;\n  return true;\n}\n\nexport function ContextFromJSON(json: any): Context {\n  return ContextFromJSONTyped(json, false);\n}\n\nexport function ContextFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): Context {\n  if (json == null) {\n    return json;\n  }\n  return {\n    iso3166A2: json[\"iso_3166_a2\"] == null ? undefined : json[\"iso_3166_a2\"],\n    iso3166A3: json[\"iso_3166_a3\"] == null ? undefined : json[\"iso_3166_a3\"],\n    whosonfirst: WofContextFromJSON(json[\"whosonfirst\"]),\n  };\n}\n\nexport function ContextToJSON(json: any): Context {\n  return ContextToJSONTyped(json, false);\n}\n\nexport function ContextToJSONTyped(\n  value?: Context | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    iso_3166_a2: value[\"iso3166A2\"],\n    iso_3166_a3: value[\"iso3166A3\"],\n    whosonfirst: WofContextToJSON(value[\"whosonfirst\"]),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface Contour\n */\nexport interface Contour {\n  /**\n   * The time in minutes for the contour. Mutually exclusive of distance.\n   * @type {number}\n   * @memberof Contour\n   */\n  time?: number;\n  /**\n   * The distance in km for the contour. Mutually exclusive of time.\n   * @type {number}\n   * @memberof Contour\n   */\n  distance?: number;\n  /**\n   * The color for the output contour, specified as a hex value (without a leading `#`). If no color is specified, one will be assigned automatically.\n   * @type {string}\n   * @memberof Contour\n   */\n  color?: string;\n}\n\n/**\n * Check if a given object implements the Contour interface.\n */\nexport function instanceOfContour(value: object): value is Contour {\n  return true;\n}\n\nexport function ContourFromJSON(json: any): Contour {\n  return ContourFromJSONTyped(json, false);\n}\n\nexport function ContourFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): Contour {\n  if (json == null) {\n    return json;\n  }\n  return {\n    time: json[\"time\"] == null ? undefined : json[\"time\"],\n    distance: json[\"distance\"] == null ? undefined : json[\"distance\"],\n    color: json[\"color\"] == null ? undefined : json[\"color\"],\n  };\n}\n\nexport function ContourToJSON(json: any): Contour {\n  return ContourToJSONTyped(json, false);\n}\n\nexport function ContourToJSONTyped(\n  value?: Contour | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    time: value[\"time\"],\n    distance: value[\"distance\"],\n    color: value[\"color\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface Coordinate\n */\nexport interface Coordinate {\n  /**\n   * The latitude of a point in the shape.\n   * @type {number}\n   * @memberof Coordinate\n   */\n  lat: number;\n  /**\n   * The longitude of a point in the shape.\n   * @type {number}\n   * @memberof Coordinate\n   */\n  lon: number;\n}\n\n/**\n * Check if a given object implements the Coordinate interface.\n */\nexport function instanceOfCoordinate(value: object): value is Coordinate {\n  if (!(\"lat\" in value) || value[\"lat\"] === undefined) return false;\n  if (!(\"lon\" in value) || value[\"lon\"] === undefined) return false;\n  return true;\n}\n\nexport function CoordinateFromJSON(json: any): Coordinate {\n  return CoordinateFromJSONTyped(json, false);\n}\n\nexport function CoordinateFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): Coordinate {\n  if (json == null) {\n    return json;\n  }\n  return {\n    lat: json[\"lat\"],\n    lon: json[\"lon\"],\n  };\n}\n\nexport function CoordinateToJSON(json: any): Coordinate {\n  return CoordinateToJSONTyped(json, false);\n}\n\nexport function CoordinateToJSONTyped(\n  value?: Coordinate | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    lat: value[\"lat\"],\n    lon: value[\"lon\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n * A model which influences the routing based on the type of travel. The costing model affects parameters ranging from which roads are legally accessible to preferences based on comfort or speed.\n * See https://valhalla.github.io/valhalla/api/turn-by-turn/api-reference/#costing-models for in-depth descriptions of each costing model.\n * @export\n */\nexport const CostingModel = {\n  Auto: \"auto\",\n  Bus: \"bus\",\n  Taxi: \"taxi\",\n  Truck: \"truck\",\n  Bicycle: \"bicycle\",\n  Bikeshare: \"bikeshare\",\n  MotorScooter: \"motor_scooter\",\n  Motorcycle: \"motorcycle\",\n  Pedestrian: \"pedestrian\",\n  LowSpeedVehicle: \"low_speed_vehicle\",\n} as const;\nexport type CostingModel = (typeof CostingModel)[keyof typeof CostingModel];\n\nexport function instanceOfCostingModel(value: any): boolean {\n  for (const key in CostingModel) {\n    if (Object.prototype.hasOwnProperty.call(CostingModel, key)) {\n      if (CostingModel[key as keyof typeof CostingModel] === value) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function CostingModelFromJSON(json: any): CostingModel {\n  return CostingModelFromJSONTyped(json, false);\n}\n\nexport function CostingModelFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): CostingModel {\n  return json as CostingModel;\n}\n\nexport function CostingModelToJSON(value?: CostingModel | null): any {\n  return value as any;\n}\n\nexport function CostingModelToJSONTyped(\n  value: any,\n  ignoreDiscriminator: boolean,\n): CostingModel {\n  return value as CostingModel;\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { DistanceUnit } from \"./DistanceUnit\";\nimport {\n  DistanceUnitFromJSON,\n  DistanceUnitFromJSONTyped,\n  DistanceUnitToJSON,\n  DistanceUnitToJSONTyped,\n} from \"./DistanceUnit\";\nimport type { RoutingLanguages } from \"./RoutingLanguages\";\nimport {\n  RoutingLanguagesFromJSON,\n  RoutingLanguagesFromJSONTyped,\n  RoutingLanguagesToJSON,\n  RoutingLanguagesToJSONTyped,\n} from \"./RoutingLanguages\";\n\n/**\n *\n * @export\n * @interface DirectionsOptions\n */\nexport interface DirectionsOptions {\n  /**\n   *\n   * @type {DistanceUnit}\n   * @memberof DirectionsOptions\n   */\n  units?: DistanceUnit;\n  /**\n   *\n   * @type {RoutingLanguages}\n   * @memberof DirectionsOptions\n   */\n  language?: RoutingLanguages;\n  /**\n   * The level of directional narrative to include. Locations and times will always be returned, but narrative generation verbosity can be controlled with this parameter.\n   * @type {string}\n   * @memberof DirectionsOptions\n   */\n  directionsType?: DirectionsOptionsDirectionsTypeEnum;\n}\n\n/**\n * @export\n */\nexport const DirectionsOptionsDirectionsTypeEnum = {\n  None: \"none\",\n  Maneuvers: \"maneuvers\",\n  Instructions: \"instructions\",\n} as const;\nexport type DirectionsOptionsDirectionsTypeEnum =\n  (typeof DirectionsOptionsDirectionsTypeEnum)[keyof typeof DirectionsOptionsDirectionsTypeEnum];\n\n/**\n * Check if a given object implements the DirectionsOptions interface.\n */\nexport function instanceOfDirectionsOptions(\n  value: object,\n): value is DirectionsOptions {\n  return true;\n}\n\nexport function DirectionsOptionsFromJSON(json: any): DirectionsOptions {\n  return DirectionsOptionsFromJSONTyped(json, false);\n}\n\nexport function DirectionsOptionsFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): DirectionsOptions {\n  if (json == null) {\n    return json;\n  }\n  return {\n    units:\n      json[\"units\"] == null ? undefined : DistanceUnitFromJSON(json[\"units\"]),\n    language:\n      json[\"language\"] == null\n        ? undefined\n        : RoutingLanguagesFromJSON(json[\"language\"]),\n    directionsType:\n      json[\"directions_type\"] == null ? undefined : json[\"directions_type\"],\n  };\n}\n\nexport function DirectionsOptionsToJSON(json: any): DirectionsOptions {\n  return DirectionsOptionsToJSONTyped(json, false);\n}\n\nexport function DirectionsOptionsToJSONTyped(\n  value?: DirectionsOptions | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    units: DistanceUnitToJSON(value[\"units\"]),\n    language: RoutingLanguagesToJSON(value[\"language\"]),\n    directions_type: value[\"directionsType\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface EdgeSign\n */\nexport interface EdgeSign {\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof EdgeSign\n   */\n  exitNumber?: Array<string>;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof EdgeSign\n   */\n  exitBranch?: Array<string>;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof EdgeSign\n   */\n  exitToward?: Array<string>;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof EdgeSign\n   */\n  exitName?: Array<string>;\n}\n\n/**\n * Check if a given object implements the EdgeSign interface.\n */\nexport function instanceOfEdgeSign(value: object): value is EdgeSign {\n  return true;\n}\n\nexport function EdgeSignFromJSON(json: any): EdgeSign {\n  return EdgeSignFromJSONTyped(json, false);\n}\n\nexport function EdgeSignFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): EdgeSign {\n  if (json == null) {\n    return json;\n  }\n  return {\n    exitNumber: json[\"exit_number\"] == null ? undefined : json[\"exit_number\"],\n    exitBranch: json[\"exit_branch\"] == null ? undefined : json[\"exit_branch\"],\n    exitToward: json[\"exit_toward\"] == null ? undefined : json[\"exit_toward\"],\n    exitName: json[\"exit_name\"] == null ? undefined : json[\"exit_name\"],\n  };\n}\n\nexport function EdgeSignToJSON(json: any): EdgeSign {\n  return EdgeSignToJSONTyped(json, false);\n}\n\nexport function EdgeSignToJSONTyped(\n  value?: EdgeSign | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    exit_number: value[\"exitNumber\"],\n    exit_branch: value[\"exitBranch\"],\n    exit_toward: value[\"exitToward\"],\n    exit_name: value[\"exitName\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n * The use for the edge.\n * @export\n */\nexport const EdgeUse = {\n  Road: \"road\",\n  Ramp: \"ramp\",\n  TurnChannel: \"turn_channel\",\n  Track: \"track\",\n  Driveway: \"driveway\",\n  Alley: \"alley\",\n  ParkingAisle: \"parking_aisle\",\n  EmergencyAccess: \"emergency_access\",\n  DriveThrough: \"drive_through\",\n  Culdesac: \"culdesac\",\n  LivingStreet: \"living_street\",\n  ServiceRoad: \"service_road\",\n  Cycleway: \"cycleway\",\n  MountainBike: \"mountain_bike\",\n  Sidewalk: \"sidewalk\",\n  Footway: \"footway\",\n  Steps: \"steps\",\n  Path: \"path\",\n  Pedestrian: \"pedestrian\",\n  PedestrianCrossing: \"pedestrian_crossing\",\n  Bridleway: \"bridleway\",\n  RestArea: \"rest_area\",\n  ServiceArea: \"service_area\",\n  Other: \"other\",\n  Ferry: \"ferry\",\n  RailFerry: \"rail-ferry\",\n  Rail: \"rail\",\n  Bus: \"bus\",\n  EgressConnection: \"egress_connection\",\n  PlatformConnection: \"platform_connection\",\n  TransitConnection: \"transit_connection\",\n} as const;\nexport type EdgeUse = (typeof EdgeUse)[keyof typeof EdgeUse];\n\nexport function instanceOfEdgeUse(value: any): boolean {\n  for (const key in EdgeUse) {\n    if (Object.prototype.hasOwnProperty.call(EdgeUse, key)) {\n      if (EdgeUse[key as keyof typeof EdgeUse] === value) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function EdgeUseFromJSON(json: any): EdgeUse {\n  return EdgeUseFromJSONTyped(json, false);\n}\n\nexport function EdgeUseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): EdgeUse {\n  return json as EdgeUse;\n}\n\nexport function EdgeUseToJSON(value?: EdgeUse | null): any {\n  return value as any;\n}\n\nexport function EdgeUseToJSONTyped(\n  value: any,\n  ignoreDiscriminator: boolean,\n): EdgeUse {\n  return value as EdgeUse;\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n * The directions in which the edge is traversable.\n * @export\n */\nexport const Traversability = {\n  Forward: \"forward\",\n  Backward: \"backward\",\n  Both: \"both\",\n} as const;\nexport type Traversability =\n  (typeof Traversability)[keyof typeof Traversability];\n\nexport function instanceOfTraversability(value: any): boolean {\n  for (const key in Traversability) {\n    if (Object.prototype.hasOwnProperty.call(Traversability, key)) {\n      if (Traversability[key as keyof typeof Traversability] === value) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function TraversabilityFromJSON(json: any): Traversability {\n  return TraversabilityFromJSONTyped(json, false);\n}\n\nexport function TraversabilityFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): Traversability {\n  return json as Traversability;\n}\n\nexport function TraversabilityToJSON(value?: Traversability | null): any {\n  return value as any;\n}\n\nexport function TraversabilityToJSONTyped(\n  value: any,\n  ignoreDiscriminator: boolean,\n): Traversability {\n  return value as Traversability;\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n * Class of road (ranked in descending order)\n * @export\n */\nexport const RoadClass = {\n  Motorway: \"motorway\",\n  Trunk: \"trunk\",\n  Primary: \"primary\",\n  Secondary: \"secondary\",\n  Tertiary: \"tertiary\",\n  Unclassified: \"unclassified\",\n  Residential: \"residential\",\n  ServiceOther: \"service_other\",\n} as const;\nexport type RoadClass = (typeof RoadClass)[keyof typeof RoadClass];\n\nexport function instanceOfRoadClass(value: any): boolean {\n  for (const key in RoadClass) {\n    if (Object.prototype.hasOwnProperty.call(RoadClass, key)) {\n      if (RoadClass[key as keyof typeof RoadClass] === value) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function RoadClassFromJSON(json: any): RoadClass {\n  return RoadClassFromJSONTyped(json, false);\n}\n\nexport function RoadClassFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): RoadClass {\n  return json as RoadClass;\n}\n\nexport function RoadClassToJSON(value?: RoadClass | null): any {\n  return value as any;\n}\n\nexport function RoadClassToJSONTyped(\n  value: any,\n  ignoreDiscriminator: boolean,\n): RoadClass {\n  return value as RoadClass;\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { Traversability } from \"./Traversability\";\nimport {\n  TraversabilityFromJSON,\n  TraversabilityFromJSONTyped,\n  TraversabilityToJSON,\n  TraversabilityToJSONTyped,\n} from \"./Traversability\";\nimport type { EdgeUse } from \"./EdgeUse\";\nimport {\n  EdgeUseFromJSON,\n  EdgeUseFromJSONTyped,\n  EdgeUseToJSON,\n  EdgeUseToJSONTyped,\n} from \"./EdgeUse\";\nimport type { RoadClass } from \"./RoadClass\";\nimport {\n  RoadClassFromJSON,\n  RoadClassFromJSONTyped,\n  RoadClassToJSON,\n  RoadClassToJSONTyped,\n} from \"./RoadClass\";\n\n/**\n *\n * @export\n * @interface IntersectingEdge\n */\nexport interface IntersectingEdge {\n  /**\n   * The direction at the beginning of an edge. The units are degrees clockwise from north.\n   * @type {number}\n   * @memberof IntersectingEdge\n   */\n  beginHeading?: number;\n  /**\n   * True if this intersecting edge at the end node has consistent names with the path from the other edge.\n   * @type {boolean}\n   * @memberof IntersectingEdge\n   */\n  fromEdgeNameConsistency?: boolean;\n  /**\n   * True if this intersecting edge at the end node has consistent names with the path to the other edge.\n   * @type {boolean}\n   * @memberof IntersectingEdge\n   */\n  toEdgeNameConsistency?: boolean;\n  /**\n   *\n   * @type {Traversability}\n   * @memberof IntersectingEdge\n   */\n  driveability?: Traversability;\n  /**\n   *\n   * @type {Traversability}\n   * @memberof IntersectingEdge\n   */\n  cyclability?: Traversability;\n  /**\n   *\n   * @type {Traversability}\n   * @memberof IntersectingEdge\n   */\n  walkability?: Traversability;\n  /**\n   *\n   * @type {EdgeUse}\n   * @memberof IntersectingEdge\n   */\n  use?: EdgeUse;\n  /**\n   *\n   * @type {RoadClass}\n   * @memberof IntersectingEdge\n   */\n  roadClass?: RoadClass;\n}\n\n/**\n * Check if a given object implements the IntersectingEdge interface.\n */\nexport function instanceOfIntersectingEdge(\n  value: object,\n): value is IntersectingEdge {\n  return true;\n}\n\nexport function IntersectingEdgeFromJSON(json: any): IntersectingEdge {\n  return IntersectingEdgeFromJSONTyped(json, false);\n}\n\nexport function IntersectingEdgeFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): IntersectingEdge {\n  if (json == null) {\n    return json;\n  }\n  return {\n    beginHeading:\n      json[\"begin_heading\"] == null ? undefined : json[\"begin_heading\"],\n    fromEdgeNameConsistency:\n      json[\"from_edge_name_consistency\"] == null\n        ? undefined\n        : json[\"from_edge_name_consistency\"],\n    toEdgeNameConsistency:\n      json[\"to_edge_name_consistency\"] == null\n        ? undefined\n        : json[\"to_edge_name_consistency\"],\n    driveability:\n      json[\"driveability\"] == null\n        ? undefined\n        : TraversabilityFromJSON(json[\"driveability\"]),\n    cyclability:\n      json[\"cyclability\"] == null\n        ? undefined\n        : TraversabilityFromJSON(json[\"cyclability\"]),\n    walkability:\n      json[\"walkability\"] == null\n        ? undefined\n        : TraversabilityFromJSON(json[\"walkability\"]),\n    use: json[\"use\"] == null ? undefined : EdgeUseFromJSON(json[\"use\"]),\n    roadClass:\n      json[\"road_class\"] == null\n        ? undefined\n        : RoadClassFromJSON(json[\"road_class\"]),\n  };\n}\n\nexport function IntersectingEdgeToJSON(json: any): IntersectingEdge {\n  return IntersectingEdgeToJSONTyped(json, false);\n}\n\nexport function IntersectingEdgeToJSONTyped(\n  value?: IntersectingEdge | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    begin_heading: value[\"beginHeading\"],\n    from_edge_name_consistency: value[\"fromEdgeNameConsistency\"],\n    to_edge_name_consistency: value[\"toEdgeNameConsistency\"],\n    driveability: TraversabilityToJSON(value[\"driveability\"]),\n    cyclability: TraversabilityToJSON(value[\"cyclability\"]),\n    walkability: TraversabilityToJSON(value[\"walkability\"]),\n    use: EdgeUseToJSON(value[\"use\"]),\n    road_class: RoadClassToJSON(value[\"roadClass\"]),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n *\n * @export\n */\nexport const NodeType = {\n  StreetIntersection: \"street_intersection\",\n  Gate: \"gate\",\n  Bollard: \"bollard\",\n  TollBooth: \"toll_booth\",\n  MultiUseTransitStop: \"multi_use_transit_stop\",\n  BikeShare: \"bike_share\",\n  Parking: \"parking\",\n  MotorWayJunction: \"motor_way_junction\",\n  BorderControl: \"border_control\",\n} as const;\nexport type NodeType = (typeof NodeType)[keyof typeof NodeType];\n\nexport function instanceOfNodeType(value: any): boolean {\n  for (const key in NodeType) {\n    if (Object.prototype.hasOwnProperty.call(NodeType, key)) {\n      if (NodeType[key as keyof typeof NodeType] === value) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function NodeTypeFromJSON(json: any): NodeType {\n  return NodeTypeFromJSONTyped(json, false);\n}\n\nexport function NodeTypeFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): NodeType {\n  return json as NodeType;\n}\n\nexport function NodeTypeToJSON(value?: NodeType | null): any {\n  return value as any;\n}\n\nexport function NodeTypeToJSONTyped(\n  value: any,\n  ignoreDiscriminator: boolean,\n): NodeType {\n  return value as NodeType;\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { IntersectingEdge } from \"./IntersectingEdge\";\nimport {\n  IntersectingEdgeFromJSON,\n  IntersectingEdgeFromJSONTyped,\n  IntersectingEdgeToJSON,\n  IntersectingEdgeToJSONTyped,\n} from \"./IntersectingEdge\";\nimport type { NodeType } from \"./NodeType\";\nimport {\n  NodeTypeFromJSON,\n  NodeTypeFromJSONTyped,\n  NodeTypeToJSON,\n  NodeTypeToJSONTyped,\n} from \"./NodeType\";\n\n/**\n * The node at the end of this edge\n * @export\n * @interface EndNode\n */\nexport interface EndNode {\n  /**\n   * A set of edges intersecting this node.\n   * @type {Array<IntersectingEdge>}\n   * @memberof EndNode\n   */\n  intersectingEdges?: Array<IntersectingEdge>;\n  /**\n   * The elapsed time along the path to arrive at this node.\n   * @type {number}\n   * @memberof EndNode\n   */\n  elapsedTime?: number;\n  /**\n   * The index into the `admins` list in which this node lies.\n   * @type {number}\n   * @memberof EndNode\n   */\n  adminIndex?: number;\n  /**\n   *\n   * @type {NodeType}\n   * @memberof EndNode\n   */\n  type?: NodeType;\n  /**\n   * True if this node is a fork.\n   * @type {boolean}\n   * @memberof EndNode\n   */\n  fork?: boolean;\n  /**\n   * The canonical TZDB identifier for the node's time zone.\n   * @type {string}\n   * @memberof EndNode\n   */\n  timeZone?: string;\n}\n\n/**\n * Check if a given object implements the EndNode interface.\n */\nexport function instanceOfEndNode(value: object): value is EndNode {\n  return true;\n}\n\nexport function EndNodeFromJSON(json: any): EndNode {\n  return EndNodeFromJSONTyped(json, false);\n}\n\nexport function EndNodeFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): EndNode {\n  if (json == null) {\n    return json;\n  }\n  return {\n    intersectingEdges:\n      json[\"intersecting_edges\"] == null\n        ? undefined\n        : (json[\"intersecting_edges\"] as Array<any>).map(\n            IntersectingEdgeFromJSON,\n          ),\n    elapsedTime:\n      json[\"elapsed_time\"] == null ? undefined : json[\"elapsed_time\"],\n    adminIndex: json[\"admin_index\"] == null ? undefined : json[\"admin_index\"],\n    type: json[\"type\"] == null ? undefined : NodeTypeFromJSON(json[\"type\"]),\n    fork: json[\"fork\"] == null ? undefined : json[\"fork\"],\n    timeZone: json[\"time_zone\"] == null ? undefined : json[\"time_zone\"],\n  };\n}\n\nexport function EndNodeToJSON(json: any): EndNode {\n  return EndNodeToJSONTyped(json, false);\n}\n\nexport function EndNodeToJSONTyped(\n  value?: EndNode | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    intersecting_edges:\n      value[\"intersectingEdges\"] == null\n        ? undefined\n        : (value[\"intersectingEdges\"] as Array<any>).map(\n            IntersectingEdgeToJSON,\n          ),\n    elapsed_time: value[\"elapsedTime\"],\n    admin_index: value[\"adminIndex\"],\n    type: NodeTypeToJSON(value[\"type\"]),\n    fork: value[\"fork\"],\n    time_zone: value[\"timeZone\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { AnnotationFilters } from \"./AnnotationFilters\";\nimport {\n  AnnotationFiltersFromJSON,\n  AnnotationFiltersFromJSONTyped,\n  AnnotationFiltersToJSON,\n  AnnotationFiltersToJSONTyped,\n} from \"./AnnotationFilters\";\n\n/**\n *\n * @export\n * @interface ExtendedDirectionsOptions\n */\nexport interface ExtendedDirectionsOptions {\n  /**\n   * The output response format. The default JSON format is extremely compact and ideal for web or data-constrained use cases where you want to fetch additional attributes on demand in small chunks. The OSRM format is much richer and is configurable with significantly more info for turn-by-turn navigation use cases.\n   * @type {string}\n   * @memberof ExtendedDirectionsOptions\n   */\n  format?: ExtendedDirectionsOptionsFormatEnum;\n  /**\n   * Optionally includes helpful banners with timing information for turn-by-turn navigation. This is only available in the OSRM format.\n   * @type {boolean}\n   * @memberof ExtendedDirectionsOptions\n   */\n  bannerInstructions?: boolean;\n  /**\n   * Optionally includes voice instructions with timing information for turn-by-turn navigation. This is only available in the OSRM format.\n   * @type {boolean}\n   * @memberof ExtendedDirectionsOptions\n   */\n  voiceInstructions?: boolean;\n  /**\n   *\n   * @type {AnnotationFilters}\n   * @memberof ExtendedDirectionsOptions\n   */\n  filters?: AnnotationFilters;\n}\n\n/**\n * @export\n */\nexport const ExtendedDirectionsOptionsFormatEnum = {\n  Json: \"json\",\n  Osrm: \"osrm\",\n} as const;\nexport type ExtendedDirectionsOptionsFormatEnum =\n  (typeof ExtendedDirectionsOptionsFormatEnum)[keyof typeof ExtendedDirectionsOptionsFormatEnum];\n\n/**\n * Check if a given object implements the ExtendedDirectionsOptions interface.\n */\nexport function instanceOfExtendedDirectionsOptions(\n  value: object,\n): value is ExtendedDirectionsOptions {\n  return true;\n}\n\nexport function ExtendedDirectionsOptionsFromJSON(\n  json: any,\n): ExtendedDirectionsOptions {\n  return ExtendedDirectionsOptionsFromJSONTyped(json, false);\n}\n\nexport function ExtendedDirectionsOptionsFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): ExtendedDirectionsOptions {\n  if (json == null) {\n    return json;\n  }\n  return {\n    format: json[\"format\"] == null ? undefined : json[\"format\"],\n    bannerInstructions:\n      json[\"banner_instructions\"] == null\n        ? undefined\n        : json[\"banner_instructions\"],\n    voiceInstructions:\n      json[\"voice_instructions\"] == null\n        ? undefined\n        : json[\"voice_instructions\"],\n    filters:\n      json[\"filters\"] == null\n        ? undefined\n        : AnnotationFiltersFromJSON(json[\"filters\"]),\n  };\n}\n\nexport function ExtendedDirectionsOptionsToJSON(\n  json: any,\n): ExtendedDirectionsOptions {\n  return ExtendedDirectionsOptionsToJSONTyped(json, false);\n}\n\nexport function ExtendedDirectionsOptionsToJSONTyped(\n  value?: ExtendedDirectionsOptions | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    format: value[\"format\"],\n    banner_instructions: value[\"bannerInstructions\"],\n    voice_instructions: value[\"voiceInstructions\"],\n    filters: AnnotationFiltersToJSON(value[\"filters\"]),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n * A point geometry.\n * @export\n * @interface Point\n */\nexport interface Point {\n  /**\n   *\n   * @type {Array<number>}\n   * @memberof Point\n   */\n  coordinates: Array<number>;\n  /**\n   *\n   * @type {string}\n   * @memberof Point\n   */\n  type: string;\n}\n\n/**\n * Check if a given object implements the Point interface.\n */\nexport function instanceOfPoint(value: object): value is Point {\n  if (!(\"coordinates\" in value) || value[\"coordinates\"] === undefined)\n    return false;\n  if (!(\"type\" in value) || value[\"type\"] === undefined) return false;\n  return true;\n}\n\nexport function PointFromJSON(json: any): Point {\n  return PointFromJSONTyped(json, false);\n}\n\nexport function PointFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): Point {\n  if (json == null) {\n    return json;\n  }\n  return {\n    coordinates: json[\"coordinates\"],\n    type: json[\"type\"],\n  };\n}\n\nexport function PointToJSON(json: any): Point {\n  return PointToJSONTyped(json, false);\n}\n\nexport function PointToJSONTyped(\n  value?: Point | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    coordinates: value[\"coordinates\"],\n    type: value[\"type\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n *\n * @export\n */\nexport const MatchType = {\n  Match: \"match\",\n  Interpolated: \"interpolated\",\n  Fallback: \"fallback\",\n} as const;\nexport type MatchType = (typeof MatchType)[keyof typeof MatchType];\n\nexport function instanceOfMatchType(value: any): boolean {\n  for (const key in MatchType) {\n    if (Object.prototype.hasOwnProperty.call(MatchType, key)) {\n      if (MatchType[key as keyof typeof MatchType] === value) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function MatchTypeFromJSON(json: any): MatchType {\n  return MatchTypeFromJSONTyped(json, false);\n}\n\nexport function MatchTypeFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): MatchType {\n  return json as MatchType;\n}\n\nexport function MatchTypeToJSON(value?: MatchType | null): any {\n  return value as any;\n}\n\nexport function MatchTypeToJSONTyped(\n  value: any,\n  ignoreDiscriminator: boolean,\n): MatchType {\n  return value as MatchType;\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface SourceAttribution\n */\nexport interface SourceAttribution {\n  /**\n   *\n   * @type {string}\n   * @memberof SourceAttribution\n   */\n  fixitUrl?: string | null;\n  /**\n   *\n   * @type {string}\n   * @memberof SourceAttribution\n   */\n  source: string;\n  /**\n   *\n   * @type {string}\n   * @memberof SourceAttribution\n   */\n  sourceId: string;\n}\n\n/**\n * Check if a given object implements the SourceAttribution interface.\n */\nexport function instanceOfSourceAttribution(\n  value: object,\n): value is SourceAttribution {\n  if (!(\"source\" in value) || value[\"source\"] === undefined) return false;\n  if (!(\"sourceId\" in value) || value[\"sourceId\"] === undefined) return false;\n  return true;\n}\n\nexport function SourceAttributionFromJSON(json: any): SourceAttribution {\n  return SourceAttributionFromJSONTyped(json, false);\n}\n\nexport function SourceAttributionFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): SourceAttribution {\n  if (json == null) {\n    return json;\n  }\n  return {\n    fixitUrl: json[\"fixit_url\"] == null ? undefined : json[\"fixit_url\"],\n    source: json[\"source\"],\n    sourceId: json[\"source_id\"],\n  };\n}\n\nexport function SourceAttributionToJSON(json: any): SourceAttribution {\n  return SourceAttributionToJSONTyped(json, false);\n}\n\nexport function SourceAttributionToJSONTyped(\n  value?: SourceAttribution | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    fixit_url: value[\"fixitUrl\"],\n    source: value[\"source\"],\n    source_id: value[\"sourceId\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n * The level of precision for the geometry.\n * @export\n */\nexport const Precision = {\n  Point: \"point\",\n  Centroid: \"centroid\",\n} as const;\nexport type Precision = (typeof Precision)[keyof typeof Precision];\n\nexport function instanceOfPrecision(value: any): boolean {\n  for (const key in Precision) {\n    if (Object.prototype.hasOwnProperty.call(Precision, key)) {\n      if (Precision[key as keyof typeof Precision] === value) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function PrecisionFromJSON(json: any): Precision {\n  return PrecisionFromJSONTyped(json, false);\n}\n\nexport function PrecisionFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): Precision {\n  return json as Precision;\n}\n\nexport function PrecisionToJSON(value?: Precision | null): any {\n  return value as any;\n}\n\nexport function PrecisionToJSONTyped(\n  value: any,\n  ignoreDiscriminator: boolean,\n): Precision {\n  return value as Precision;\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { Context } from \"./Context\";\nimport {\n  ContextFromJSON,\n  ContextFromJSONTyped,\n  ContextToJSON,\n  ContextToJSONTyped,\n} from \"./Context\";\nimport type { MatchType } from \"./MatchType\";\nimport {\n  MatchTypeFromJSON,\n  MatchTypeFromJSONTyped,\n  MatchTypeToJSON,\n  MatchTypeToJSONTyped,\n} from \"./MatchType\";\nimport type { SourceAttribution } from \"./SourceAttribution\";\nimport {\n  SourceAttributionFromJSON,\n  SourceAttributionFromJSONTyped,\n  SourceAttributionToJSON,\n  SourceAttributionToJSONTyped,\n} from \"./SourceAttribution\";\nimport type { Precision } from \"./Precision\";\nimport {\n  PrecisionFromJSON,\n  PrecisionFromJSONTyped,\n  PrecisionToJSON,\n  PrecisionToJSONTyped,\n} from \"./Precision\";\nimport type { AddendumV2 } from \"./AddendumV2\";\nimport {\n  AddendumV2FromJSON,\n  AddendumV2FromJSONTyped,\n  AddendumV2ToJSON,\n  AddendumV2ToJSONTyped,\n} from \"./AddendumV2\";\nimport type { AddressComponentsV2 } from \"./AddressComponentsV2\";\nimport {\n  AddressComponentsV2FromJSON,\n  AddressComponentsV2FromJSONTyped,\n  AddressComponentsV2ToJSON,\n  AddressComponentsV2ToJSONTyped,\n} from \"./AddressComponentsV2\";\n\n/**\n * The GeoJSON properties object.\n * @export\n * @interface FeaturePropertiesV2Properties\n */\nexport interface FeaturePropertiesV2Properties {\n  /**\n   *\n   * @type {AddendumV2}\n   * @memberof FeaturePropertiesV2Properties\n   */\n  addendum?: AddendumV2 | null;\n  /**\n   *\n   * @type {AddressComponentsV2}\n   * @memberof FeaturePropertiesV2Properties\n   */\n  addressComponents?: AddressComponentsV2 | null;\n  /**\n   * The coarse-grained location of the place (e.g. Seoul, South Korea).\n   *\n   * In search experiences, this is typically the second line of a result cell.\n   * @type {string}\n   * @memberof FeaturePropertiesV2Properties\n   */\n  coarseLocation?: string | null;\n  /**\n   * The level of confidence (0.0 - 1.0) that the result is what you actually searched for.\n   *\n   * This is not necessarily the same as relevance (results are returned sorted by relevance already),\n   * but rather how closely the explicit or inferred components match the result.\n   * This is only present for forward geocoding responses (not autocomplete or place details).\n   * @type {number}\n   * @memberof FeaturePropertiesV2Properties\n   */\n  confidence?: number | null;\n  /**\n   *\n   * @type {Context}\n   * @memberof FeaturePropertiesV2Properties\n   */\n  context?: Context | null;\n  /**\n   * The distance from the search focus point, in kilometers.\n   * @type {number}\n   * @memberof FeaturePropertiesV2Properties\n   */\n  distance?: number | null;\n  /**\n   * The address formatted as a single line,\n   * following local postal conventions for ordering and separators.\n   * @type {string}\n   * @memberof FeaturePropertiesV2Properties\n   */\n  formattedAddressLine?: string;\n  /**\n   * Address components split up into lines,\n   * following local postal conventions for ordering and separators.\n   * @type {Array<string>}\n   * @memberof FeaturePropertiesV2Properties\n   */\n  formattedAddressLines?: Array<string>;\n  /**\n   * The globally unique identifier for this result.\n   *\n   * You can use this to uniquely identify a place,\n   * and to get the full details from the place details endpoint.\n   *\n   * NOTE: While GIDs are unique, they may not necessarily be stable in all datasets.\n   * @type {string}\n   * @memberof FeaturePropertiesV2Properties\n   */\n  gid: string;\n  /**\n   * The data layer containing the place (e.g. \"address\" or \"poi\").\n   * @type {string}\n   * @memberof FeaturePropertiesV2Properties\n   */\n  layer: string;\n  /**\n   * The type of match (forward geocoding endpoints only).\n   * @type {MatchType}\n   * @memberof FeaturePropertiesV2Properties\n   */\n  matchType?: MatchType | null;\n  /**\n   * The best name for the place, accounting for request language preferences.\n   *\n   * When building an autocomplete search experience, this is the primary display string.\n   * @type {string}\n   * @memberof FeaturePropertiesV2Properties\n   */\n  name: string;\n  /**\n   *\n   * @type {Precision}\n   * @memberof FeaturePropertiesV2Properties\n   */\n  precision: Precision;\n  /**\n   * A list of sources from which the result is derived.\n   * @type {Array<SourceAttribution>}\n   * @memberof FeaturePropertiesV2Properties\n   */\n  sources?: Array<SourceAttribution>;\n}\n\n/**\n * Check if a given object implements the FeaturePropertiesV2Properties interface.\n */\nexport function instanceOfFeaturePropertiesV2Properties(\n  value: object,\n): value is FeaturePropertiesV2Properties {\n  if (!(\"gid\" in value) || value[\"gid\"] === undefined) return false;\n  if (!(\"layer\" in value) || value[\"layer\"] === undefined) return false;\n  if (!(\"name\" in value) || value[\"name\"] === undefined) return false;\n  if (!(\"precision\" in value) || value[\"precision\"] === undefined) return false;\n  return true;\n}\n\nexport function FeaturePropertiesV2PropertiesFromJSON(\n  json: any,\n): FeaturePropertiesV2Properties {\n  return FeaturePropertiesV2PropertiesFromJSONTyped(json, false);\n}\n\nexport function FeaturePropertiesV2PropertiesFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): FeaturePropertiesV2Properties {\n  if (json == null) {\n    return json;\n  }\n  return {\n    addendum:\n      json[\"addendum\"] == null\n        ? undefined\n        : AddendumV2FromJSON(json[\"addendum\"]),\n    addressComponents:\n      json[\"address_components\"] == null\n        ? undefined\n        : AddressComponentsV2FromJSON(json[\"address_components\"]),\n    coarseLocation:\n      json[\"coarse_location\"] == null ? undefined : json[\"coarse_location\"],\n    confidence: json[\"confidence\"] == null ? undefined : json[\"confidence\"],\n    context:\n      json[\"context\"] == null ? undefined : ContextFromJSON(json[\"context\"]),\n    distance: json[\"distance\"] == null ? undefined : json[\"distance\"],\n    formattedAddressLine:\n      json[\"formatted_address_line\"] == null\n        ? undefined\n        : json[\"formatted_address_line\"],\n    formattedAddressLines:\n      json[\"formatted_address_lines\"] == null\n        ? undefined\n        : json[\"formatted_address_lines\"],\n    gid: json[\"gid\"],\n    layer: json[\"layer\"],\n    matchType:\n      json[\"match_type\"] == null\n        ? undefined\n        : MatchTypeFromJSON(json[\"match_type\"]),\n    name: json[\"name\"],\n    precision: PrecisionFromJSON(json[\"precision\"]),\n    sources:\n      json[\"sources\"] == null\n        ? undefined\n        : (json[\"sources\"] as Array<any>).map(SourceAttributionFromJSON),\n  };\n}\n\nexport function FeaturePropertiesV2PropertiesToJSON(\n  json: any,\n): FeaturePropertiesV2Properties {\n  return FeaturePropertiesV2PropertiesToJSONTyped(json, false);\n}\n\nexport function FeaturePropertiesV2PropertiesToJSONTyped(\n  value?: FeaturePropertiesV2Properties | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    addendum: AddendumV2ToJSON(value[\"addendum\"]),\n    address_components: AddressComponentsV2ToJSON(value[\"addressComponents\"]),\n    coarse_location: value[\"coarseLocation\"],\n    confidence: value[\"confidence\"],\n    context: ContextToJSON(value[\"context\"]),\n    distance: value[\"distance\"],\n    formatted_address_line: value[\"formattedAddressLine\"],\n    formatted_address_lines: value[\"formattedAddressLines\"],\n    gid: value[\"gid\"],\n    layer: value[\"layer\"],\n    match_type: MatchTypeToJSON(value[\"matchType\"]),\n    name: value[\"name\"],\n    precision: PrecisionToJSON(value[\"precision\"]),\n    sources:\n      value[\"sources\"] == null\n        ? undefined\n        : (value[\"sources\"] as Array<any>).map(SourceAttributionToJSON),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { Point } from \"./Point\";\nimport {\n  PointFromJSON,\n  PointFromJSONTyped,\n  PointToJSON,\n  PointToJSONTyped,\n} from \"./Point\";\nimport type { FeaturePropertiesV2Properties } from \"./FeaturePropertiesV2Properties\";\nimport {\n  FeaturePropertiesV2PropertiesFromJSON,\n  FeaturePropertiesV2PropertiesFromJSONTyped,\n  FeaturePropertiesV2PropertiesToJSON,\n  FeaturePropertiesV2PropertiesToJSONTyped,\n} from \"./FeaturePropertiesV2Properties\";\n\n/**\n *\n * @export\n * @interface FeaturePropertiesV2\n */\nexport interface FeaturePropertiesV2 {\n  /**\n   *\n   * @type {Array<number>}\n   * @memberof FeaturePropertiesV2\n   */\n  bbox?: Array<number> | null;\n  /**\n   *\n   * @type {Point}\n   * @memberof FeaturePropertiesV2\n   */\n  geometry?: Point | null;\n  /**\n   *\n   * @type {FeaturePropertiesV2Properties}\n   * @memberof FeaturePropertiesV2\n   */\n  properties: FeaturePropertiesV2Properties;\n  /**\n   *\n   * @type {string}\n   * @memberof FeaturePropertiesV2\n   */\n  type?: string;\n}\n\n/**\n * Check if a given object implements the FeaturePropertiesV2 interface.\n */\nexport function instanceOfFeaturePropertiesV2(\n  value: object,\n): value is FeaturePropertiesV2 {\n  if (!(\"properties\" in value) || value[\"properties\"] === undefined)\n    return false;\n  return true;\n}\n\nexport function FeaturePropertiesV2FromJSON(json: any): FeaturePropertiesV2 {\n  return FeaturePropertiesV2FromJSONTyped(json, false);\n}\n\nexport function FeaturePropertiesV2FromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): FeaturePropertiesV2 {\n  if (json == null) {\n    return json;\n  }\n  return {\n    bbox: json[\"bbox\"] == null ? undefined : json[\"bbox\"],\n    geometry:\n      json[\"geometry\"] == null ? undefined : PointFromJSON(json[\"geometry\"]),\n    properties: FeaturePropertiesV2PropertiesFromJSON(json[\"properties\"]),\n    type: json[\"type\"] == null ? undefined : json[\"type\"],\n  };\n}\n\nexport function FeaturePropertiesV2ToJSON(json: any): FeaturePropertiesV2 {\n  return FeaturePropertiesV2ToJSONTyped(json, false);\n}\n\nexport function FeaturePropertiesV2ToJSONTyped(\n  value?: FeaturePropertiesV2 | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    bbox: value[\"bbox\"],\n    geometry: PointToJSON(value[\"geometry\"]),\n    properties: FeaturePropertiesV2PropertiesToJSON(value[\"properties\"]),\n    type: value[\"type\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface GeoAttributes\n */\nexport interface GeoAttributes {\n  /**\n   * Curvature factor.\n   * @type {number}\n   * @memberof GeoAttributes\n   */\n  curvature?: number;\n  /**\n   * The maximum downward slope. Uses 1 degree precision for slopes to -16 degrees, and 4 degree precision afterwards (up to a max of -76 degrees).\n   * @type {number}\n   * @memberof GeoAttributes\n   */\n  maxDownSlope?: number;\n  /**\n   * The maximum upward slope. Uses 1 degree precision for slopes to 16 degrees, and 4 degree precision afterwards (up to a max of 76 degrees).\n   * @type {number}\n   * @memberof GeoAttributes\n   */\n  maxUpSlope?: number;\n  /**\n   * The weighted estimate of the grade.\n   * @type {number}\n   * @memberof GeoAttributes\n   */\n  weightedGrade?: number;\n  /**\n   * The length of the edge, in meters.\n   * @type {number}\n   * @memberof GeoAttributes\n   */\n  length?: number;\n}\n\n/**\n * Check if a given object implements the GeoAttributes interface.\n */\nexport function instanceOfGeoAttributes(value: object): value is GeoAttributes {\n  return true;\n}\n\nexport function GeoAttributesFromJSON(json: any): GeoAttributes {\n  return GeoAttributesFromJSONTyped(json, false);\n}\n\nexport function GeoAttributesFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): GeoAttributes {\n  if (json == null) {\n    return json;\n  }\n  return {\n    curvature: json[\"curvature\"] == null ? undefined : json[\"curvature\"],\n    maxDownSlope:\n      json[\"max_down_slope\"] == null ? undefined : json[\"max_down_slope\"],\n    maxUpSlope: json[\"max_up_slope\"] == null ? undefined : json[\"max_up_slope\"],\n    weightedGrade:\n      json[\"weighted_grade\"] == null ? undefined : json[\"weighted_grade\"],\n    length: json[\"length\"] == null ? undefined : json[\"length\"],\n  };\n}\n\nexport function GeoAttributesToJSON(json: any): GeoAttributes {\n  return GeoAttributesToJSONTyped(json, false);\n}\n\nexport function GeoAttributesToJSONTyped(\n  value?: GeoAttributes | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    curvature: value[\"curvature\"],\n    max_down_slope: value[\"maxDownSlope\"],\n    max_up_slope: value[\"maxUpSlope\"],\n    weighted_grade: value[\"weightedGrade\"],\n    length: value[\"length\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface GeoJSONGeometryBase\n */\nexport interface GeoJSONGeometryBase {\n  /**\n   *\n   * @type {string}\n   * @memberof GeoJSONGeometryBase\n   */\n  type: GeoJSONGeometryBaseTypeEnum;\n}\n\n/**\n * @export\n */\nexport const GeoJSONGeometryBaseTypeEnum = {\n  Point: \"Point\",\n  MultiPoint: \"MultiPoint\",\n  LineString: \"LineString\",\n  MultiLineString: \"MultiLineString\",\n  Polygon: \"Polygon\",\n  MultiPolygon: \"MultiPolygon\",\n} as const;\nexport type GeoJSONGeometryBaseTypeEnum =\n  (typeof GeoJSONGeometryBaseTypeEnum)[keyof typeof GeoJSONGeometryBaseTypeEnum];\n\n/**\n * Check if a given object implements the GeoJSONGeometryBase interface.\n */\nexport function instanceOfGeoJSONGeometryBase(\n  value: object,\n): value is GeoJSONGeometryBase {\n  if (!(\"type\" in value) || value[\"type\"] === undefined) return false;\n  return true;\n}\n\nexport function GeoJSONGeometryBaseFromJSON(json: any): GeoJSONGeometryBase {\n  return GeoJSONGeometryBaseFromJSONTyped(json, false);\n}\n\nexport function GeoJSONGeometryBaseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): GeoJSONGeometryBase {\n  if (json == null) {\n    return json;\n  }\n  return {\n    type: json[\"type\"],\n  };\n}\n\nexport function GeoJSONGeometryBaseToJSON(json: any): GeoJSONGeometryBase {\n  return GeoJSONGeometryBaseToJSONTyped(json, false);\n}\n\nexport function GeoJSONGeometryBaseToJSONTyped(\n  value?: GeoJSONGeometryBase | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    type: value[\"type\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface GeocodingMeta\n */\nexport interface GeocodingMeta {\n  /**\n   *\n   * @type {string}\n   * @memberof GeocodingMeta\n   */\n  attribution: string;\n  /**\n   * Errors encountered serving the request (if any).\n   * @type {string}\n   * @memberof GeocodingMeta\n   */\n  error?: string | null;\n  /**\n   * An object containing all valid, parsed query parameters.\n   *\n   * For example, this will contain text and possibly other parameters for an autocomplete query.\n   * This will not be present for invalid requests.\n   * @type {object}\n   * @memberof GeocodingMeta\n   */\n  query?: object | null;\n}\n\n/**\n * Check if a given object implements the GeocodingMeta interface.\n */\nexport function instanceOfGeocodingMeta(value: object): value is GeocodingMeta {\n  if (!(\"attribution\" in value) || value[\"attribution\"] === undefined)\n    return false;\n  return true;\n}\n\nexport function GeocodingMetaFromJSON(json: any): GeocodingMeta {\n  return GeocodingMetaFromJSONTyped(json, false);\n}\n\nexport function GeocodingMetaFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): GeocodingMeta {\n  if (json == null) {\n    return json;\n  }\n  return {\n    attribution: json[\"attribution\"],\n    error: json[\"error\"] == null ? undefined : json[\"error\"],\n    query: json[\"query\"] == null ? undefined : json[\"query\"],\n  };\n}\n\nexport function GeocodingMetaToJSON(json: any): GeocodingMeta {\n  return GeocodingMetaToJSONTyped(json, false);\n}\n\nexport function GeocodingMetaToJSONTyped(\n  value?: GeocodingMeta | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    attribution: value[\"attribution\"],\n    error: value[\"error\"],\n    query: value[\"query\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { GeocodingMeta } from \"./GeocodingMeta\";\nimport {\n  GeocodingMetaFromJSON,\n  GeocodingMetaFromJSONTyped,\n  GeocodingMetaToJSON,\n  GeocodingMetaToJSONTyped,\n} from \"./GeocodingMeta\";\nimport type { FeaturePropertiesV2 } from \"./FeaturePropertiesV2\";\nimport {\n  FeaturePropertiesV2FromJSON,\n  FeaturePropertiesV2FromJSONTyped,\n  FeaturePropertiesV2ToJSON,\n  FeaturePropertiesV2ToJSONTyped,\n} from \"./FeaturePropertiesV2\";\n\n/**\n * The GeoJSON response envelope.\n *\n * This is parameterized over the feature properties type\n * to allow for changes between versions.\n * @export\n * @interface GeocodeResponseEnvelopePropertiesV2\n */\nexport interface GeocodeResponseEnvelopePropertiesV2 {\n  /**\n   * The geographic bounding box covering all features in the result set.\n   *\n   * This is empty for autocomplete results.\n   * @type {Array<number>}\n   * @memberof GeocodeResponseEnvelopePropertiesV2\n   */\n  bbox?: Array<number> | null;\n  /**\n   *\n   * @type {Array<FeaturePropertiesV2>}\n   * @memberof GeocodeResponseEnvelopePropertiesV2\n   */\n  features: Array<FeaturePropertiesV2>;\n  /**\n   *\n   * @type {GeocodingMeta}\n   * @memberof GeocodeResponseEnvelopePropertiesV2\n   */\n  geocoding: GeocodingMeta;\n  /**\n   * The GeoJSON object type as defined in RFC 7946.\n   *\n   * NOTE: This is always FeatureCollection, as the response envelope is designed to hold multiple results.\n   * @type {string}\n   * @memberof GeocodeResponseEnvelopePropertiesV2\n   */\n  type: string;\n}\n\n/**\n * Check if a given object implements the GeocodeResponseEnvelopePropertiesV2 interface.\n */\nexport function instanceOfGeocodeResponseEnvelopePropertiesV2(\n  value: object,\n): value is GeocodeResponseEnvelopePropertiesV2 {\n  if (!(\"features\" in value) || value[\"features\"] === undefined) return false;\n  if (!(\"geocoding\" in value) || value[\"geocoding\"] === undefined) return false;\n  if (!(\"type\" in value) || value[\"type\"] === undefined) return false;\n  return true;\n}\n\nexport function GeocodeResponseEnvelopePropertiesV2FromJSON(\n  json: any,\n): GeocodeResponseEnvelopePropertiesV2 {\n  return GeocodeResponseEnvelopePropertiesV2FromJSONTyped(json, false);\n}\n\nexport function GeocodeResponseEnvelopePropertiesV2FromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): GeocodeResponseEnvelopePropertiesV2 {\n  if (json == null) {\n    return json;\n  }\n  return {\n    bbox: json[\"bbox\"] == null ? undefined : json[\"bbox\"],\n    features: (json[\"features\"] as Array<any>).map(FeaturePropertiesV2FromJSON),\n    geocoding: GeocodingMetaFromJSON(json[\"geocoding\"]),\n    type: json[\"type\"],\n  };\n}\n\nexport function GeocodeResponseEnvelopePropertiesV2ToJSON(\n  json: any,\n): GeocodeResponseEnvelopePropertiesV2 {\n  return GeocodeResponseEnvelopePropertiesV2ToJSONTyped(json, false);\n}\n\nexport function GeocodeResponseEnvelopePropertiesV2ToJSONTyped(\n  value?: GeocodeResponseEnvelopePropertiesV2 | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    bbox: value[\"bbox\"],\n    features: (value[\"features\"] as Array<any>).map(FeaturePropertiesV2ToJSON),\n    geocoding: GeocodingMetaToJSON(value[\"geocoding\"]),\n    type: value[\"type\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { Coordinate } from \"./Coordinate\";\nimport {\n  CoordinateFromJSON,\n  CoordinateFromJSONTyped,\n  CoordinateToJSON,\n  CoordinateToJSONTyped,\n} from \"./Coordinate\";\n\n/**\n *\n * @export\n * @interface HeightRequest\n */\nexport interface HeightRequest {\n  /**\n   * An identifier to disambiguate requests (echoed by the server).\n   * @type {string}\n   * @memberof HeightRequest\n   */\n  id?: string;\n  /**\n   * REQUIRED if `encoded_polyline` is not present.\n   * @type {Array<Coordinate>}\n   * @memberof HeightRequest\n   */\n  shape?: Array<Coordinate>;\n  /**\n   * REQUIRED if `shape` is not present. An encoded polyline (https://developers.google.com/maps/documentation/utilities/polylinealgorithm).\n   * @type {string}\n   * @memberof HeightRequest\n   */\n  encodedPolyline?: string;\n  /**\n   * Specifies whether the polyline is encoded with 6 digit precision (polyline6) or 5 digit precision (polyline5).\n   * @type {string}\n   * @memberof HeightRequest\n   */\n  shapeFormat?: HeightRequestShapeFormatEnum;\n  /**\n   * Controls whether the returned array is one-dimensional (height only) or two-dimensional (with a range and height). The range dimension can be used to generate a graph or steepness gradient along a route.\n   * @type {boolean}\n   * @memberof HeightRequest\n   */\n  range?: boolean;\n  /**\n   * The decimal precision (number of digits after the point) of the output. When 0, integer values are returned. Valid values are 0, 1, and 2.\n   * @type {number}\n   * @memberof HeightRequest\n   */\n  heightPrecision?: number;\n  /**\n   * The distance at which the input polyline should be sampled to provide uniform distances between points. If not set, the input shape will be used as-is.\n   * @type {number}\n   * @memberof HeightRequest\n   */\n  resampleDistance?: number;\n}\n\n/**\n * @export\n */\nexport const HeightRequestShapeFormatEnum = {\n  Polyline6: \"polyline6\",\n  Polyline5: \"polyline5\",\n} as const;\nexport type HeightRequestShapeFormatEnum =\n  (typeof HeightRequestShapeFormatEnum)[keyof typeof HeightRequestShapeFormatEnum];\n\n/**\n * Check if a given object implements the HeightRequest interface.\n */\nexport function instanceOfHeightRequest(value: object): value is HeightRequest {\n  return true;\n}\n\nexport function HeightRequestFromJSON(json: any): HeightRequest {\n  return HeightRequestFromJSONTyped(json, false);\n}\n\nexport function HeightRequestFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): HeightRequest {\n  if (json == null) {\n    return json;\n  }\n  return {\n    id: json[\"id\"] == null ? undefined : json[\"id\"],\n    shape:\n      json[\"shape\"] == null\n        ? undefined\n        : (json[\"shape\"] as Array<any>).map(CoordinateFromJSON),\n    encodedPolyline:\n      json[\"encoded_polyline\"] == null ? undefined : json[\"encoded_polyline\"],\n    shapeFormat:\n      json[\"shape_format\"] == null ? undefined : json[\"shape_format\"],\n    range: json[\"range\"] == null ? undefined : json[\"range\"],\n    heightPrecision:\n      json[\"height_precision\"] == null ? undefined : json[\"height_precision\"],\n    resampleDistance:\n      json[\"resample_distance\"] == null ? undefined : json[\"resample_distance\"],\n  };\n}\n\nexport function HeightRequestToJSON(json: any): HeightRequest {\n  return HeightRequestToJSONTyped(json, false);\n}\n\nexport function HeightRequestToJSONTyped(\n  value?: HeightRequest | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    id: value[\"id\"],\n    shape:\n      value[\"shape\"] == null\n        ? undefined\n        : (value[\"shape\"] as Array<any>).map(CoordinateToJSON),\n    encoded_polyline: value[\"encodedPolyline\"],\n    shape_format: value[\"shapeFormat\"],\n    range: value[\"range\"],\n    height_precision: value[\"heightPrecision\"],\n    resample_distance: value[\"resampleDistance\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { Coordinate } from \"./Coordinate\";\nimport {\n  CoordinateFromJSON,\n  CoordinateFromJSONTyped,\n  CoordinateToJSON,\n  CoordinateToJSONTyped,\n} from \"./Coordinate\";\n\n/**\n *\n * @export\n * @interface HeightResponse\n */\nexport interface HeightResponse {\n  /**\n   * An identifier to disambiguate requests (echoed by the server).\n   * @type {string}\n   * @memberof HeightResponse\n   */\n  id?: string;\n  /**\n   *\n   * @type {Array<Coordinate>}\n   * @memberof HeightResponse\n   */\n  shape?: Array<Coordinate>;\n  /**\n   * The input polyline.\n   * @type {string}\n   * @memberof HeightResponse\n   */\n  encodedPolyline?: string;\n  /**\n   * The list of heights for each point, in meters. Present only if `range` is `false`. Null values indicate missing data.\n   * @type {Array<number>}\n   * @memberof HeightResponse\n   */\n  height?: Array<number>;\n  /**\n   * The list of ranges and heights for each point in the shape, where each entry is an array of length 2. Present only if `range` is `true`. In each pair, the first element represents the range or distance along the input locations. It is the cumulative distance along the previous coordinates in the shape up to the current coordinate. This value for the first coordinate in the shape will always be 0. The second element in the pair represents the height or elevation at the associated coordinate. The height is null if no height data exists for a given location. Both values are expressed in meters.\n   * @type {Array<Array<number>>}\n   * @memberof HeightResponse\n   */\n  rangeHeight?: Array<Array<number>>;\n}\n\n/**\n * Check if a given object implements the HeightResponse interface.\n */\nexport function instanceOfHeightResponse(\n  value: object,\n): value is HeightResponse {\n  return true;\n}\n\nexport function HeightResponseFromJSON(json: any): HeightResponse {\n  return HeightResponseFromJSONTyped(json, false);\n}\n\nexport function HeightResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): HeightResponse {\n  if (json == null) {\n    return json;\n  }\n  return {\n    id: json[\"id\"] == null ? undefined : json[\"id\"],\n    shape:\n      json[\"shape\"] == null\n        ? undefined\n        : (json[\"shape\"] as Array<any>).map(CoordinateFromJSON),\n    encodedPolyline:\n      json[\"encoded_polyline\"] == null ? undefined : json[\"encoded_polyline\"],\n    height: json[\"height\"] == null ? undefined : json[\"height\"],\n    rangeHeight:\n      json[\"range_height\"] == null ? undefined : json[\"range_height\"],\n  };\n}\n\nexport function HeightResponseToJSON(json: any): HeightResponse {\n  return HeightResponseToJSONTyped(json, false);\n}\n\nexport function HeightResponseToJSONTyped(\n  value?: HeightResponse | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    id: value[\"id\"],\n    shape:\n      value[\"shape\"] == null\n        ? undefined\n        : (value[\"shape\"] as Array<any>).map(CoordinateToJSON),\n    encoded_polyline: value[\"encodedPolyline\"],\n    height: value[\"height\"],\n    range_height: value[\"rangeHeight\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface HighwayClassification\n */\nexport interface HighwayClassification {\n  /**\n   * Is the edge internal to an intersection?\n   * @type {boolean}\n   * @memberof HighwayClassification\n   */\n  internal?: boolean;\n  /**\n   * Is the edge a ramp or turn channel?\n   * @type {boolean}\n   * @memberof HighwayClassification\n   */\n  link?: boolean;\n  /**\n   * A representation of the smoothness of the highway. This is used for costing and access checks based on the vehicle type.\n   * @type {string}\n   * @memberof HighwayClassification\n   */\n  surface?: HighwayClassificationSurfaceEnum;\n  /**\n   *\n   * @type {string}\n   * @memberof HighwayClassification\n   */\n  use?: HighwayClassificationUseEnum;\n  /**\n   * The classification/importance of the road/path. Used for a variety of purposes including fallback speed estimation and access for certain vehicle types.\n   * @type {string}\n   * @memberof HighwayClassification\n   */\n  classification?: HighwayClassificationClassificationEnum;\n}\n\n/**\n * @export\n */\nexport const HighwayClassificationSurfaceEnum = {\n  PavedSmooth: \"paved_smooth\",\n  Paved: \"paved\",\n  PavedRough: \"paved_rough\",\n  Compacted: \"compacted\",\n  Dirt: \"dirt\",\n  Gravel: \"gravel\",\n  Path: \"path\",\n  Impassable: \"impassable\",\n} as const;\nexport type HighwayClassificationSurfaceEnum =\n  (typeof HighwayClassificationSurfaceEnum)[keyof typeof HighwayClassificationSurfaceEnum];\n\n/**\n * @export\n */\nexport const HighwayClassificationUseEnum = {\n  Road: \"road\",\n  Ramp: \"ramp\",\n  TurnChannel: \"turn_channel\",\n  Track: \"track\",\n  Driveway: \"driveway\",\n  Alley: \"alley\",\n  ParkingAisle: \"parking_aisle\",\n  EmergencyAccess: \"emergency_access\",\n  DriveThrough: \"drive_through\",\n  Culdesac: \"culdesac\",\n  LivingStreet: \"living_street\",\n  ServiceRoad: \"service_road\",\n  Cycleway: \"cycleway\",\n  MountainBike: \"mountain_bike\",\n  Sidewalk: \"sidewalk\",\n  Footway: \"footway\",\n  Elevator: \"elevator\",\n  Steps: \"steps\",\n  Escalator: \"escalator\",\n  Path: \"path\",\n  Pedestrian: \"pedestrian\",\n  Bridleway: \"bridleway\",\n  PedestrianCrossing: \"pedestrian_crossing\",\n  RestArea: \"rest_area\",\n  ServiceArea: \"service_area\",\n  Other: \"other\",\n  Rail: \"rail\",\n  Ferry: \"ferry\",\n  RailFerry: \"rail-ferry\",\n  Bus: \"bus\",\n  EgressConnection: \"egress_connection\",\n  PlatformConnnection: \"platform_connnection\",\n  TransitConnection: \"transit_connection\",\n  Construction: \"construction\",\n} as const;\nexport type HighwayClassificationUseEnum =\n  (typeof HighwayClassificationUseEnum)[keyof typeof HighwayClassificationUseEnum];\n\n/**\n * @export\n */\nexport const HighwayClassificationClassificationEnum = {\n  Motorway: \"motorway\",\n  Trunk: \"trunk\",\n  Primary: \"primary\",\n  Secondary: \"secondary\",\n  Tertiary: \"tertiary\",\n  Unclassified: \"unclassified\",\n  Residential: \"residential\",\n  ServiceOther: \"service_other\",\n} as const;\nexport type HighwayClassificationClassificationEnum =\n  (typeof HighwayClassificationClassificationEnum)[keyof typeof HighwayClassificationClassificationEnum];\n\n/**\n * Check if a given object implements the HighwayClassification interface.\n */\nexport function instanceOfHighwayClassification(\n  value: object,\n): value is HighwayClassification {\n  return true;\n}\n\nexport function HighwayClassificationFromJSON(\n  json: any,\n): HighwayClassification {\n  return HighwayClassificationFromJSONTyped(json, false);\n}\n\nexport function HighwayClassificationFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): HighwayClassification {\n  if (json == null) {\n    return json;\n  }\n  return {\n    internal: json[\"internal\"] == null ? undefined : json[\"internal\"],\n    link: json[\"link\"] == null ? undefined : json[\"link\"],\n    surface: json[\"surface\"] == null ? undefined : json[\"surface\"],\n    use: json[\"use\"] == null ? undefined : json[\"use\"],\n    classification:\n      json[\"classification\"] == null ? undefined : json[\"classification\"],\n  };\n}\n\nexport function HighwayClassificationToJSON(json: any): HighwayClassification {\n  return HighwayClassificationToJSONTyped(json, false);\n}\n\nexport function HighwayClassificationToJSONTyped(\n  value?: HighwayClassification | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    internal: value[\"internal\"],\n    link: value[\"link\"],\n    surface: value[\"surface\"],\n    use: value[\"use\"],\n    classification: value[\"classification\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n *\n * @export\n */\nexport const IsochroneCostingModel = {\n  Auto: \"auto\",\n  Bus: \"bus\",\n  Taxi: \"taxi\",\n  Truck: \"truck\",\n  Bicycle: \"bicycle\",\n  Bikeshare: \"bikeshare\",\n  MotorScooter: \"motor_scooter\",\n  Motorcycle: \"motorcycle\",\n  Pedestrian: \"pedestrian\",\n  LowSpeedVehicle: \"low_speed_vehicle\",\n} as const;\nexport type IsochroneCostingModel =\n  (typeof IsochroneCostingModel)[keyof typeof IsochroneCostingModel];\n\nexport function instanceOfIsochroneCostingModel(value: any): boolean {\n  for (const key in IsochroneCostingModel) {\n    if (Object.prototype.hasOwnProperty.call(IsochroneCostingModel, key)) {\n      if (\n        IsochroneCostingModel[key as keyof typeof IsochroneCostingModel] ===\n        value\n      ) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function IsochroneCostingModelFromJSON(\n  json: any,\n): IsochroneCostingModel {\n  return IsochroneCostingModelFromJSONTyped(json, false);\n}\n\nexport function IsochroneCostingModelFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): IsochroneCostingModel {\n  return json as IsochroneCostingModel;\n}\n\nexport function IsochroneCostingModelToJSON(\n  value?: IsochroneCostingModel | null,\n): any {\n  return value as any;\n}\n\nexport function IsochroneCostingModelToJSONTyped(\n  value: any,\n  ignoreDiscriminator: boolean,\n): IsochroneCostingModel {\n  return value as IsochroneCostingModel;\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface IsochroneProperties\n */\nexport interface IsochroneProperties {\n  /**\n   *\n   * @type {string}\n   * @memberof IsochroneProperties\n   */\n  fillColor?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof IsochroneProperties\n   */\n  opacity?: number;\n  /**\n   *\n   * @type {string}\n   * @memberof IsochroneProperties\n   */\n  fill?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof IsochroneProperties\n   */\n  fillOpacity?: number;\n  /**\n   *\n   * @type {string}\n   * @memberof IsochroneProperties\n   */\n  color?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof IsochroneProperties\n   */\n  contour?: number;\n  /**\n   *\n   * @type {string}\n   * @memberof IsochroneProperties\n   */\n  metric?: IsochronePropertiesMetricEnum;\n}\n\n/**\n * @export\n */\nexport const IsochronePropertiesMetricEnum = {\n  Time: \"time\",\n  Distance: \"distance\",\n} as const;\nexport type IsochronePropertiesMetricEnum =\n  (typeof IsochronePropertiesMetricEnum)[keyof typeof IsochronePropertiesMetricEnum];\n\n/**\n * Check if a given object implements the IsochroneProperties interface.\n */\nexport function instanceOfIsochroneProperties(\n  value: object,\n): value is IsochroneProperties {\n  return true;\n}\n\nexport function IsochronePropertiesFromJSON(json: any): IsochroneProperties {\n  return IsochronePropertiesFromJSONTyped(json, false);\n}\n\nexport function IsochronePropertiesFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): IsochroneProperties {\n  if (json == null) {\n    return json;\n  }\n  return {\n    fillColor: json[\"fillColor\"] == null ? undefined : json[\"fillColor\"],\n    opacity: json[\"opacity\"] == null ? undefined : json[\"opacity\"],\n    fill: json[\"fill\"] == null ? undefined : json[\"fill\"],\n    fillOpacity: json[\"fillOpacity\"] == null ? undefined : json[\"fillOpacity\"],\n    color: json[\"color\"] == null ? undefined : json[\"color\"],\n    contour: json[\"contour\"] == null ? undefined : json[\"contour\"],\n    metric: json[\"metric\"] == null ? undefined : json[\"metric\"],\n  };\n}\n\nexport function IsochronePropertiesToJSON(json: any): IsochroneProperties {\n  return IsochronePropertiesToJSONTyped(json, false);\n}\n\nexport function IsochronePropertiesToJSONTyped(\n  value?: IsochroneProperties | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    fillColor: value[\"fillColor\"],\n    opacity: value[\"opacity\"],\n    fill: value[\"fill\"],\n    fillOpacity: value[\"fillOpacity\"],\n    color: value[\"color\"],\n    contour: value[\"contour\"],\n    metric: value[\"metric\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { IsochroneProperties } from \"./IsochroneProperties\";\nimport {\n  IsochronePropertiesFromJSON,\n  IsochronePropertiesFromJSONTyped,\n  IsochronePropertiesToJSON,\n  IsochronePropertiesToJSONTyped,\n} from \"./IsochroneProperties\";\n\n/**\n *\n * @export\n * @interface IsochroneFeature\n */\nexport interface IsochroneFeature {\n  /**\n   *\n   * @type {IsochroneProperties}\n   * @memberof IsochroneFeature\n   */\n  properties?: IsochroneProperties;\n  /**\n   *\n   * @type {{ [key: string]: any; }}\n   * @memberof IsochroneFeature\n   */\n  geometry?: { [key: string]: any };\n  /**\n   *\n   * @type {string}\n   * @memberof IsochroneFeature\n   */\n  type?: IsochroneFeatureTypeEnum;\n}\n\n/**\n * @export\n */\nexport const IsochroneFeatureTypeEnum = {\n  Feature: \"Feature\",\n} as const;\nexport type IsochroneFeatureTypeEnum =\n  (typeof IsochroneFeatureTypeEnum)[keyof typeof IsochroneFeatureTypeEnum];\n\n/**\n * Check if a given object implements the IsochroneFeature interface.\n */\nexport function instanceOfIsochroneFeature(\n  value: object,\n): value is IsochroneFeature {\n  return true;\n}\n\nexport function IsochroneFeatureFromJSON(json: any): IsochroneFeature {\n  return IsochroneFeatureFromJSONTyped(json, false);\n}\n\nexport function IsochroneFeatureFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): IsochroneFeature {\n  if (json == null) {\n    return json;\n  }\n  return {\n    properties:\n      json[\"properties\"] == null\n        ? undefined\n        : IsochronePropertiesFromJSON(json[\"properties\"]),\n    geometry: json[\"geometry\"] == null ? undefined : json[\"geometry\"],\n    type: json[\"type\"] == null ? undefined : json[\"type\"],\n  };\n}\n\nexport function IsochroneFeatureToJSON(json: any): IsochroneFeature {\n  return IsochroneFeatureToJSONTyped(json, false);\n}\n\nexport function IsochroneFeatureToJSONTyped(\n  value?: IsochroneFeature | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    properties: IsochronePropertiesToJSON(value[\"properties\"]),\n    geometry: value[\"geometry\"],\n    type: value[\"type\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { CostingOptions } from \"./CostingOptions\";\nimport {\n  CostingOptionsFromJSON,\n  CostingOptionsFromJSONTyped,\n  CostingOptionsToJSON,\n  CostingOptionsToJSONTyped,\n} from \"./CostingOptions\";\nimport type { Contour } from \"./Contour\";\nimport {\n  ContourFromJSON,\n  ContourFromJSONTyped,\n  ContourToJSON,\n  ContourToJSONTyped,\n} from \"./Contour\";\nimport type { Coordinate } from \"./Coordinate\";\nimport {\n  CoordinateFromJSON,\n  CoordinateFromJSONTyped,\n  CoordinateToJSON,\n  CoordinateToJSONTyped,\n} from \"./Coordinate\";\nimport type { IsochroneCostingModel } from \"./IsochroneCostingModel\";\nimport {\n  IsochroneCostingModelFromJSON,\n  IsochroneCostingModelFromJSONTyped,\n  IsochroneCostingModelToJSON,\n  IsochroneCostingModelToJSONTyped,\n} from \"./IsochroneCostingModel\";\n\n/**\n *\n * @export\n * @interface IsochroneRequest\n */\nexport interface IsochroneRequest {\n  /**\n   * An identifier to disambiguate requests (echoed by the server).\n   * @type {string}\n   * @memberof IsochroneRequest\n   */\n  id?: string;\n  /**\n   *\n   * @type {Array<Coordinate>}\n   * @memberof IsochroneRequest\n   */\n  locations: Array<Coordinate>;\n  /**\n   *\n   * @type {IsochroneCostingModel}\n   * @memberof IsochroneRequest\n   */\n  costing: IsochroneCostingModel;\n  /**\n   *\n   * @type {CostingOptions}\n   * @memberof IsochroneRequest\n   */\n  costingOptions?: CostingOptions;\n  /**\n   *\n   * @type {Array<Contour>}\n   * @memberof IsochroneRequest\n   */\n  contours: Array<Contour>;\n  /**\n   * If true, the generated GeoJSON will use polygons. The default is to use LineStrings. Polygon output makes it easier to render overlapping areas in some visualization tools (such as MapLibre renderers).\n   * @type {boolean}\n   * @memberof IsochroneRequest\n   */\n  polygons?: boolean;\n  /**\n   * A value in the range [0, 1] which will be used to smooth out or remove smaller contours. A value of 1 will only return the largest contour for a given time value. A value of 0.5 drops any contours that are less than half the area of the largest contour in the set of contours for that same time value.\n   * @type {number}\n   * @memberof IsochroneRequest\n   */\n  denoise?: number;\n  /**\n   * The value in meters to be used as a tolerance for Douglas-Peucker generalization.\n   * @type {number}\n   * @memberof IsochroneRequest\n   */\n  generalize?: number;\n  /**\n   * If true, then the output GeoJSON will include the input locations as two MultiPoint features: one for the exact input coordinates, and a second for the route network node location that the point was snapped to.\n   * @type {boolean}\n   * @memberof IsochroneRequest\n   */\n  showLocations?: boolean;\n}\n\n/**\n * Check if a given object implements the IsochroneRequest interface.\n */\nexport function instanceOfIsochroneRequest(\n  value: object,\n): value is IsochroneRequest {\n  if (!(\"locations\" in value) || value[\"locations\"] === undefined) return false;\n  if (!(\"costing\" in value) || value[\"costing\"] === undefined) return false;\n  if (!(\"contours\" in value) || value[\"contours\"] === undefined) return false;\n  return true;\n}\n\nexport function IsochroneRequestFromJSON(json: any): IsochroneRequest {\n  return IsochroneRequestFromJSONTyped(json, false);\n}\n\nexport function IsochroneRequestFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): IsochroneRequest {\n  if (json == null) {\n    return json;\n  }\n  return {\n    id: json[\"id\"] == null ? undefined : json[\"id\"],\n    locations: (json[\"locations\"] as Array<any>).map(CoordinateFromJSON),\n    costing: IsochroneCostingModelFromJSON(json[\"costing\"]),\n    costingOptions:\n      json[\"costing_options\"] == null\n        ? undefined\n        : CostingOptionsFromJSON(json[\"costing_options\"]),\n    contours: (json[\"contours\"] as Array<any>).map(ContourFromJSON),\n    polygons: json[\"polygons\"] == null ? undefined : json[\"polygons\"],\n    denoise: json[\"denoise\"] == null ? undefined : json[\"denoise\"],\n    generalize: json[\"generalize\"] == null ? undefined : json[\"generalize\"],\n    showLocations:\n      json[\"show_locations\"] == null ? undefined : json[\"show_locations\"],\n  };\n}\n\nexport function IsochroneRequestToJSON(json: any): IsochroneRequest {\n  return IsochroneRequestToJSONTyped(json, false);\n}\n\nexport function IsochroneRequestToJSONTyped(\n  value?: IsochroneRequest | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    id: value[\"id\"],\n    locations: (value[\"locations\"] as Array<any>).map(CoordinateToJSON),\n    costing: IsochroneCostingModelToJSON(value[\"costing\"]),\n    costing_options: CostingOptionsToJSON(value[\"costingOptions\"]),\n    contours: (value[\"contours\"] as Array<any>).map(ContourToJSON),\n    polygons: value[\"polygons\"],\n    denoise: value[\"denoise\"],\n    generalize: value[\"generalize\"],\n    show_locations: value[\"showLocations\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { IsochroneFeature } from \"./IsochroneFeature\";\nimport {\n  IsochroneFeatureFromJSON,\n  IsochroneFeatureFromJSONTyped,\n  IsochroneFeatureToJSON,\n  IsochroneFeatureToJSONTyped,\n} from \"./IsochroneFeature\";\n\n/**\n *\n * @export\n * @interface IsochroneResponse\n */\nexport interface IsochroneResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof IsochroneResponse\n   */\n  id?: string;\n  /**\n   *\n   * @type {Array<IsochroneFeature>}\n   * @memberof IsochroneResponse\n   */\n  features: Array<IsochroneFeature>;\n  /**\n   *\n   * @type {string}\n   * @memberof IsochroneResponse\n   */\n  type: IsochroneResponseTypeEnum;\n}\n\n/**\n * @export\n */\nexport const IsochroneResponseTypeEnum = {\n  FeatureCollection: \"FeatureCollection\",\n} as const;\nexport type IsochroneResponseTypeEnum =\n  (typeof IsochroneResponseTypeEnum)[keyof typeof IsochroneResponseTypeEnum];\n\n/**\n * Check if a given object implements the IsochroneResponse interface.\n */\nexport function instanceOfIsochroneResponse(\n  value: object,\n): value is IsochroneResponse {\n  if (!(\"features\" in value) || value[\"features\"] === undefined) return false;\n  if (!(\"type\" in value) || value[\"type\"] === undefined) return false;\n  return true;\n}\n\nexport function IsochroneResponseFromJSON(json: any): IsochroneResponse {\n  return IsochroneResponseFromJSONTyped(json, false);\n}\n\nexport function IsochroneResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): IsochroneResponse {\n  if (json == null) {\n    return json;\n  }\n  return {\n    id: json[\"id\"] == null ? undefined : json[\"id\"],\n    features: (json[\"features\"] as Array<any>).map(IsochroneFeatureFromJSON),\n    type: json[\"type\"],\n  };\n}\n\nexport function IsochroneResponseToJSON(json: any): IsochroneResponse {\n  return IsochroneResponseToJSONTyped(json, false);\n}\n\nexport function IsochroneResponseToJSONTyped(\n  value?: IsochroneResponse | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    id: value[\"id\"],\n    features: (value[\"features\"] as Array<any>).map(IsochroneFeatureToJSON),\n    type: value[\"type\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n * Canonical geocoding layer IDs for querying.\n * @export\n */\nexport const LayerId = {\n  Poi: \"poi\",\n  Address: \"address\",\n  Street: \"street\",\n  Country: \"country\",\n  Macroregion: \"macroregion\",\n  Region: \"region\",\n  Macrocounty: \"macrocounty\",\n  County: \"county\",\n  Locality: \"locality\",\n  Localadmin: \"localadmin\",\n  Borough: \"borough\",\n  Neighbourhood: \"neighbourhood\",\n  Postalcode: \"postalcode\",\n  Dependency: \"dependency\",\n  Macrohood: \"macrohood\",\n  Marinearea: \"marinearea\",\n  Disputed: \"disputed\",\n  Empire: \"empire\",\n  Continent: \"continent\",\n  Ocean: \"ocean\",\n  Coarse: \"coarse\",\n} as const;\nexport type LayerId = (typeof LayerId)[keyof typeof LayerId];\n\nexport function instanceOfLayerId(value: any): boolean {\n  for (const key in LayerId) {\n    if (Object.prototype.hasOwnProperty.call(LayerId, key)) {\n      if (LayerId[key as keyof typeof LayerId] === value) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function LayerIdFromJSON(json: any): LayerId {\n  return LayerIdFromJSONTyped(json, false);\n}\n\nexport function LayerIdFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): LayerId {\n  return json as LayerId;\n}\n\nexport function LayerIdToJSON(value?: LayerId | null): any {\n  return value as any;\n}\n\nexport function LayerIdToJSONTyped(\n  value: any,\n  ignoreDiscriminator: boolean,\n): LayerId {\n  return value as LayerId;\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface Speeds\n */\nexport interface Speeds {\n  /**\n   * Does this edge have predicted (historical) speed records?\n   * @type {boolean}\n   * @memberof Speeds\n   */\n  predicted?: boolean;\n  /**\n   * Speed when there is no traffic, in kph.\n   * @type {number}\n   * @memberof Speeds\n   */\n  constrainedFlow?: number;\n  /**\n   * Speed when there is heavy traffic, in kph.\n   * @type {number}\n   * @memberof Speeds\n   */\n  freeFlow?: number;\n  /**\n   * The type of speed which is used when setting default speeds. When `tagged`, the explicit `max_speed` tags from OpenStreetMap are being used. When `classified`, the values are being inferred from the highway classification.\n   * @type {string}\n   * @memberof Speeds\n   */\n  type?: SpeedsTypeEnum;\n  /**\n   * The default speed used for calculations. NOTE: Values greater than 250 are used for special cases and should not be treated as literal.\n   * @type {number}\n   * @memberof Speeds\n   */\n  _default?: number;\n}\n\n/**\n * @export\n */\nexport const SpeedsTypeEnum = {\n  Classified: \"classified\",\n  Tagged: \"tagged\",\n} as const;\nexport type SpeedsTypeEnum =\n  (typeof SpeedsTypeEnum)[keyof typeof SpeedsTypeEnum];\n\n/**\n * Check if a given object implements the Speeds interface.\n */\nexport function instanceOfSpeeds(value: object): value is Speeds {\n  return true;\n}\n\nexport function SpeedsFromJSON(json: any): Speeds {\n  return SpeedsFromJSONTyped(json, false);\n}\n\nexport function SpeedsFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): Speeds {\n  if (json == null) {\n    return json;\n  }\n  return {\n    predicted: json[\"predicted\"] == null ? undefined : json[\"predicted\"],\n    constrainedFlow:\n      json[\"constrained_flow\"] == null ? undefined : json[\"constrained_flow\"],\n    freeFlow: json[\"free_flow\"] == null ? undefined : json[\"free_flow\"],\n    type: json[\"type\"] == null ? undefined : json[\"type\"],\n    _default: json[\"default\"] == null ? undefined : json[\"default\"],\n  };\n}\n\nexport function SpeedsToJSON(json: any): Speeds {\n  return SpeedsToJSONTyped(json, false);\n}\n\nexport function SpeedsToJSONTyped(\n  value?: Speeds | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    predicted: value[\"predicted\"],\n    constrained_flow: value[\"constrainedFlow\"],\n    free_flow: value[\"freeFlow\"],\n    type: value[\"type\"],\n    default: value[\"_default\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface NodeId\n */\nexport interface NodeId {\n  /**\n   *\n   * @type {number}\n   * @memberof NodeId\n   */\n  id?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof NodeId\n   */\n  value?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof NodeId\n   */\n  tileId?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof NodeId\n   */\n  level?: number;\n}\n\n/**\n * Check if a given object implements the NodeId interface.\n */\nexport function instanceOfNodeId(value: object): value is NodeId {\n  return true;\n}\n\nexport function NodeIdFromJSON(json: any): NodeId {\n  return NodeIdFromJSONTyped(json, false);\n}\n\nexport function NodeIdFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): NodeId {\n  if (json == null) {\n    return json;\n  }\n  return {\n    id: json[\"id\"] == null ? undefined : json[\"id\"],\n    value: json[\"value\"] == null ? undefined : json[\"value\"],\n    tileId: json[\"tile_id\"] == null ? undefined : json[\"tile_id\"],\n    level: json[\"level\"] == null ? undefined : json[\"level\"],\n  };\n}\n\nexport function NodeIdToJSON(json: any): NodeId {\n  return NodeIdToJSONTyped(json, false);\n}\n\nexport function NodeIdToJSONTyped(\n  value?: NodeId | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    id: value[\"id\"],\n    value: value[\"value\"],\n    tile_id: value[\"tileId\"],\n    level: value[\"level\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface Restrictions\n */\nexport interface Restrictions {\n  /**\n   *\n   * @type {boolean}\n   * @memberof Restrictions\n   */\n  golfCart?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Restrictions\n   */\n  wheelchair?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Restrictions\n   */\n  taxi?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Restrictions\n   */\n  hOV?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Restrictions\n   */\n  truck?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Restrictions\n   */\n  emergency?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Restrictions\n   */\n  pedestrian?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Restrictions\n   */\n  car?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Restrictions\n   */\n  bus?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Restrictions\n   */\n  bicycle?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Restrictions\n   */\n  motorcycle?: boolean;\n  /**\n   *\n   * @type {boolean}\n   * @memberof Restrictions\n   */\n  moped?: boolean;\n}\n\n/**\n * Check if a given object implements the Restrictions interface.\n */\nexport function instanceOfRestrictions(value: object): value is Restrictions {\n  return true;\n}\n\nexport function RestrictionsFromJSON(json: any): Restrictions {\n  return RestrictionsFromJSONTyped(json, false);\n}\n\nexport function RestrictionsFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): Restrictions {\n  if (json == null) {\n    return json;\n  }\n  return {\n    golfCart: json[\"golf_cart\"] == null ? undefined : json[\"golf_cart\"],\n    wheelchair: json[\"wheelchair\"] == null ? undefined : json[\"wheelchair\"],\n    taxi: json[\"taxi\"] == null ? undefined : json[\"taxi\"],\n    hOV: json[\"HOV\"] == null ? undefined : json[\"HOV\"],\n    truck: json[\"truck\"] == null ? undefined : json[\"truck\"],\n    emergency: json[\"emergency\"] == null ? undefined : json[\"emergency\"],\n    pedestrian: json[\"pedestrian\"] == null ? undefined : json[\"pedestrian\"],\n    car: json[\"car\"] == null ? undefined : json[\"car\"],\n    bus: json[\"bus\"] == null ? undefined : json[\"bus\"],\n    bicycle: json[\"bicycle\"] == null ? undefined : json[\"bicycle\"],\n    motorcycle: json[\"motorcycle\"] == null ? undefined : json[\"motorcycle\"],\n    moped: json[\"moped\"] == null ? undefined : json[\"moped\"],\n  };\n}\n\nexport function RestrictionsToJSON(json: any): Restrictions {\n  return RestrictionsToJSONTyped(json, false);\n}\n\nexport function RestrictionsToJSONTyped(\n  value?: Restrictions | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    golf_cart: value[\"golfCart\"],\n    wheelchair: value[\"wheelchair\"],\n    taxi: value[\"taxi\"],\n    HOV: value[\"hOV\"],\n    truck: value[\"truck\"],\n    emergency: value[\"emergency\"],\n    pedestrian: value[\"pedestrian\"],\n    car: value[\"car\"],\n    bus: value[\"bus\"],\n    bicycle: value[\"bicycle\"],\n    motorcycle: value[\"motorcycle\"],\n    moped: value[\"moped\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { Speeds } from \"./Speeds\";\nimport {\n  SpeedsFromJSON,\n  SpeedsFromJSONTyped,\n  SpeedsToJSON,\n  SpeedsToJSONTyped,\n} from \"./Speeds\";\nimport type { NodeId } from \"./NodeId\";\nimport {\n  NodeIdFromJSON,\n  NodeIdFromJSONTyped,\n  NodeIdToJSON,\n  NodeIdToJSONTyped,\n} from \"./NodeId\";\nimport type { HighwayClassification } from \"./HighwayClassification\";\nimport {\n  HighwayClassificationFromJSON,\n  HighwayClassificationFromJSONTyped,\n  HighwayClassificationToJSON,\n  HighwayClassificationToJSONTyped,\n} from \"./HighwayClassification\";\nimport type { GeoAttributes } from \"./GeoAttributes\";\nimport {\n  GeoAttributesFromJSON,\n  GeoAttributesFromJSONTyped,\n  GeoAttributesToJSON,\n  GeoAttributesToJSONTyped,\n} from \"./GeoAttributes\";\nimport type { Restrictions } from \"./Restrictions\";\nimport {\n  RestrictionsFromJSON,\n  RestrictionsFromJSONTyped,\n  RestrictionsToJSON,\n  RestrictionsToJSONTyped,\n} from \"./Restrictions\";\n\n/**\n *\n * @export\n * @interface LocateDetailedEdge\n */\nexport interface LocateDetailedEdge {\n  /**\n   * Is there a sidewalk to the left of the edge?\n   * @type {boolean}\n   * @memberof LocateDetailedEdge\n   */\n  sidewalkLeft?: boolean;\n  /**\n   * Is there a sidewalk to the right of the edge?\n   * @type {boolean}\n   * @memberof LocateDetailedEdge\n   */\n  sidewalkRight?: boolean;\n  /**\n   *\n   * @type {number}\n   * @memberof LocateDetailedEdge\n   */\n  laneCount?: number;\n  /**\n   * Is there a stop sign at end of the directed edge?\n   * @type {boolean}\n   * @memberof LocateDetailedEdge\n   */\n  stopSign?: boolean;\n  /**\n   *\n   * @type {string}\n   * @memberof LocateDetailedEdge\n   */\n  sacScale?: LocateDetailedEdgeSacScaleEnum;\n  /**\n   * Is there a yield sign at end of the directed edge?\n   * @type {boolean}\n   * @memberof LocateDetailedEdge\n   */\n  yieldSign?: boolean;\n  /**\n   * Does the edge lead to a \"no-through\" region?\n   * @type {boolean}\n   * @memberof LocateDetailedEdge\n   */\n  notThru?: boolean;\n  /**\n   * Is the edge info forward? If false, then reverse is implied.\n   * @type {boolean}\n   * @memberof LocateDetailedEdge\n   */\n  forward?: boolean;\n  /**\n   *\n   * @type {NodeId}\n   * @memberof LocateDetailedEdge\n   */\n  endNode?: NodeId;\n  /**\n   * Is the edge part of a truck route/network?\n   * @type {boolean}\n   * @memberof LocateDetailedEdge\n   */\n  truckRoute?: boolean;\n  /**\n   *\n   * @type {Speeds}\n   * @memberof LocateDetailedEdge\n   */\n  speeds?: Speeds;\n  /**\n   * Is the edge part of a bicycle network?\n   * @type {boolean}\n   * @memberof LocateDetailedEdge\n   */\n  bikeNetwork?: boolean;\n  /**\n   * Is the edge part of a roundabout?\n   * @type {boolean}\n   * @memberof LocateDetailedEdge\n   */\n  roundAbout?: boolean;\n  /**\n   * Is there a traffic signal at the end of the directed edge?\n   * @type {boolean}\n   * @memberof LocateDetailedEdge\n   */\n  trafficSignal?: boolean;\n  /**\n   * Is there a general restriction or access condition?\n   * @type {boolean}\n   * @memberof LocateDetailedEdge\n   */\n  accessRestriction?: boolean;\n  /**\n   * Is the edge destination only? If so, it will not be routed through.\n   * @type {boolean}\n   * @memberof LocateDetailedEdge\n   */\n  destinationOnly?: boolean;\n  /**\n   *\n   * @type {GeoAttributes}\n   * @memberof LocateDetailedEdge\n   */\n  geoAttributes?: GeoAttributes;\n  /**\n   *\n   * @type {Restrictions}\n   * @memberof LocateDetailedEdge\n   */\n  startRestriction?: Restrictions;\n  /**\n   * Indication of the type of cycle lane (if any) present along an edge.\n   * @type {string}\n   * @memberof LocateDetailedEdge\n   */\n  cycleLane?: LocateDetailedEdgeCycleLaneEnum;\n  /**\n   *\n   * @type {Restrictions}\n   * @memberof LocateDetailedEdge\n   */\n  endRestriction?: Restrictions;\n  /**\n   * Is access seasonal (ex. no access in winter)?\n   * @type {boolean}\n   * @memberof LocateDetailedEdge\n   */\n  seasonal?: boolean;\n  /**\n   * Does the edge cross into a new country?\n   * @type {boolean}\n   * @memberof LocateDetailedEdge\n   */\n  countryCrossing?: boolean;\n  /**\n   * Is the edge part of a complex restriction?\n   * @type {boolean}\n   * @memberof LocateDetailedEdge\n   */\n  partOfComplexRestriction?: boolean;\n  /**\n   * Do exit signs exist for the edge?\n   * @type {boolean}\n   * @memberof LocateDetailedEdge\n   */\n  hasSign?: boolean;\n  /**\n   *\n   * @type {Restrictions}\n   * @memberof LocateDetailedEdge\n   */\n  access?: Restrictions;\n  /**\n   * Is the edge part of a bridge?\n   * @type {boolean}\n   * @memberof LocateDetailedEdge\n   */\n  bridge?: boolean;\n  /**\n   *\n   * @type {HighwayClassification}\n   * @memberof LocateDetailedEdge\n   */\n  classification?: HighwayClassification;\n  /**\n   * Is the edge a toll road?\n   * @type {boolean}\n   * @memberof LocateDetailedEdge\n   */\n  toll?: boolean;\n  /**\n   * Is the edge a tunnel?\n   * @type {boolean}\n   * @memberof LocateDetailedEdge\n   */\n  tunnel?: boolean;\n}\n\n/**\n * @export\n */\nexport const LocateDetailedEdgeSacScaleEnum = {\n  None: \"none\",\n  Hiking: \"hiking\",\n  MountainHiking: \"mountain hiking\",\n  DemandingMountainHiking: \"demanding mountain hiking\",\n  AlpineHiking: \"alpine hiking\",\n  DemandingAlpineHiking: \"demanding alpine hiking\",\n  DifficultAlpineHiking: \"difficult alpine hiking\",\n} as const;\nexport type LocateDetailedEdgeSacScaleEnum =\n  (typeof LocateDetailedEdgeSacScaleEnum)[keyof typeof LocateDetailedEdgeSacScaleEnum];\n\n/**\n * @export\n */\nexport const LocateDetailedEdgeCycleLaneEnum = {\n  None: \"none\",\n  Shared: \"shared\",\n  Dedicated: \"dedicated\",\n  Separated: \"separated\",\n} as const;\nexport type LocateDetailedEdgeCycleLaneEnum =\n  (typeof LocateDetailedEdgeCycleLaneEnum)[keyof typeof LocateDetailedEdgeCycleLaneEnum];\n\n/**\n * Check if a given object implements the LocateDetailedEdge interface.\n */\nexport function instanceOfLocateDetailedEdge(\n  value: object,\n): value is LocateDetailedEdge {\n  return true;\n}\n\nexport function LocateDetailedEdgeFromJSON(json: any): LocateDetailedEdge {\n  return LocateDetailedEdgeFromJSONTyped(json, false);\n}\n\nexport function LocateDetailedEdgeFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): LocateDetailedEdge {\n  if (json == null) {\n    return json;\n  }\n  return {\n    sidewalkLeft:\n      json[\"sidewalk_left\"] == null ? undefined : json[\"sidewalk_left\"],\n    sidewalkRight:\n      json[\"sidewalk_right\"] == null ? undefined : json[\"sidewalk_right\"],\n    laneCount: json[\"lane_count\"] == null ? undefined : json[\"lane_count\"],\n    stopSign: json[\"stop_sign\"] == null ? undefined : json[\"stop_sign\"],\n    sacScale: json[\"sac_scale\"] == null ? undefined : json[\"sac_scale\"],\n    yieldSign: json[\"yield_sign\"] == null ? undefined : json[\"yield_sign\"],\n    notThru: json[\"not_thru\"] == null ? undefined : json[\"not_thru\"],\n    forward: json[\"forward\"] == null ? undefined : json[\"forward\"],\n    endNode:\n      json[\"end_node\"] == null ? undefined : NodeIdFromJSON(json[\"end_node\"]),\n    truckRoute: json[\"truck_route\"] == null ? undefined : json[\"truck_route\"],\n    speeds: json[\"speeds\"] == null ? undefined : SpeedsFromJSON(json[\"speeds\"]),\n    bikeNetwork:\n      json[\"bike_network\"] == null ? undefined : json[\"bike_network\"],\n    roundAbout: json[\"round_about\"] == null ? undefined : json[\"round_about\"],\n    trafficSignal:\n      json[\"traffic_signal\"] == null ? undefined : json[\"traffic_signal\"],\n    accessRestriction:\n      json[\"access_restriction\"] == null\n        ? undefined\n        : json[\"access_restriction\"],\n    destinationOnly:\n      json[\"destination_only\"] == null ? undefined : json[\"destination_only\"],\n    geoAttributes:\n      json[\"geo_attributes\"] == null\n        ? undefined\n        : GeoAttributesFromJSON(json[\"geo_attributes\"]),\n    startRestriction:\n      json[\"start_restriction\"] == null\n        ? undefined\n        : RestrictionsFromJSON(json[\"start_restriction\"]),\n    cycleLane: json[\"cycle_lane\"] == null ? undefined : json[\"cycle_lane\"],\n    endRestriction:\n      json[\"end_restriction\"] == null\n        ? undefined\n        : RestrictionsFromJSON(json[\"end_restriction\"]),\n    seasonal: json[\"seasonal\"] == null ? undefined : json[\"seasonal\"],\n    countryCrossing:\n      json[\"country_crossing\"] == null ? undefined : json[\"country_crossing\"],\n    partOfComplexRestriction:\n      json[\"part_of_complex_restriction\"] == null\n        ? undefined\n        : json[\"part_of_complex_restriction\"],\n    hasSign: json[\"has_sign\"] == null ? undefined : json[\"has_sign\"],\n    access:\n      json[\"access\"] == null ? undefined : RestrictionsFromJSON(json[\"access\"]),\n    bridge: json[\"bridge\"] == null ? undefined : json[\"bridge\"],\n    classification:\n      json[\"classification\"] == null\n        ? undefined\n        : HighwayClassificationFromJSON(json[\"classification\"]),\n    toll: json[\"toll\"] == null ? undefined : json[\"toll\"],\n    tunnel: json[\"tunnel\"] == null ? undefined : json[\"tunnel\"],\n  };\n}\n\nexport function LocateDetailedEdgeToJSON(json: any): LocateDetailedEdge {\n  return LocateDetailedEdgeToJSONTyped(json, false);\n}\n\nexport function LocateDetailedEdgeToJSONTyped(\n  value?: LocateDetailedEdge | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    sidewalk_left: value[\"sidewalkLeft\"],\n    sidewalk_right: value[\"sidewalkRight\"],\n    lane_count: value[\"laneCount\"],\n    stop_sign: value[\"stopSign\"],\n    sac_scale: value[\"sacScale\"],\n    yield_sign: value[\"yieldSign\"],\n    not_thru: value[\"notThru\"],\n    forward: value[\"forward\"],\n    end_node: NodeIdToJSON(value[\"endNode\"]),\n    truck_route: value[\"truckRoute\"],\n    speeds: SpeedsToJSON(value[\"speeds\"]),\n    bike_network: value[\"bikeNetwork\"],\n    round_about: value[\"roundAbout\"],\n    traffic_signal: value[\"trafficSignal\"],\n    access_restriction: value[\"accessRestriction\"],\n    destination_only: value[\"destinationOnly\"],\n    geo_attributes: GeoAttributesToJSON(value[\"geoAttributes\"]),\n    start_restriction: RestrictionsToJSON(value[\"startRestriction\"]),\n    cycle_lane: value[\"cycleLane\"],\n    end_restriction: RestrictionsToJSON(value[\"endRestriction\"]),\n    seasonal: value[\"seasonal\"],\n    country_crossing: value[\"countryCrossing\"],\n    part_of_complex_restriction: value[\"partOfComplexRestriction\"],\n    has_sign: value[\"hasSign\"],\n    access: RestrictionsToJSON(value[\"access\"]),\n    bridge: value[\"bridge\"],\n    classification: HighwayClassificationToJSON(value[\"classification\"]),\n    toll: value[\"toll\"],\n    tunnel: value[\"tunnel\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { BikeNetwork } from \"./BikeNetwork\";\nimport {\n  BikeNetworkFromJSON,\n  BikeNetworkFromJSONTyped,\n  BikeNetworkToJSON,\n  BikeNetworkToJSONTyped,\n} from \"./BikeNetwork\";\n\n/**\n *\n * @export\n * @interface LocateEdgeInfo\n */\nexport interface LocateEdgeInfo {\n  /**\n   * The mean elevation, in meters, relative to sea level.\n   * @type {number}\n   * @memberof LocateEdgeInfo\n   */\n  meanElevation?: number;\n  /**\n   * An encoded polyline (https://developers.google.com/maps/documentation/utilities/polylinealgorithm). Note that the polyline is always encoded with 6 digits of precision, whereas most implementations default to 5.\n   * @type {string}\n   * @memberof LocateEdgeInfo\n   */\n  shape: string;\n  /**\n   * A list of names that the edge goes by.\n   * @type {Array<string>}\n   * @memberof LocateEdgeInfo\n   */\n  names?: Array<string>;\n  /**\n   *\n   * @type {BikeNetwork}\n   * @memberof LocateEdgeInfo\n   */\n  bikeNetwork?: BikeNetwork;\n  /**\n   * The OSM way ID associated with this edge.\n   * @type {number}\n   * @memberof LocateEdgeInfo\n   */\n  wayId: number;\n}\n\n/**\n * Check if a given object implements the LocateEdgeInfo interface.\n */\nexport function instanceOfLocateEdgeInfo(\n  value: object,\n): value is LocateEdgeInfo {\n  if (!(\"shape\" in value) || value[\"shape\"] === undefined) return false;\n  if (!(\"wayId\" in value) || value[\"wayId\"] === undefined) return false;\n  return true;\n}\n\nexport function LocateEdgeInfoFromJSON(json: any): LocateEdgeInfo {\n  return LocateEdgeInfoFromJSONTyped(json, false);\n}\n\nexport function LocateEdgeInfoFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): LocateEdgeInfo {\n  if (json == null) {\n    return json;\n  }\n  return {\n    meanElevation:\n      json[\"mean_elevation\"] == null ? undefined : json[\"mean_elevation\"],\n    shape: json[\"shape\"],\n    names: json[\"names\"] == null ? undefined : json[\"names\"],\n    bikeNetwork:\n      json[\"bike_network\"] == null\n        ? undefined\n        : BikeNetworkFromJSON(json[\"bike_network\"]),\n    wayId: json[\"way_id\"],\n  };\n}\n\nexport function LocateEdgeInfoToJSON(json: any): LocateEdgeInfo {\n  return LocateEdgeInfoToJSONTyped(json, false);\n}\n\nexport function LocateEdgeInfoToJSONTyped(\n  value?: LocateEdgeInfo | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    mean_elevation: value[\"meanElevation\"],\n    shape: value[\"shape\"],\n    names: value[\"names\"],\n    bike_network: BikeNetworkToJSON(value[\"bikeNetwork\"]),\n    way_id: value[\"wayId\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { LocateEdgeInfo } from \"./LocateEdgeInfo\";\nimport {\n  LocateEdgeInfoFromJSON,\n  LocateEdgeInfoFromJSONTyped,\n  LocateEdgeInfoToJSON,\n  LocateEdgeInfoToJSONTyped,\n} from \"./LocateEdgeInfo\";\nimport type { LocateDetailedEdge } from \"./LocateDetailedEdge\";\nimport {\n  LocateDetailedEdgeFromJSON,\n  LocateDetailedEdgeFromJSONTyped,\n  LocateDetailedEdgeToJSON,\n  LocateDetailedEdgeToJSONTyped,\n} from \"./LocateDetailedEdge\";\nimport type { NodeId } from \"./NodeId\";\nimport {\n  NodeIdFromJSON,\n  NodeIdFromJSONTyped,\n  NodeIdToJSON,\n  NodeIdToJSONTyped,\n} from \"./NodeId\";\n\n/**\n *\n * @export\n * @interface LocateEdge\n */\nexport interface LocateEdge {\n  /**\n   *\n   * @type {NodeId}\n   * @memberof LocateEdge\n   */\n  edgeId?: NodeId;\n  /**\n   * The OSM way ID associated with this edge (absent in verbose response; see the edge info).\n   * @type {number}\n   * @memberof LocateEdge\n   */\n  wayId?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof LocateEdge\n   */\n  correlatedLat: number;\n  /**\n   *\n   * @type {number}\n   * @memberof LocateEdge\n   */\n  correlatedLon: number;\n  /**\n   *\n   * @type {number}\n   * @memberof LocateEdge\n   */\n  percentAlong: number;\n  /**\n   *\n   * @type {string}\n   * @memberof LocateEdge\n   */\n  sideOfStreet: LocateEdgeSideOfStreetEnum;\n  /**\n   * A base64-encoded [OpenLR location reference](https://www.openlr-association.com/fileadmin/user_upload/openlr-whitepaper_v1.5.pdf), for a graph edge of the road network matched by the query.\n   * @type {string}\n   * @memberof LocateEdge\n   */\n  linearReference?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof LocateEdge\n   */\n  outboundReach?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof LocateEdge\n   */\n  heading?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof LocateEdge\n   */\n  inboundReach?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof LocateEdge\n   */\n  distance?: number;\n  /**\n   * Predicted speed information based on historical data. If available, this will include 2016 entries. Each entry represents 5 minutes, where the first entry represents midnight on Monday, the second entry represents 00:05 on Monday, etc.\n   * @type {Array<number>}\n   * @memberof LocateEdge\n   */\n  predictedSpeeds?: Array<number>;\n  /**\n   *\n   * @type {LocateEdgeInfo}\n   * @memberof LocateEdge\n   */\n  edgeInfo?: LocateEdgeInfo;\n  /**\n   *\n   * @type {LocateDetailedEdge}\n   * @memberof LocateEdge\n   */\n  edge?: LocateDetailedEdge;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof LocateEdge\n   */\n  warnings?: Array<string>;\n}\n\n/**\n * @export\n */\nexport const LocateEdgeSideOfStreetEnum = {\n  Left: \"left\",\n  Right: \"right\",\n  Neither: \"neither\",\n} as const;\nexport type LocateEdgeSideOfStreetEnum =\n  (typeof LocateEdgeSideOfStreetEnum)[keyof typeof LocateEdgeSideOfStreetEnum];\n\n/**\n * Check if a given object implements the LocateEdge interface.\n */\nexport function instanceOfLocateEdge(value: object): value is LocateEdge {\n  if (!(\"correlatedLat\" in value) || value[\"correlatedLat\"] === undefined)\n    return false;\n  if (!(\"correlatedLon\" in value) || value[\"correlatedLon\"] === undefined)\n    return false;\n  if (!(\"percentAlong\" in value) || value[\"percentAlong\"] === undefined)\n    return false;\n  if (!(\"sideOfStreet\" in value) || value[\"sideOfStreet\"] === undefined)\n    return false;\n  return true;\n}\n\nexport function LocateEdgeFromJSON(json: any): LocateEdge {\n  return LocateEdgeFromJSONTyped(json, false);\n}\n\nexport function LocateEdgeFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): LocateEdge {\n  if (json == null) {\n    return json;\n  }\n  return {\n    edgeId:\n      json[\"edge_id\"] == null ? undefined : NodeIdFromJSON(json[\"edge_id\"]),\n    wayId: json[\"way_id\"] == null ? undefined : json[\"way_id\"],\n    correlatedLat: json[\"correlated_lat\"],\n    correlatedLon: json[\"correlated_lon\"],\n    percentAlong: json[\"percent_along\"],\n    sideOfStreet: json[\"side_of_street\"],\n    linearReference:\n      json[\"linear_reference\"] == null ? undefined : json[\"linear_reference\"],\n    outboundReach:\n      json[\"outbound_reach\"] == null ? undefined : json[\"outbound_reach\"],\n    heading: json[\"heading\"] == null ? undefined : json[\"heading\"],\n    inboundReach:\n      json[\"inbound_reach\"] == null ? undefined : json[\"inbound_reach\"],\n    distance: json[\"distance\"] == null ? undefined : json[\"distance\"],\n    predictedSpeeds:\n      json[\"predicted_speeds\"] == null ? undefined : json[\"predicted_speeds\"],\n    edgeInfo:\n      json[\"edge_info\"] == null\n        ? undefined\n        : LocateEdgeInfoFromJSON(json[\"edge_info\"]),\n    edge:\n      json[\"edge\"] == null\n        ? undefined\n        : LocateDetailedEdgeFromJSON(json[\"edge\"]),\n    warnings: json[\"warnings\"] == null ? undefined : json[\"warnings\"],\n  };\n}\n\nexport function LocateEdgeToJSON(json: any): LocateEdge {\n  return LocateEdgeToJSONTyped(json, false);\n}\n\nexport function LocateEdgeToJSONTyped(\n  value?: LocateEdge | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    edge_id: NodeIdToJSON(value[\"edgeId\"]),\n    way_id: value[\"wayId\"],\n    correlated_lat: value[\"correlatedLat\"],\n    correlated_lon: value[\"correlatedLon\"],\n    percent_along: value[\"percentAlong\"],\n    side_of_street: value[\"sideOfStreet\"],\n    linear_reference: value[\"linearReference\"],\n    outbound_reach: value[\"outboundReach\"],\n    heading: value[\"heading\"],\n    inbound_reach: value[\"inboundReach\"],\n    distance: value[\"distance\"],\n    predicted_speeds: value[\"predictedSpeeds\"],\n    edge_info: LocateEdgeInfoToJSON(value[\"edgeInfo\"]),\n    edge: LocateDetailedEdgeToJSON(value[\"edge\"]),\n    warnings: value[\"warnings\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { Administrative } from \"./Administrative\";\nimport {\n  AdministrativeFromJSON,\n  AdministrativeFromJSONTyped,\n  AdministrativeToJSON,\n  AdministrativeToJSONTyped,\n} from \"./Administrative\";\nimport type { NodeType } from \"./NodeType\";\nimport {\n  NodeTypeFromJSON,\n  NodeTypeFromJSONTyped,\n  NodeTypeToJSON,\n  NodeTypeToJSONTyped,\n} from \"./NodeType\";\nimport type { Access } from \"./Access\";\nimport {\n  AccessFromJSON,\n  AccessFromJSONTyped,\n  AccessToJSON,\n  AccessToJSONTyped,\n} from \"./Access\";\nimport type { NodeId } from \"./NodeId\";\nimport {\n  NodeIdFromJSON,\n  NodeIdFromJSONTyped,\n  NodeIdToJSON,\n  NodeIdToJSONTyped,\n} from \"./NodeId\";\n\n/**\n *\n * @export\n * @interface LocateNode\n */\nexport interface LocateNode {\n  /**\n   * The latitude of a point in the shape.\n   * @type {number}\n   * @memberof LocateNode\n   */\n  lat: number;\n  /**\n   * The longitude of a point in the shape.\n   * @type {number}\n   * @memberof LocateNode\n   */\n  lon: number;\n  /**\n   *\n   * @type {boolean}\n   * @memberof LocateNode\n   */\n  trafficSignal?: boolean;\n  /**\n   *\n   * @type {NodeType}\n   * @memberof LocateNode\n   */\n  type?: NodeType;\n  /**\n   *\n   * @type {NodeId}\n   * @memberof LocateNode\n   */\n  nodeId?: NodeId;\n  /**\n   *\n   * @type {Access}\n   * @memberof LocateNode\n   */\n  access?: Access;\n  /**\n   *\n   * @type {number}\n   * @memberof LocateNode\n   */\n  edgeCount?: number;\n  /**\n   *\n   * @type {Administrative}\n   * @memberof LocateNode\n   */\n  administrative?: Administrative;\n  /**\n   *\n   * @type {string}\n   * @memberof LocateNode\n   */\n  intersectionType?: LocateNodeIntersectionTypeEnum;\n  /**\n   *\n   * @type {number}\n   * @memberof LocateNode\n   */\n  density?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof LocateNode\n   */\n  localEdgeCount?: number;\n  /**\n   *\n   * @type {boolean}\n   * @memberof LocateNode\n   */\n  modeChange?: boolean;\n}\n\n/**\n * @export\n */\nexport const LocateNodeIntersectionTypeEnum = {\n  Regular: \"regular\",\n  False: \"false\",\n  DeadEnd: \"dead-end\",\n  Fork: \"fork\",\n} as const;\nexport type LocateNodeIntersectionTypeEnum =\n  (typeof LocateNodeIntersectionTypeEnum)[keyof typeof LocateNodeIntersectionTypeEnum];\n\n/**\n * Check if a given object implements the LocateNode interface.\n */\nexport function instanceOfLocateNode(value: object): value is LocateNode {\n  if (!(\"lat\" in value) || value[\"lat\"] === undefined) return false;\n  if (!(\"lon\" in value) || value[\"lon\"] === undefined) return false;\n  return true;\n}\n\nexport function LocateNodeFromJSON(json: any): LocateNode {\n  return LocateNodeFromJSONTyped(json, false);\n}\n\nexport function LocateNodeFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): LocateNode {\n  if (json == null) {\n    return json;\n  }\n  return {\n    lat: json[\"lat\"],\n    lon: json[\"lon\"],\n    trafficSignal:\n      json[\"traffic_signal\"] == null ? undefined : json[\"traffic_signal\"],\n    type: json[\"type\"] == null ? undefined : NodeTypeFromJSON(json[\"type\"]),\n    nodeId:\n      json[\"node_id\"] == null ? undefined : NodeIdFromJSON(json[\"node_id\"]),\n    access: json[\"access\"] == null ? undefined : AccessFromJSON(json[\"access\"]),\n    edgeCount: json[\"edge_count\"] == null ? undefined : json[\"edge_count\"],\n    administrative:\n      json[\"administrative\"] == null\n        ? undefined\n        : AdministrativeFromJSON(json[\"administrative\"]),\n    intersectionType:\n      json[\"intersection_type\"] == null ? undefined : json[\"intersection_type\"],\n    density: json[\"density\"] == null ? undefined : json[\"density\"],\n    localEdgeCount:\n      json[\"local_edge_count\"] == null ? undefined : json[\"local_edge_count\"],\n    modeChange: json[\"mode_change\"] == null ? undefined : json[\"mode_change\"],\n  };\n}\n\nexport function LocateNodeToJSON(json: any): LocateNode {\n  return LocateNodeToJSONTyped(json, false);\n}\n\nexport function LocateNodeToJSONTyped(\n  value?: LocateNode | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    lat: value[\"lat\"],\n    lon: value[\"lon\"],\n    traffic_signal: value[\"trafficSignal\"],\n    type: NodeTypeToJSON(value[\"type\"]),\n    node_id: NodeIdToJSON(value[\"nodeId\"]),\n    access: AccessToJSON(value[\"access\"]),\n    edge_count: value[\"edgeCount\"],\n    administrative: AdministrativeToJSON(value[\"administrative\"]),\n    intersection_type: value[\"intersectionType\"],\n    density: value[\"density\"],\n    local_edge_count: value[\"localEdgeCount\"],\n    mode_change: value[\"modeChange\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { LocateEdge } from \"./LocateEdge\";\nimport {\n  LocateEdgeFromJSON,\n  LocateEdgeFromJSONTyped,\n  LocateEdgeToJSON,\n  LocateEdgeToJSONTyped,\n} from \"./LocateEdge\";\nimport type { LocateNode } from \"./LocateNode\";\nimport {\n  LocateNodeFromJSON,\n  LocateNodeFromJSONTyped,\n  LocateNodeToJSON,\n  LocateNodeToJSONTyped,\n} from \"./LocateNode\";\n\n/**\n *\n * @export\n * @interface LocateObject\n */\nexport interface LocateObject {\n  /**\n   * An identifier to disambiguate requests (echoed by the server).\n   * @type {string}\n   * @memberof LocateObject\n   */\n  id?: string;\n  /**\n   * The input (searched) latitude.\n   * @type {number}\n   * @memberof LocateObject\n   */\n  inputLat?: number;\n  /**\n   * The input (searched) longitude.\n   * @type {number}\n   * @memberof LocateObject\n   */\n  inputLon?: number;\n  /**\n   *\n   * @type {Array<LocateNode>}\n   * @memberof LocateObject\n   */\n  nodes?: Array<LocateNode> | null;\n  /**\n   *\n   * @type {Array<LocateEdge>}\n   * @memberof LocateObject\n   */\n  edges?: Array<LocateEdge> | null;\n}\n\n/**\n * Check if a given object implements the LocateObject interface.\n */\nexport function instanceOfLocateObject(value: object): value is LocateObject {\n  return true;\n}\n\nexport function LocateObjectFromJSON(json: any): LocateObject {\n  return LocateObjectFromJSONTyped(json, false);\n}\n\nexport function LocateObjectFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): LocateObject {\n  if (json == null) {\n    return json;\n  }\n  return {\n    id: json[\"id\"] == null ? undefined : json[\"id\"],\n    inputLat: json[\"input_lat\"] == null ? undefined : json[\"input_lat\"],\n    inputLon: json[\"input_lon\"] == null ? undefined : json[\"input_lon\"],\n    nodes:\n      json[\"nodes\"] == null\n        ? undefined\n        : (json[\"nodes\"] as Array<any>).map(LocateNodeFromJSON),\n    edges:\n      json[\"edges\"] == null\n        ? undefined\n        : (json[\"edges\"] as Array<any>).map(LocateEdgeFromJSON),\n  };\n}\n\nexport function LocateObjectToJSON(json: any): LocateObject {\n  return LocateObjectToJSONTyped(json, false);\n}\n\nexport function LocateObjectToJSONTyped(\n  value?: LocateObject | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    id: value[\"id\"],\n    input_lat: value[\"inputLat\"],\n    input_lon: value[\"inputLon\"],\n    nodes:\n      value[\"nodes\"] == null\n        ? undefined\n        : (value[\"nodes\"] as Array<any>).map(LocateNodeToJSON),\n    edges:\n      value[\"edges\"] == null\n        ? undefined\n        : (value[\"edges\"] as Array<any>).map(LocateEdgeToJSON),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface ManeuverSignElement\n */\nexport interface ManeuverSignElement {\n  /**\n   * The interchange sign text (varies based on the context; see the `maneuverSign` schema).\n   * @type {string}\n   * @memberof ManeuverSignElement\n   */\n  text: string;\n  /**\n   * True if the sign is a route number.\n   * @type {boolean}\n   * @memberof ManeuverSignElement\n   */\n  isRouteNumber?: boolean;\n  /**\n   * The frequency of this sign element within a set a consecutive signs.\n   * @type {number}\n   * @memberof ManeuverSignElement\n   */\n  consecutiveCount?: number;\n}\n\n/**\n * Check if a given object implements the ManeuverSignElement interface.\n */\nexport function instanceOfManeuverSignElement(\n  value: object,\n): value is ManeuverSignElement {\n  if (!(\"text\" in value) || value[\"text\"] === undefined) return false;\n  return true;\n}\n\nexport function ManeuverSignElementFromJSON(json: any): ManeuverSignElement {\n  return ManeuverSignElementFromJSONTyped(json, false);\n}\n\nexport function ManeuverSignElementFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): ManeuverSignElement {\n  if (json == null) {\n    return json;\n  }\n  return {\n    text: json[\"text\"],\n    isRouteNumber:\n      json[\"is_route_number\"] == null ? undefined : json[\"is_route_number\"],\n    consecutiveCount:\n      json[\"consecutive_count\"] == null ? undefined : json[\"consecutive_count\"],\n  };\n}\n\nexport function ManeuverSignElementToJSON(json: any): ManeuverSignElement {\n  return ManeuverSignElementToJSONTyped(json, false);\n}\n\nexport function ManeuverSignElementToJSONTyped(\n  value?: ManeuverSignElement | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    text: value[\"text\"],\n    is_route_number: value[\"isRouteNumber\"],\n    consecutive_count: value[\"consecutiveCount\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { ManeuverSignElement } from \"./ManeuverSignElement\";\nimport {\n  ManeuverSignElementFromJSON,\n  ManeuverSignElementFromJSONTyped,\n  ManeuverSignElementToJSON,\n  ManeuverSignElementToJSONTyped,\n} from \"./ManeuverSignElement\";\n\n/**\n *\n * @export\n * @interface ManeuverSign\n */\nexport interface ManeuverSign {\n  /**\n   * A list of exit number elements. This is typically just a single value.\n   * @type {Array<ManeuverSignElement>}\n   * @memberof ManeuverSign\n   */\n  exitNumberElements?: Array<ManeuverSignElement>;\n  /**\n   * A list of exit branch elements. The text is a subsequent road name or route number after the sign.\n   * @type {Array<ManeuverSignElement>}\n   * @memberof ManeuverSign\n   */\n  exitBranchElements?: Array<ManeuverSignElement>;\n  /**\n   * A list of exit name elements. The text is the interchange identifier (used more frequently outside the US).\n   * @type {Array<ManeuverSignElement>}\n   * @memberof ManeuverSign\n   */\n  exitTowardElements?: Array<ManeuverSignElement>;\n  /**\n   * A list of exit name elements. The text is the location where the road ahead goes (typically a city, but occasionally a road name or route number).\n   * @type {Array<ManeuverSignElement>}\n   * @memberof ManeuverSign\n   */\n  exitNameElements?: Array<ManeuverSignElement>;\n}\n\n/**\n * Check if a given object implements the ManeuverSign interface.\n */\nexport function instanceOfManeuverSign(value: object): value is ManeuverSign {\n  return true;\n}\n\nexport function ManeuverSignFromJSON(json: any): ManeuverSign {\n  return ManeuverSignFromJSONTyped(json, false);\n}\n\nexport function ManeuverSignFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): ManeuverSign {\n  if (json == null) {\n    return json;\n  }\n  return {\n    exitNumberElements:\n      json[\"exit_number_elements\"] == null\n        ? undefined\n        : (json[\"exit_number_elements\"] as Array<any>).map(\n            ManeuverSignElementFromJSON,\n          ),\n    exitBranchElements:\n      json[\"exit_branch_elements\"] == null\n        ? undefined\n        : (json[\"exit_branch_elements\"] as Array<any>).map(\n            ManeuverSignElementFromJSON,\n          ),\n    exitTowardElements:\n      json[\"exit_toward_elements\"] == null\n        ? undefined\n        : (json[\"exit_toward_elements\"] as Array<any>).map(\n            ManeuverSignElementFromJSON,\n          ),\n    exitNameElements:\n      json[\"exit_name_elements\"] == null\n        ? undefined\n        : (json[\"exit_name_elements\"] as Array<any>).map(\n            ManeuverSignElementFromJSON,\n          ),\n  };\n}\n\nexport function ManeuverSignToJSON(json: any): ManeuverSign {\n  return ManeuverSignToJSONTyped(json, false);\n}\n\nexport function ManeuverSignToJSONTyped(\n  value?: ManeuverSign | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    exit_number_elements:\n      value[\"exitNumberElements\"] == null\n        ? undefined\n        : (value[\"exitNumberElements\"] as Array<any>).map(\n            ManeuverSignElementToJSON,\n          ),\n    exit_branch_elements:\n      value[\"exitBranchElements\"] == null\n        ? undefined\n        : (value[\"exitBranchElements\"] as Array<any>).map(\n            ManeuverSignElementToJSON,\n          ),\n    exit_toward_elements:\n      value[\"exitTowardElements\"] == null\n        ? undefined\n        : (value[\"exitTowardElements\"] as Array<any>).map(\n            ManeuverSignElementToJSON,\n          ),\n    exit_name_elements:\n      value[\"exitNameElements\"] == null\n        ? undefined\n        : (value[\"exitNameElements\"] as Array<any>).map(\n            ManeuverSignElementToJSON,\n          ),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface MapMatchTraceOptions\n */\nexport interface MapMatchTraceOptions {\n  /**\n   * The search radius, in meters, when trying to match each trace point.\n   * @type {number}\n   * @memberof MapMatchTraceOptions\n   */\n  searchRadius?: number;\n  /**\n   * The accuracy of the GPS, in meters.\n   * @type {number}\n   * @memberof MapMatchTraceOptions\n   */\n  gpsAccuracy?: number;\n  /**\n   * The breaking distance, in meters, between trace points.\n   * @type {number}\n   * @memberof MapMatchTraceOptions\n   */\n  breakageDistance?: number;\n  /**\n   * The interpolation distance, in meters, beyond which trace points are merged together.\n   * @type {number}\n   * @memberof MapMatchTraceOptions\n   */\n  interpolationDistance?: number;\n  /**\n   * Penalizes turns from one road segment to next. For a pedestrian trace, you may see a back-and-forth motion along the streets of your path with the default settings. Try increasing the turn penalty factor to 500 to reduce jitter in the output. Note that if GPS accuracy is already good, increasing this above the default will usually negatively affect the quality of map matching.\n   * @type {number}\n   * @memberof MapMatchTraceOptions\n   */\n  turnPenaltyFactor?: number;\n}\n\n/**\n * Check if a given object implements the MapMatchTraceOptions interface.\n */\nexport function instanceOfMapMatchTraceOptions(\n  value: object,\n): value is MapMatchTraceOptions {\n  return true;\n}\n\nexport function MapMatchTraceOptionsFromJSON(json: any): MapMatchTraceOptions {\n  return MapMatchTraceOptionsFromJSONTyped(json, false);\n}\n\nexport function MapMatchTraceOptionsFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): MapMatchTraceOptions {\n  if (json == null) {\n    return json;\n  }\n  return {\n    searchRadius:\n      json[\"search_radius\"] == null ? undefined : json[\"search_radius\"],\n    gpsAccuracy:\n      json[\"gps_accuracy\"] == null ? undefined : json[\"gps_accuracy\"],\n    breakageDistance:\n      json[\"breakage_distance\"] == null ? undefined : json[\"breakage_distance\"],\n    interpolationDistance:\n      json[\"interpolation_distance\"] == null\n        ? undefined\n        : json[\"interpolation_distance\"],\n    turnPenaltyFactor:\n      json[\"turn_penalty_factor\"] == null\n        ? undefined\n        : json[\"turn_penalty_factor\"],\n  };\n}\n\nexport function MapMatchTraceOptionsToJSON(json: any): MapMatchTraceOptions {\n  return MapMatchTraceOptionsToJSONTyped(json, false);\n}\n\nexport function MapMatchTraceOptionsToJSONTyped(\n  value?: MapMatchTraceOptions | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    search_radius: value[\"searchRadius\"],\n    gps_accuracy: value[\"gpsAccuracy\"],\n    breakage_distance: value[\"breakageDistance\"],\n    interpolation_distance: value[\"interpolationDistance\"],\n    turn_penalty_factor: value[\"turnPenaltyFactor\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { CostingOptions } from \"./CostingOptions\";\nimport {\n  CostingOptionsFromJSON,\n  CostingOptionsFromJSONTyped,\n  CostingOptionsToJSON,\n  CostingOptionsToJSONTyped,\n} from \"./CostingOptions\";\nimport type { MapMatchCostingModel } from \"./MapMatchCostingModel\";\nimport {\n  MapMatchCostingModelFromJSON,\n  MapMatchCostingModelFromJSONTyped,\n  MapMatchCostingModelToJSON,\n  MapMatchCostingModelToJSONTyped,\n} from \"./MapMatchCostingModel\";\nimport type { MapMatchTraceOptions } from \"./MapMatchTraceOptions\";\nimport {\n  MapMatchTraceOptionsFromJSON,\n  MapMatchTraceOptionsFromJSONTyped,\n  MapMatchTraceOptionsToJSON,\n  MapMatchTraceOptionsToJSONTyped,\n} from \"./MapMatchTraceOptions\";\nimport type { AnnotationFilters } from \"./AnnotationFilters\";\nimport {\n  AnnotationFiltersFromJSON,\n  AnnotationFiltersFromJSONTyped,\n  AnnotationFiltersToJSON,\n  AnnotationFiltersToJSONTyped,\n} from \"./AnnotationFilters\";\nimport type { DistanceUnit } from \"./DistanceUnit\";\nimport {\n  DistanceUnitFromJSON,\n  DistanceUnitFromJSONTyped,\n  DistanceUnitToJSON,\n  DistanceUnitToJSONTyped,\n} from \"./DistanceUnit\";\nimport type { RoutingLanguages } from \"./RoutingLanguages\";\nimport {\n  RoutingLanguagesFromJSON,\n  RoutingLanguagesFromJSONTyped,\n  RoutingLanguagesToJSON,\n  RoutingLanguagesToJSONTyped,\n} from \"./RoutingLanguages\";\nimport type { MapMatchWaypoint } from \"./MapMatchWaypoint\";\nimport {\n  MapMatchWaypointFromJSON,\n  MapMatchWaypointFromJSONTyped,\n  MapMatchWaypointToJSON,\n  MapMatchWaypointToJSONTyped,\n} from \"./MapMatchWaypoint\";\n\n/**\n *\n * @export\n * @interface MapMatchRequest\n */\nexport interface MapMatchRequest {\n  /**\n   * An identifier to disambiguate requests (echoed by the server).\n   * @type {string}\n   * @memberof MapMatchRequest\n   */\n  id?: string;\n  /**\n   * REQUIRED if `encoded_polyline` is not present. Note that `break` type locations are only supported when `shape_match` is set to `map_match`.\n   * @type {Array<MapMatchWaypoint>}\n   * @memberof MapMatchRequest\n   */\n  shape?: Array<MapMatchWaypoint>;\n  /**\n   * REQUIRED if `shape` is not present. An encoded polyline (https://developers.google.com/maps/documentation/utilities/polylinealgorithm). Note that the polyline must be encoded with 6 digits of precision rather than the default 5!\n   * @type {string}\n   * @memberof MapMatchRequest\n   */\n  encodedPolyline?: string;\n  /**\n   *\n   * @type {MapMatchCostingModel}\n   * @memberof MapMatchRequest\n   */\n  costing: MapMatchCostingModel;\n  /**\n   *\n   * @type {CostingOptions}\n   * @memberof MapMatchRequest\n   */\n  costingOptions?: CostingOptions;\n  /**\n   * Three snapping modes provide some control over how the map matching occurs. `edge_walk` is fast, but requires extremely precise data that matches the route graph almost perfectly. `map_snap` can handle significantly noisier data, but is very expensive. `walk_or_snap`, the default, tries to use edge walking first and falls back to map matching if edge walking fails.\n   * In general, you should not need to change this parameter unless you want to trace a multi-leg route with multiple `break` locations in the `shape`.\n   * @type {string}\n   * @memberof MapMatchRequest\n   */\n  shapeMatch?: MapMatchRequestShapeMatchEnum;\n  /**\n   *\n   * @type {DistanceUnit}\n   * @memberof MapMatchRequest\n   */\n  units?: DistanceUnit;\n  /**\n   *\n   * @type {RoutingLanguages}\n   * @memberof MapMatchRequest\n   */\n  language?: RoutingLanguages;\n  /**\n   * The level of directional narrative to include. Locations and times will always be returned, but narrative generation verbosity can be controlled with this parameter.\n   * @type {string}\n   * @memberof MapMatchRequest\n   */\n  directionsType?: MapMatchRequestDirectionsTypeEnum;\n  /**\n   * The output response format. The default JSON format is extremely compact and ideal for web or data-constrained use cases where you want to fetch additional attributes on demand in small chunks. The OSRM format is much richer and is configurable with significantly more info for turn-by-turn navigation use cases.\n   * @type {string}\n   * @memberof MapMatchRequest\n   */\n  format?: MapMatchRequestFormatEnum;\n  /**\n   * Optionally includes helpful banners with timing information for turn-by-turn navigation. This is only available in the OSRM format.\n   * @type {boolean}\n   * @memberof MapMatchRequest\n   */\n  bannerInstructions?: boolean;\n  /**\n   * Optionally includes voice instructions with timing information for turn-by-turn navigation. This is only available in the OSRM format.\n   * @type {boolean}\n   * @memberof MapMatchRequest\n   */\n  voiceInstructions?: boolean;\n  /**\n   *\n   * @type {AnnotationFilters}\n   * @memberof MapMatchRequest\n   */\n  filters?: AnnotationFilters;\n  /**\n   * The timestamp at the start of the trace. Combined with `durations`, this provides a way to include timing information for an `encoded_polyline` trace.\n   * @type {number}\n   * @memberof MapMatchRequest\n   */\n  beginTime?: number;\n  /**\n   * A list of durations (in seconds) between each successive pair of points in a polyline.\n   * @type {number}\n   * @memberof MapMatchRequest\n   */\n  durations?: number;\n  /**\n   * If true, the input timestamps or durations should be used when computing elapsed time for each edge along the matched path rather than the routing algorithm estimates.\n   * @type {boolean}\n   * @memberof MapMatchRequest\n   */\n  useTimestamps?: boolean;\n  /**\n   *\n   * @type {MapMatchTraceOptions}\n   * @memberof MapMatchRequest\n   */\n  traceOptions?: MapMatchTraceOptions;\n  /**\n   * If true, the response will include a `linear_references` value that contains an array of base64-encoded [OpenLR location references](https://www.openlr-association.com/fileadmin/user_upload/openlr-whitepaper_v1.5.pdf), one for each graph edge of the road network matched by the trace.\n   * @type {boolean}\n   * @memberof MapMatchRequest\n   */\n  linearReferences?: boolean;\n  /**\n   * If greater than zero, attempts to include elevation along the route at regular intervals. The \"native\" internal resolution is 30m, so we recommend you use this when possible. This number is interpreted as either meters or feet depending on the unit parameter.\n   * Elevation for route sections containing a bridge or tunnel is interpolated linearly. This doesn't always match the true elevation of the bridge/tunnel, but it prevents sharp artifacts from the surrounding terrain. This functionality is unique to the routing endpoints and is not available via the elevation API.\n   * NOTE: This has no effect on the OSRM response format.\n   * @type {number}\n   * @memberof MapMatchRequest\n   */\n  elevationInterval?: number;\n}\n\n/**\n * @export\n */\nexport const MapMatchRequestShapeMatchEnum = {\n  EdgeWalk: \"edge_walk\",\n  MapSnap: \"map_snap\",\n  WalkOrSnap: \"walk_or_snap\",\n} as const;\nexport type MapMatchRequestShapeMatchEnum =\n  (typeof MapMatchRequestShapeMatchEnum)[keyof typeof MapMatchRequestShapeMatchEnum];\n\n/**\n * @export\n */\nexport const MapMatchRequestDirectionsTypeEnum = {\n  None: \"none\",\n  Maneuvers: \"maneuvers\",\n  Instructions: \"instructions\",\n} as const;\nexport type MapMatchRequestDirectionsTypeEnum =\n  (typeof MapMatchRequestDirectionsTypeEnum)[keyof typeof MapMatchRequestDirectionsTypeEnum];\n\n/**\n * @export\n */\nexport const MapMatchRequestFormatEnum = {\n  Json: \"json\",\n  Osrm: \"osrm\",\n} as const;\nexport type MapMatchRequestFormatEnum =\n  (typeof MapMatchRequestFormatEnum)[keyof typeof MapMatchRequestFormatEnum];\n\n/**\n * Check if a given object implements the MapMatchRequest interface.\n */\nexport function instanceOfMapMatchRequest(\n  value: object,\n): value is MapMatchRequest {\n  if (!(\"costing\" in value) || value[\"costing\"] === undefined) return false;\n  return true;\n}\n\nexport function MapMatchRequestFromJSON(json: any): MapMatchRequest {\n  return MapMatchRequestFromJSONTyped(json, false);\n}\n\nexport function MapMatchRequestFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): MapMatchRequest {\n  if (json == null) {\n    return json;\n  }\n  return {\n    id: json[\"id\"] == null ? undefined : json[\"id\"],\n    shape:\n      json[\"shape\"] == null\n        ? undefined\n        : (json[\"shape\"] as Array<any>).map(MapMatchWaypointFromJSON),\n    encodedPolyline:\n      json[\"encoded_polyline\"] == null ? undefined : json[\"encoded_polyline\"],\n    costing: MapMatchCostingModelFromJSON(json[\"costing\"]),\n    costingOptions:\n      json[\"costing_options\"] == null\n        ? undefined\n        : CostingOptionsFromJSON(json[\"costing_options\"]),\n    shapeMatch: json[\"shape_match\"] == null ? undefined : json[\"shape_match\"],\n    units:\n      json[\"units\"] == null ? undefined : DistanceUnitFromJSON(json[\"units\"]),\n    language:\n      json[\"language\"] == null\n        ? undefined\n        : RoutingLanguagesFromJSON(json[\"language\"]),\n    directionsType:\n      json[\"directions_type\"] == null ? undefined : json[\"directions_type\"],\n    format: json[\"format\"] == null ? undefined : json[\"format\"],\n    bannerInstructions:\n      json[\"banner_instructions\"] == null\n        ? undefined\n        : json[\"banner_instructions\"],\n    voiceInstructions:\n      json[\"voice_instructions\"] == null\n        ? undefined\n        : json[\"voice_instructions\"],\n    filters:\n      json[\"filters\"] == null\n        ? undefined\n        : AnnotationFiltersFromJSON(json[\"filters\"]),\n    beginTime: json[\"begin_time\"] == null ? undefined : json[\"begin_time\"],\n    durations: json[\"durations\"] == null ? undefined : json[\"durations\"],\n    useTimestamps:\n      json[\"use_timestamps\"] == null ? undefined : json[\"use_timestamps\"],\n    traceOptions:\n      json[\"trace_options\"] == null\n        ? undefined\n        : MapMatchTraceOptionsFromJSON(json[\"trace_options\"]),\n    linearReferences:\n      json[\"linear_references\"] == null ? undefined : json[\"linear_references\"],\n    elevationInterval:\n      json[\"elevation_interval\"] == null\n        ? undefined\n        : json[\"elevation_interval\"],\n  };\n}\n\nexport function MapMatchRequestToJSON(json: any): MapMatchRequest {\n  return MapMatchRequestToJSONTyped(json, false);\n}\n\nexport function MapMatchRequestToJSONTyped(\n  value?: MapMatchRequest | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    id: value[\"id\"],\n    shape:\n      value[\"shape\"] == null\n        ? undefined\n        : (value[\"shape\"] as Array<any>).map(MapMatchWaypointToJSON),\n    encoded_polyline: value[\"encodedPolyline\"],\n    costing: MapMatchCostingModelToJSON(value[\"costing\"]),\n    costing_options: CostingOptionsToJSON(value[\"costingOptions\"]),\n    shape_match: value[\"shapeMatch\"],\n    units: DistanceUnitToJSON(value[\"units\"]),\n    language: RoutingLanguagesToJSON(value[\"language\"]),\n    directions_type: value[\"directionsType\"],\n    format: value[\"format\"],\n    banner_instructions: value[\"bannerInstructions\"],\n    voice_instructions: value[\"voiceInstructions\"],\n    filters: AnnotationFiltersToJSON(value[\"filters\"]),\n    begin_time: value[\"beginTime\"],\n    durations: value[\"durations\"],\n    use_timestamps: value[\"useTimestamps\"],\n    trace_options: MapMatchTraceOptionsToJSON(value[\"traceOptions\"]),\n    linear_references: value[\"linearReferences\"],\n    elevation_interval: value[\"elevationInterval\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface RoutingResponseWaypoint\n */\nexport interface RoutingResponseWaypoint {\n  /**\n   * The latitude of a point in the shape.\n   * @type {number}\n   * @memberof RoutingResponseWaypoint\n   */\n  lat: number;\n  /**\n   * The longitude of a point in the shape.\n   * @type {number}\n   * @memberof RoutingResponseWaypoint\n   */\n  lon: number;\n  /**\n   * A `break` represents the start or end of a leg, and allows reversals. A `through` location is an intermediate waypoint that must be visited between `break`s, but at which reversals are not allowed. A `via` is similar to a `through` except that reversals are allowed. A `break_through` is similar to a `break` in that it can be the start/end of a leg, but does not allow reversals. Defaults to `break`.\n   * @type {string}\n   * @memberof RoutingResponseWaypoint\n   */\n  type?: RoutingResponseWaypointTypeEnum;\n  /**\n   * The original index of the location (locations may be reordered for optimized routes)\n   * @type {number}\n   * @memberof RoutingResponseWaypoint\n   */\n  originalIndex?: number;\n}\n\n/**\n * @export\n */\nexport const RoutingResponseWaypointTypeEnum = {\n  Break: \"break\",\n  Through: \"through\",\n  Via: \"via\",\n  BreakThrough: \"break_through\",\n} as const;\nexport type RoutingResponseWaypointTypeEnum =\n  (typeof RoutingResponseWaypointTypeEnum)[keyof typeof RoutingResponseWaypointTypeEnum];\n\n/**\n * Check if a given object implements the RoutingResponseWaypoint interface.\n */\nexport function instanceOfRoutingResponseWaypoint(\n  value: object,\n): value is RoutingResponseWaypoint {\n  if (!(\"lat\" in value) || value[\"lat\"] === undefined) return false;\n  if (!(\"lon\" in value) || value[\"lon\"] === undefined) return false;\n  return true;\n}\n\nexport function RoutingResponseWaypointFromJSON(\n  json: any,\n): RoutingResponseWaypoint {\n  return RoutingResponseWaypointFromJSONTyped(json, false);\n}\n\nexport function RoutingResponseWaypointFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): RoutingResponseWaypoint {\n  if (json == null) {\n    return json;\n  }\n  return {\n    lat: json[\"lat\"],\n    lon: json[\"lon\"],\n    type: json[\"type\"] == null ? undefined : json[\"type\"],\n    originalIndex:\n      json[\"original_index\"] == null ? undefined : json[\"original_index\"],\n  };\n}\n\nexport function RoutingResponseWaypointToJSON(\n  json: any,\n): RoutingResponseWaypoint {\n  return RoutingResponseWaypointToJSONTyped(json, false);\n}\n\nexport function RoutingResponseWaypointToJSONTyped(\n  value?: RoutingResponseWaypoint | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    lat: value[\"lat\"],\n    lon: value[\"lon\"],\n    type: value[\"type\"],\n    original_index: value[\"originalIndex\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface RouteSummary\n */\nexport interface RouteSummary {\n  /**\n   * The estimated travel time, in seconds\n   * @type {number}\n   * @memberof RouteSummary\n   */\n  time: number;\n  /**\n   * The estimated travel distance, in `units` (km or mi)\n   * @type {number}\n   * @memberof RouteSummary\n   */\n  length: number;\n  /**\n   * The minimum latitude of the bounding box containing the route.\n   * @type {number}\n   * @memberof RouteSummary\n   */\n  minLat: number;\n  /**\n   * The maximum latitude of the bounding box containing the route.\n   * @type {number}\n   * @memberof RouteSummary\n   */\n  maxLat: number;\n  /**\n   * The minimum longitude of the bounding box containing the route.\n   * @type {number}\n   * @memberof RouteSummary\n   */\n  minLon: number;\n  /**\n   * The maximum longitude of the bounding box containing the route.\n   * @type {number}\n   * @memberof RouteSummary\n   */\n  maxLon: number;\n}\n\n/**\n * Check if a given object implements the RouteSummary interface.\n */\nexport function instanceOfRouteSummary(value: object): value is RouteSummary {\n  if (!(\"time\" in value) || value[\"time\"] === undefined) return false;\n  if (!(\"length\" in value) || value[\"length\"] === undefined) return false;\n  if (!(\"minLat\" in value) || value[\"minLat\"] === undefined) return false;\n  if (!(\"maxLat\" in value) || value[\"maxLat\"] === undefined) return false;\n  if (!(\"minLon\" in value) || value[\"minLon\"] === undefined) return false;\n  if (!(\"maxLon\" in value) || value[\"maxLon\"] === undefined) return false;\n  return true;\n}\n\nexport function RouteSummaryFromJSON(json: any): RouteSummary {\n  return RouteSummaryFromJSONTyped(json, false);\n}\n\nexport function RouteSummaryFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): RouteSummary {\n  if (json == null) {\n    return json;\n  }\n  return {\n    time: json[\"time\"],\n    length: json[\"length\"],\n    minLat: json[\"min_lat\"],\n    maxLat: json[\"max_lat\"],\n    minLon: json[\"min_lon\"],\n    maxLon: json[\"max_lon\"],\n  };\n}\n\nexport function RouteSummaryToJSON(json: any): RouteSummary {\n  return RouteSummaryToJSONTyped(json, false);\n}\n\nexport function RouteSummaryToJSONTyped(\n  value?: RouteSummary | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    time: value[\"time\"],\n    length: value[\"length\"],\n    min_lat: value[\"minLat\"],\n    max_lat: value[\"maxLat\"],\n    min_lon: value[\"minLon\"],\n    max_lon: value[\"maxLon\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n *\n * @export\n */\nexport const RoutingLongUnits = {\n  Miles: \"miles\",\n  Kilometers: \"kilometers\",\n} as const;\nexport type RoutingLongUnits =\n  (typeof RoutingLongUnits)[keyof typeof RoutingLongUnits];\n\nexport function instanceOfRoutingLongUnits(value: any): boolean {\n  for (const key in RoutingLongUnits) {\n    if (Object.prototype.hasOwnProperty.call(RoutingLongUnits, key)) {\n      if (RoutingLongUnits[key as keyof typeof RoutingLongUnits] === value) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function RoutingLongUnitsFromJSON(json: any): RoutingLongUnits {\n  return RoutingLongUnitsFromJSONTyped(json, false);\n}\n\nexport function RoutingLongUnitsFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): RoutingLongUnits {\n  return json as RoutingLongUnits;\n}\n\nexport function RoutingLongUnitsToJSON(value?: RoutingLongUnits | null): any {\n  return value as any;\n}\n\nexport function RoutingLongUnitsToJSONTyped(\n  value: any,\n  ignoreDiscriminator: boolean,\n): RoutingLongUnits {\n  return value as RoutingLongUnits;\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n *\n * @export\n */\nexport const TravelMode = {\n  Drive: \"drive\",\n  Pedestrian: \"pedestrian\",\n  Bicycle: \"bicycle\",\n  Transit: \"transit\",\n} as const;\nexport type TravelMode = (typeof TravelMode)[keyof typeof TravelMode];\n\nexport function instanceOfTravelMode(value: any): boolean {\n  for (const key in TravelMode) {\n    if (Object.prototype.hasOwnProperty.call(TravelMode, key)) {\n      if (TravelMode[key as keyof typeof TravelMode] === value) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function TravelModeFromJSON(json: any): TravelMode {\n  return TravelModeFromJSONTyped(json, false);\n}\n\nexport function TravelModeFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): TravelMode {\n  return json as TravelMode;\n}\n\nexport function TravelModeToJSON(value?: TravelMode | null): any {\n  return value as any;\n}\n\nexport function TravelModeToJSONTyped(\n  value: any,\n  ignoreDiscriminator: boolean,\n): TravelMode {\n  return value as TravelMode;\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { ManeuverSign } from \"./ManeuverSign\";\nimport {\n  ManeuverSignFromJSON,\n  ManeuverSignFromJSONTyped,\n  ManeuverSignToJSON,\n  ManeuverSignToJSONTyped,\n} from \"./ManeuverSign\";\nimport type { TravelMode } from \"./TravelMode\";\nimport {\n  TravelModeFromJSON,\n  TravelModeFromJSONTyped,\n  TravelModeToJSON,\n  TravelModeToJSONTyped,\n} from \"./TravelMode\";\n\n/**\n *\n * @export\n * @interface RouteManeuver\n */\nexport interface RouteManeuver {\n  /**\n   * The type of route maneuver.\n   *\n   * | Code | Type                                |\n   * |------|-------------------------------------|\n   * | 0    | None                                |\n   * | 1    | Start                               |\n   * | 2    | Start right                         |\n   * | 3    | Start left                          |\n   * | 4    | Destination                         |\n   * | 5    | Destination right                   |\n   * | 6    | Destination left                    |\n   * | 7    | Becomes                             |\n   * | 8    | Continue                            |\n   * | 9    | Slight right                        |\n   * | 10   | Right                               |\n   * | 11   | Sharp right                         |\n   * | 12   | U-turn right                        |\n   * | 13   | U-turn left                         |\n   * | 14   | Sharp left                          |\n   * | 15   | Left                                |\n   * | 16   | Slight left                         |\n   * | 17   | Ramp straight                       |\n   * | 18   | Ramp right                          |\n   * | 19   | Ramp left                           |\n   * | 20   | Exit right                          |\n   * | 21   | Exit left                           |\n   * | 22   | Stay straight                       |\n   * | 23   | Stay right                          |\n   * | 24   | Stay left                           |\n   * | 25   | Merge                               |\n   * | 26   | Enter roundabout                    |\n   * | 27   | Exit roundabout                     |\n   * | 28   | Enter ferry                         |\n   * | 29   | Exit ferry                          |\n   * | 30   | Transit                             |\n   * | 31   | Transit transfer                    |\n   * | 32   | Transit remain on                   |\n   * | 33   | Transit connection start            |\n   * | 34   | Transit connection transfer         |\n   * | 35   | Transit connection destination      |\n   * | 36   | Post-transit connection destination |\n   * | 37   | Merge right                         |\n   * | 38   | Merge left                          |\n   *\n   * @type {number}\n   * @memberof RouteManeuver\n   */\n  type: number;\n  /**\n   * The written maneuver instruction.\n   * @type {string}\n   * @memberof RouteManeuver\n   */\n  instruction: string;\n  /**\n   * Text suitable for use as a verbal navigation alert.\n   * @type {string}\n   * @memberof RouteManeuver\n   */\n  verbalTransitionAlertInstruction?: string;\n  /**\n   * Text suitable for use as a verbal navigation alert immediately prior to the maneuver transition.\n   * @type {string}\n   * @memberof RouteManeuver\n   */\n  verbalPreTransitionInstruction?: string;\n  /**\n   * Text suitable for use as a verbal navigation alert immediately after to the maneuver transition.\n   * @type {string}\n   * @memberof RouteManeuver\n   */\n  verbalPostTransitionInstruction?: string;\n  /**\n   * A list of street names that are consistent along the entire maneuver.\n   * @type {Array<string>}\n   * @memberof RouteManeuver\n   */\n  streetNames?: Array<string>;\n  /**\n   * A list of street names at the beginning of the maneuver, if they are different from the names at the end.\n   * @type {Array<string>}\n   * @memberof RouteManeuver\n   */\n  beginStreetNames?: Array<string>;\n  /**\n   * The estimated time to complete the entire maneuver, in seconds.\n   * @type {number}\n   * @memberof RouteManeuver\n   */\n  time: number;\n  /**\n   * The length of the maneuver, in `units`.\n   * @type {number}\n   * @memberof RouteManeuver\n   */\n  length: number;\n  /**\n   * The index into the list of shape points for the start of the maneuver.\n   * @type {number}\n   * @memberof RouteManeuver\n   */\n  beginShapeIndex: number;\n  /**\n   * The index into the list of shape points for the end of the maneuver.\n   * @type {number}\n   * @memberof RouteManeuver\n   */\n  endShapeIndex: number;\n  /**\n   * True any portion of the maneuver is subject to a toll.\n   * @type {boolean}\n   * @memberof RouteManeuver\n   */\n  toll?: boolean;\n  /**\n   * True any portion of the maneuver is unpaved or has portions of rough pavement.\n   * @type {boolean}\n   * @memberof RouteManeuver\n   */\n  rough?: boolean;\n  /**\n   * True if a gate is encountered in the course of this maneuver.\n   * @type {boolean}\n   * @memberof RouteManeuver\n   */\n  gate?: boolean;\n  /**\n   * True if a ferry is encountered in the course of this maneuver.\n   * @type {boolean}\n   * @memberof RouteManeuver\n   */\n  ferry?: boolean;\n  /**\n   *\n   * @type {ManeuverSign}\n   * @memberof RouteManeuver\n   */\n  sign?: ManeuverSign;\n  /**\n   * The exit number of the roundabout to take after entering.\n   * @type {number}\n   * @memberof RouteManeuver\n   */\n  roundaboutExitCount?: number;\n  /**\n   * The written departure time instruction (typically used in a transit maneuver).\n   * @type {number}\n   * @memberof RouteManeuver\n   */\n  departInstruction?: number;\n  /**\n   * Text suitable for use as a verbal departure time instruction (typically used in a transit maneuver).\n   * @type {number}\n   * @memberof RouteManeuver\n   */\n  verbalDepartInstruction?: number;\n  /**\n   * The written arrival time instruction (typically used in a transit maneuver).\n   * @type {number}\n   * @memberof RouteManeuver\n   */\n  arriveInstruction?: number;\n  /**\n   * Text suitable for use as a verbal departure time instruction (typically used in a transit maneuver).\n   * @type {number}\n   * @memberof RouteManeuver\n   */\n  verbalArriveInstruction?: number;\n  /**\n   * Public transit info (not currently supported).\n   * @type {{ [key: string]: any; }}\n   * @memberof RouteManeuver\n   */\n  transitInfo?: { [key: string]: any };\n  /**\n   * True if the `verbal_pre_transition_instruction` has been appended with the verbal instruction of the next maneuver.\n   * @type {boolean}\n   * @memberof RouteManeuver\n   */\n  verbalMultiCue?: boolean;\n  /**\n   *\n   * @type {TravelMode}\n   * @memberof RouteManeuver\n   */\n  travelMode: TravelMode;\n  /**\n   * The type of travel over the maneuver. This can be thought of as a specialization of the travel mode. For example, vehicular travel may be via car, motorcycle, etc.; and travel via bicycle may be via a road bike, mountain bike, etc.\n   * @type {string}\n   * @memberof RouteManeuver\n   */\n  travelType: RouteManeuverTravelTypeEnum;\n  /**\n   * Describes a bike share action when using bikeshare routing.\n   * @type {string}\n   * @memberof RouteManeuver\n   */\n  bssManeuverType?: RouteManeuverBssManeuverTypeEnum;\n}\n\n/**\n * @export\n */\nexport const RouteManeuverTravelTypeEnum = {\n  Car: \"car\",\n  Motorcycle: \"motorcycle\",\n  Bus: \"bus\",\n  TractorTrailer: \"tractor_trailer\",\n  MotorScooter: \"motor_scooter\",\n  Foot: \"foot\",\n  Wheelchair: \"wheelchair\",\n  Segway: \"segway\",\n  Road: \"road\",\n  Cross: \"cross\",\n  Hybrid: \"hybrid\",\n  Mountain: \"mountain\",\n  Tram: \"tram\",\n  Metro: \"metro\",\n  Rail: \"rail\",\n  Ferry: \"ferry\",\n  CableCar: \"cable_car\",\n  Gondola: \"gondola\",\n  Funicular: \"funicular\",\n  GolfCart: \"golf_cart\",\n  LowSpeedVehicle: \"low_speed_vehicle\",\n} as const;\nexport type RouteManeuverTravelTypeEnum =\n  (typeof RouteManeuverTravelTypeEnum)[keyof typeof RouteManeuverTravelTypeEnum];\n\n/**\n * @export\n */\nexport const RouteManeuverBssManeuverTypeEnum = {\n  NoneAction: \"NoneAction\",\n  RentBikeAtBikeShare: \"RentBikeAtBikeShare\",\n  ReturnBikeAtBikeShare: \"ReturnBikeAtBikeShare\",\n} as const;\nexport type RouteManeuverBssManeuverTypeEnum =\n  (typeof RouteManeuverBssManeuverTypeEnum)[keyof typeof RouteManeuverBssManeuverTypeEnum];\n\n/**\n * Check if a given object implements the RouteManeuver interface.\n */\nexport function instanceOfRouteManeuver(value: object): value is RouteManeuver {\n  if (!(\"type\" in value) || value[\"type\"] === undefined) return false;\n  if (!(\"instruction\" in value) || value[\"instruction\"] === undefined)\n    return false;\n  if (!(\"time\" in value) || value[\"time\"] === undefined) return false;\n  if (!(\"length\" in value) || value[\"length\"] === undefined) return false;\n  if (!(\"beginShapeIndex\" in value) || value[\"beginShapeIndex\"] === undefined)\n    return false;\n  if (!(\"endShapeIndex\" in value) || value[\"endShapeIndex\"] === undefined)\n    return false;\n  if (!(\"travelMode\" in value) || value[\"travelMode\"] === undefined)\n    return false;\n  if (!(\"travelType\" in value) || value[\"travelType\"] === undefined)\n    return false;\n  return true;\n}\n\nexport function RouteManeuverFromJSON(json: any): RouteManeuver {\n  return RouteManeuverFromJSONTyped(json, false);\n}\n\nexport function RouteManeuverFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): RouteManeuver {\n  if (json == null) {\n    return json;\n  }\n  return {\n    type: json[\"type\"],\n    instruction: json[\"instruction\"],\n    verbalTransitionAlertInstruction:\n      json[\"verbal_transition_alert_instruction\"] == null\n        ? undefined\n        : json[\"verbal_transition_alert_instruction\"],\n    verbalPreTransitionInstruction:\n      json[\"verbal_pre_transition_instruction\"] == null\n        ? undefined\n        : json[\"verbal_pre_transition_instruction\"],\n    verbalPostTransitionInstruction:\n      json[\"verbal_post_transition_instruction\"] == null\n        ? undefined\n        : json[\"verbal_post_transition_instruction\"],\n    streetNames:\n      json[\"street_names\"] == null ? undefined : json[\"street_names\"],\n    beginStreetNames:\n      json[\"begin_street_names\"] == null\n        ? undefined\n        : json[\"begin_street_names\"],\n    time: json[\"time\"],\n    length: json[\"length\"],\n    beginShapeIndex: json[\"begin_shape_index\"],\n    endShapeIndex: json[\"end_shape_index\"],\n    toll: json[\"toll\"] == null ? undefined : json[\"toll\"],\n    rough: json[\"rough\"] == null ? undefined : json[\"rough\"],\n    gate: json[\"gate\"] == null ? undefined : json[\"gate\"],\n    ferry: json[\"ferry\"] == null ? undefined : json[\"ferry\"],\n    sign: json[\"sign\"] == null ? undefined : ManeuverSignFromJSON(json[\"sign\"]),\n    roundaboutExitCount:\n      json[\"roundabout_exit_count\"] == null\n        ? undefined\n        : json[\"roundabout_exit_count\"],\n    departInstruction:\n      json[\"depart_instruction\"] == null\n        ? undefined\n        : json[\"depart_instruction\"],\n    verbalDepartInstruction:\n      json[\"verbal_depart_instruction\"] == null\n        ? undefined\n        : json[\"verbal_depart_instruction\"],\n    arriveInstruction:\n      json[\"arrive_instruction\"] == null\n        ? undefined\n        : json[\"arrive_instruction\"],\n    verbalArriveInstruction:\n      json[\"verbal_arrive_instruction\"] == null\n        ? undefined\n        : json[\"verbal_arrive_instruction\"],\n    transitInfo:\n      json[\"transit_info\"] == null ? undefined : json[\"transit_info\"],\n    verbalMultiCue:\n      json[\"verbal_multi_cue\"] == null ? undefined : json[\"verbal_multi_cue\"],\n    travelMode: TravelModeFromJSON(json[\"travel_mode\"]),\n    travelType: json[\"travel_type\"],\n    bssManeuverType:\n      json[\"bss_maneuver_type\"] == null ? undefined : json[\"bss_maneuver_type\"],\n  };\n}\n\nexport function RouteManeuverToJSON(json: any): RouteManeuver {\n  return RouteManeuverToJSONTyped(json, false);\n}\n\nexport function RouteManeuverToJSONTyped(\n  value?: RouteManeuver | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    type: value[\"type\"],\n    instruction: value[\"instruction\"],\n    verbal_transition_alert_instruction:\n      value[\"verbalTransitionAlertInstruction\"],\n    verbal_pre_transition_instruction: value[\"verbalPreTransitionInstruction\"],\n    verbal_post_transition_instruction:\n      value[\"verbalPostTransitionInstruction\"],\n    street_names: value[\"streetNames\"],\n    begin_street_names: value[\"beginStreetNames\"],\n    time: value[\"time\"],\n    length: value[\"length\"],\n    begin_shape_index: value[\"beginShapeIndex\"],\n    end_shape_index: value[\"endShapeIndex\"],\n    toll: value[\"toll\"],\n    rough: value[\"rough\"],\n    gate: value[\"gate\"],\n    ferry: value[\"ferry\"],\n    sign: ManeuverSignToJSON(value[\"sign\"]),\n    roundabout_exit_count: value[\"roundaboutExitCount\"],\n    depart_instruction: value[\"departInstruction\"],\n    verbal_depart_instruction: value[\"verbalDepartInstruction\"],\n    arrive_instruction: value[\"arriveInstruction\"],\n    verbal_arrive_instruction: value[\"verbalArriveInstruction\"],\n    transit_info: value[\"transitInfo\"],\n    verbal_multi_cue: value[\"verbalMultiCue\"],\n    travel_mode: TravelModeToJSON(value[\"travelMode\"]),\n    travel_type: value[\"travelType\"],\n    bss_maneuver_type: value[\"bssManeuverType\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { RouteSummary } from \"./RouteSummary\";\nimport {\n  RouteSummaryFromJSON,\n  RouteSummaryFromJSONTyped,\n  RouteSummaryToJSON,\n  RouteSummaryToJSONTyped,\n} from \"./RouteSummary\";\nimport type { RouteManeuver } from \"./RouteManeuver\";\nimport {\n  RouteManeuverFromJSON,\n  RouteManeuverFromJSONTyped,\n  RouteManeuverToJSON,\n  RouteManeuverToJSONTyped,\n} from \"./RouteManeuver\";\n\n/**\n *\n * @export\n * @interface RouteLeg\n */\nexport interface RouteLeg {\n  /**\n   *\n   * @type {Array<RouteManeuver>}\n   * @memberof RouteLeg\n   */\n  maneuvers?: Array<RouteManeuver>;\n  /**\n   * An encoded polyline (https://developers.google.com/maps/documentation/utilities/polylinealgorithm) with 6 digits of decimal precision (NOTE: Most implementations default to 5!).\n   * @type {string}\n   * @memberof RouteLeg\n   */\n  shape: string;\n  /**\n   *\n   * @type {RouteSummary}\n   * @memberof RouteLeg\n   */\n  summary: RouteSummary;\n  /**\n   * The sampling distance between elevation values along the route. This echoes the request parameter having the same name (converted to `units` if necessary).\n   * @type {number}\n   * @memberof RouteLeg\n   */\n  elevationInterval?: number;\n  /**\n   * An array of elevation values sampled every `elevation_interval`. Units are either metric or imperial depending on the value of `units`.\n   * @type {Array<number>}\n   * @memberof RouteLeg\n   */\n  elevation?: Array<number>;\n}\n\n/**\n * Check if a given object implements the RouteLeg interface.\n */\nexport function instanceOfRouteLeg(value: object): value is RouteLeg {\n  if (!(\"shape\" in value) || value[\"shape\"] === undefined) return false;\n  if (!(\"summary\" in value) || value[\"summary\"] === undefined) return false;\n  return true;\n}\n\nexport function RouteLegFromJSON(json: any): RouteLeg {\n  return RouteLegFromJSONTyped(json, false);\n}\n\nexport function RouteLegFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): RouteLeg {\n  if (json == null) {\n    return json;\n  }\n  return {\n    maneuvers:\n      json[\"maneuvers\"] == null\n        ? undefined\n        : (json[\"maneuvers\"] as Array<any>).map(RouteManeuverFromJSON),\n    shape: json[\"shape\"],\n    summary: RouteSummaryFromJSON(json[\"summary\"]),\n    elevationInterval:\n      json[\"elevation_interval\"] == null\n        ? undefined\n        : json[\"elevation_interval\"],\n    elevation: json[\"elevation\"] == null ? undefined : json[\"elevation\"],\n  };\n}\n\nexport function RouteLegToJSON(json: any): RouteLeg {\n  return RouteLegToJSONTyped(json, false);\n}\n\nexport function RouteLegToJSONTyped(\n  value?: RouteLeg | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    maneuvers:\n      value[\"maneuvers\"] == null\n        ? undefined\n        : (value[\"maneuvers\"] as Array<any>).map(RouteManeuverToJSON),\n    shape: value[\"shape\"],\n    summary: RouteSummaryToJSON(value[\"summary\"]),\n    elevation_interval: value[\"elevationInterval\"],\n    elevation: value[\"elevation\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { RoutingResponseWaypoint } from \"./RoutingResponseWaypoint\";\nimport {\n  RoutingResponseWaypointFromJSON,\n  RoutingResponseWaypointFromJSONTyped,\n  RoutingResponseWaypointToJSON,\n  RoutingResponseWaypointToJSONTyped,\n} from \"./RoutingResponseWaypoint\";\nimport type { RouteSummary } from \"./RouteSummary\";\nimport {\n  RouteSummaryFromJSON,\n  RouteSummaryFromJSONTyped,\n  RouteSummaryToJSON,\n  RouteSummaryToJSONTyped,\n} from \"./RouteSummary\";\nimport type { RoutingLongUnits } from \"./RoutingLongUnits\";\nimport {\n  RoutingLongUnitsFromJSON,\n  RoutingLongUnitsFromJSONTyped,\n  RoutingLongUnitsToJSON,\n  RoutingLongUnitsToJSONTyped,\n} from \"./RoutingLongUnits\";\nimport type { RouteLeg } from \"./RouteLeg\";\nimport {\n  RouteLegFromJSON,\n  RouteLegFromJSONTyped,\n  RouteLegToJSON,\n  RouteLegToJSONTyped,\n} from \"./RouteLeg\";\nimport type { RoutingLanguages } from \"./RoutingLanguages\";\nimport {\n  RoutingLanguagesFromJSON,\n  RoutingLanguagesFromJSONTyped,\n  RoutingLanguagesToJSON,\n  RoutingLanguagesToJSONTyped,\n} from \"./RoutingLanguages\";\n\n/**\n *\n * @export\n * @interface RouteTrip\n */\nexport interface RouteTrip {\n  /**\n   * The response status code\n   * @type {number}\n   * @memberof RouteTrip\n   */\n  status: number;\n  /**\n   * The response status message\n   * @type {string}\n   * @memberof RouteTrip\n   */\n  statusMessage: string;\n  /**\n   *\n   * @type {RoutingLongUnits}\n   * @memberof RouteTrip\n   */\n  units: RoutingLongUnits;\n  /**\n   *\n   * @type {RoutingLanguages}\n   * @memberof RouteTrip\n   */\n  language: RoutingLanguages;\n  /**\n   *\n   * @type {Array<RoutingResponseWaypoint>}\n   * @memberof RouteTrip\n   */\n  locations: Array<RoutingResponseWaypoint>;\n  /**\n   *\n   * @type {Array<RouteLeg>}\n   * @memberof RouteTrip\n   */\n  legs: Array<RouteLeg>;\n  /**\n   *\n   * @type {RouteSummary}\n   * @memberof RouteTrip\n   */\n  summary: RouteSummary;\n}\n\n/**\n * Check if a given object implements the RouteTrip interface.\n */\nexport function instanceOfRouteTrip(value: object): value is RouteTrip {\n  if (!(\"status\" in value) || value[\"status\"] === undefined) return false;\n  if (!(\"statusMessage\" in value) || value[\"statusMessage\"] === undefined)\n    return false;\n  if (!(\"units\" in value) || value[\"units\"] === undefined) return false;\n  if (!(\"language\" in value) || value[\"language\"] === undefined) return false;\n  if (!(\"locations\" in value) || value[\"locations\"] === undefined) return false;\n  if (!(\"legs\" in value) || value[\"legs\"] === undefined) return false;\n  if (!(\"summary\" in value) || value[\"summary\"] === undefined) return false;\n  return true;\n}\n\nexport function RouteTripFromJSON(json: any): RouteTrip {\n  return RouteTripFromJSONTyped(json, false);\n}\n\nexport function RouteTripFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): RouteTrip {\n  if (json == null) {\n    return json;\n  }\n  return {\n    status: json[\"status\"],\n    statusMessage: json[\"status_message\"],\n    units: RoutingLongUnitsFromJSON(json[\"units\"]),\n    language: RoutingLanguagesFromJSON(json[\"language\"]),\n    locations: (json[\"locations\"] as Array<any>).map(\n      RoutingResponseWaypointFromJSON,\n    ),\n    legs: (json[\"legs\"] as Array<any>).map(RouteLegFromJSON),\n    summary: RouteSummaryFromJSON(json[\"summary\"]),\n  };\n}\n\nexport function RouteTripToJSON(json: any): RouteTrip {\n  return RouteTripToJSONTyped(json, false);\n}\n\nexport function RouteTripToJSONTyped(\n  value?: RouteTrip | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    status: value[\"status\"],\n    status_message: value[\"statusMessage\"],\n    units: RoutingLongUnitsToJSON(value[\"units\"]),\n    language: RoutingLanguagesToJSON(value[\"language\"]),\n    locations: (value[\"locations\"] as Array<any>).map(\n      RoutingResponseWaypointToJSON,\n    ),\n    legs: (value[\"legs\"] as Array<any>).map(RouteLegToJSON),\n    summary: RouteSummaryToJSON(value[\"summary\"]),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { RouteTrip } from \"./RouteTrip\";\nimport {\n  RouteTripFromJSON,\n  RouteTripFromJSONTyped,\n  RouteTripToJSON,\n  RouteTripToJSONTyped,\n} from \"./RouteTrip\";\n\n/**\n *\n * @export\n * @interface RouteResponseAlternatesInner\n */\nexport interface RouteResponseAlternatesInner {\n  /**\n   *\n   * @type {RouteTrip}\n   * @memberof RouteResponseAlternatesInner\n   */\n  trip?: RouteTrip;\n}\n\n/**\n * Check if a given object implements the RouteResponseAlternatesInner interface.\n */\nexport function instanceOfRouteResponseAlternatesInner(\n  value: object,\n): value is RouteResponseAlternatesInner {\n  return true;\n}\n\nexport function RouteResponseAlternatesInnerFromJSON(\n  json: any,\n): RouteResponseAlternatesInner {\n  return RouteResponseAlternatesInnerFromJSONTyped(json, false);\n}\n\nexport function RouteResponseAlternatesInnerFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): RouteResponseAlternatesInner {\n  if (json == null) {\n    return json;\n  }\n  return {\n    trip: json[\"trip\"] == null ? undefined : RouteTripFromJSON(json[\"trip\"]),\n  };\n}\n\nexport function RouteResponseAlternatesInnerToJSON(\n  json: any,\n): RouteResponseAlternatesInner {\n  return RouteResponseAlternatesInnerToJSONTyped(json, false);\n}\n\nexport function RouteResponseAlternatesInnerToJSONTyped(\n  value?: RouteResponseAlternatesInner | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    trip: RouteTripToJSON(value[\"trip\"]),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { RouteResponseAlternatesInner } from \"./RouteResponseAlternatesInner\";\nimport {\n  RouteResponseAlternatesInnerFromJSON,\n  RouteResponseAlternatesInnerFromJSONTyped,\n  RouteResponseAlternatesInnerToJSON,\n  RouteResponseAlternatesInnerToJSONTyped,\n} from \"./RouteResponseAlternatesInner\";\nimport type { RouteTrip } from \"./RouteTrip\";\nimport {\n  RouteTripFromJSON,\n  RouteTripFromJSONTyped,\n  RouteTripToJSON,\n  RouteTripToJSONTyped,\n} from \"./RouteTrip\";\n\n/**\n *\n * @export\n * @interface MapMatchRouteResponse\n */\nexport interface MapMatchRouteResponse {\n  /**\n   * An identifier to disambiguate requests (echoed by the server).\n   * @type {string}\n   * @memberof MapMatchRouteResponse\n   */\n  id?: string;\n  /**\n   *\n   * @type {RouteTrip}\n   * @memberof MapMatchRouteResponse\n   */\n  trip: RouteTrip;\n  /**\n   *\n   * @type {Array<RouteResponseAlternatesInner>}\n   * @memberof MapMatchRouteResponse\n   */\n  alternates?: Array<RouteResponseAlternatesInner>;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof MapMatchRouteResponse\n   */\n  linearReferences?: Array<string>;\n}\n\n/**\n * Check if a given object implements the MapMatchRouteResponse interface.\n */\nexport function instanceOfMapMatchRouteResponse(\n  value: object,\n): value is MapMatchRouteResponse {\n  if (!(\"trip\" in value) || value[\"trip\"] === undefined) return false;\n  return true;\n}\n\nexport function MapMatchRouteResponseFromJSON(\n  json: any,\n): MapMatchRouteResponse {\n  return MapMatchRouteResponseFromJSONTyped(json, false);\n}\n\nexport function MapMatchRouteResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): MapMatchRouteResponse {\n  if (json == null) {\n    return json;\n  }\n  return {\n    id: json[\"id\"] == null ? undefined : json[\"id\"],\n    trip: RouteTripFromJSON(json[\"trip\"]),\n    alternates:\n      json[\"alternates\"] == null\n        ? undefined\n        : (json[\"alternates\"] as Array<any>).map(\n            RouteResponseAlternatesInnerFromJSON,\n          ),\n    linearReferences:\n      json[\"linear_references\"] == null ? undefined : json[\"linear_references\"],\n  };\n}\n\nexport function MapMatchRouteResponseToJSON(json: any): MapMatchRouteResponse {\n  return MapMatchRouteResponseToJSONTyped(json, false);\n}\n\nexport function MapMatchRouteResponseToJSONTyped(\n  value?: MapMatchRouteResponse | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    id: value[\"id\"],\n    trip: RouteTripToJSON(value[\"trip\"]),\n    alternates:\n      value[\"alternates\"] == null\n        ? undefined\n        : (value[\"alternates\"] as Array<any>).map(\n            RouteResponseAlternatesInnerToJSON,\n          ),\n    linear_references: value[\"linearReferences\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface MatchedPoint\n */\nexport interface MatchedPoint {\n  /**\n   * The latitude of the matched point.\n   * @type {number}\n   * @memberof MatchedPoint\n   */\n  lat: number;\n  /**\n   * The longitude of the matched point.\n   * @type {number}\n   * @memberof MatchedPoint\n   */\n  lon: number;\n  /**\n   *\n   * @type {string}\n   * @memberof MatchedPoint\n   */\n  type: MatchedPointTypeEnum;\n  /**\n   * The index of the edge in the list of `edges`. This key will be missing if the point is unmatched.\n   * @type {number}\n   * @memberof MatchedPoint\n   */\n  edgeIndex?: number;\n  /**\n   * If true, this match result is the begin location of a route discontinuity.\n   * @type {boolean}\n   * @memberof MatchedPoint\n   */\n  beginRouteDiscontinuity?: boolean;\n  /**\n   * If true, this match result is the end location of a route discontinuity.\n   * @type {boolean}\n   * @memberof MatchedPoint\n   */\n  endRouteDiscontinuity?: boolean;\n  /**\n   * The distance along the associated edge for this matched point, expressed as a value between 0 and 1. For example, if the matched point is halfway along the edge, then the value will be 0.5. This key will be absent if the point is unmatched.\n   * @type {number}\n   * @memberof MatchedPoint\n   */\n  distanceAlongEdge?: number;\n  /**\n   * The distance in meters from the trace point to the matched point. This key will be absent if the point is unmatched.\n   * @type {number}\n   * @memberof MatchedPoint\n   */\n  distanceFromTracePoint?: number;\n}\n\n/**\n * @export\n */\nexport const MatchedPointTypeEnum = {\n  Unmatched: \"unmatched\",\n  Interpolated: \"interpolated\",\n  Matched: \"matched\",\n} as const;\nexport type MatchedPointTypeEnum =\n  (typeof MatchedPointTypeEnum)[keyof typeof MatchedPointTypeEnum];\n\n/**\n * Check if a given object implements the MatchedPoint interface.\n */\nexport function instanceOfMatchedPoint(value: object): value is MatchedPoint {\n  if (!(\"lat\" in value) || value[\"lat\"] === undefined) return false;\n  if (!(\"lon\" in value) || value[\"lon\"] === undefined) return false;\n  if (!(\"type\" in value) || value[\"type\"] === undefined) return false;\n  return true;\n}\n\nexport function MatchedPointFromJSON(json: any): MatchedPoint {\n  return MatchedPointFromJSONTyped(json, false);\n}\n\nexport function MatchedPointFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): MatchedPoint {\n  if (json == null) {\n    return json;\n  }\n  return {\n    lat: json[\"lat\"],\n    lon: json[\"lon\"],\n    type: json[\"type\"],\n    edgeIndex: json[\"edge_index\"] == null ? undefined : json[\"edge_index\"],\n    beginRouteDiscontinuity:\n      json[\"begin_route_discontinuity\"] == null\n        ? undefined\n        : json[\"begin_route_discontinuity\"],\n    endRouteDiscontinuity:\n      json[\"end_route_discontinuity\"] == null\n        ? undefined\n        : json[\"end_route_discontinuity\"],\n    distanceAlongEdge:\n      json[\"distance_along_edge\"] == null\n        ? undefined\n        : json[\"distance_along_edge\"],\n    distanceFromTracePoint:\n      json[\"distance_from_trace_point\"] == null\n        ? undefined\n        : json[\"distance_from_trace_point\"],\n  };\n}\n\nexport function MatchedPointToJSON(json: any): MatchedPoint {\n  return MatchedPointToJSONTyped(json, false);\n}\n\nexport function MatchedPointToJSONTyped(\n  value?: MatchedPoint | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    lat: value[\"lat\"],\n    lon: value[\"lon\"],\n    type: value[\"type\"],\n    edge_index: value[\"edgeIndex\"],\n    begin_route_discontinuity: value[\"beginRouteDiscontinuity\"],\n    end_route_discontinuity: value[\"endRouteDiscontinuity\"],\n    distance_along_edge: value[\"distanceAlongEdge\"],\n    distance_from_trace_point: value[\"distanceFromTracePoint\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n *\n * @export\n */\nexport const MatrixCostingModel = {\n  Auto: \"auto\",\n  Bus: \"bus\",\n  Taxi: \"taxi\",\n  Truck: \"truck\",\n  Bicycle: \"bicycle\",\n  Bikeshare: \"bikeshare\",\n  MotorScooter: \"motor_scooter\",\n  Motorcycle: \"motorcycle\",\n  Pedestrian: \"pedestrian\",\n  LowSpeedVehicle: \"low_speed_vehicle\",\n} as const;\nexport type MatrixCostingModel =\n  (typeof MatrixCostingModel)[keyof typeof MatrixCostingModel];\n\nexport function instanceOfMatrixCostingModel(value: any): boolean {\n  for (const key in MatrixCostingModel) {\n    if (Object.prototype.hasOwnProperty.call(MatrixCostingModel, key)) {\n      if (\n        MatrixCostingModel[key as keyof typeof MatrixCostingModel] === value\n      ) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function MatrixCostingModelFromJSON(json: any): MatrixCostingModel {\n  return MatrixCostingModelFromJSONTyped(json, false);\n}\n\nexport function MatrixCostingModelFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): MatrixCostingModel {\n  return json as MatrixCostingModel;\n}\n\nexport function MatrixCostingModelToJSON(\n  value?: MatrixCostingModel | null,\n): any {\n  return value as any;\n}\n\nexport function MatrixCostingModelToJSONTyped(\n  value: any,\n  ignoreDiscriminator: boolean,\n): MatrixCostingModel {\n  return value as MatrixCostingModel;\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface MatrixDistance\n */\nexport interface MatrixDistance {\n  /**\n   * The distance (in `units`) between the location in `sources` at `from_index` and the location in `targets` at `to_index`.\n   * This value may be 0 in the case that the source and destination are the same, and `null` if no route was found between the locations.\n   * @type {number}\n   * @memberof MatrixDistance\n   */\n  distance: number | null;\n  /**\n   * The travel time (in seconds) between the location in `sources` at `from_index` and the location in `targets` at `to_index`.\n   * This value may be 0 in the case that the source and destination are the same, and `null` if no route was found between the locations.\n   * @type {number}\n   * @memberof MatrixDistance\n   */\n  time: number | null;\n  /**\n   * The index of the start location in the `sources` array.\n   * @type {number}\n   * @memberof MatrixDistance\n   */\n  fromIndex: number;\n  /**\n   * The index of the end location in the `targets` array.\n   * @type {number}\n   * @memberof MatrixDistance\n   */\n  toIndex: number;\n}\n\n/**\n * Check if a given object implements the MatrixDistance interface.\n */\nexport function instanceOfMatrixDistance(\n  value: object,\n): value is MatrixDistance {\n  if (!(\"distance\" in value) || value[\"distance\"] === undefined) return false;\n  if (!(\"time\" in value) || value[\"time\"] === undefined) return false;\n  if (!(\"fromIndex\" in value) || value[\"fromIndex\"] === undefined) return false;\n  if (!(\"toIndex\" in value) || value[\"toIndex\"] === undefined) return false;\n  return true;\n}\n\nexport function MatrixDistanceFromJSON(json: any): MatrixDistance {\n  return MatrixDistanceFromJSONTyped(json, false);\n}\n\nexport function MatrixDistanceFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): MatrixDistance {\n  if (json == null) {\n    return json;\n  }\n  return {\n    distance: json[\"distance\"],\n    time: json[\"time\"],\n    fromIndex: json[\"from_index\"],\n    toIndex: json[\"to_index\"],\n  };\n}\n\nexport function MatrixDistanceToJSON(json: any): MatrixDistance {\n  return MatrixDistanceToJSONTyped(json, false);\n}\n\nexport function MatrixDistanceToJSONTyped(\n  value?: MatrixDistance | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    distance: value[\"distance\"],\n    time: value[\"time\"],\n    from_index: value[\"fromIndex\"],\n    to_index: value[\"toIndex\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface MatrixWaypoint\n */\nexport interface MatrixWaypoint {\n  /**\n   * The latitude of a point in the shape.\n   * @type {number}\n   * @memberof MatrixWaypoint\n   */\n  lat: number;\n  /**\n   * The longitude of a point in the shape.\n   * @type {number}\n   * @memberof MatrixWaypoint\n   */\n  lon: number;\n  /**\n   * The cutoff (in meters) at which we will assume the input is too far away from civilisation to be worth correlating to the nearest graph elements. The default is 35 km.\n   * @type {number}\n   * @memberof MatrixWaypoint\n   */\n  searchCutoff?: number;\n}\n\n/**\n * Check if a given object implements the MatrixWaypoint interface.\n */\nexport function instanceOfMatrixWaypoint(\n  value: object,\n): value is MatrixWaypoint {\n  if (!(\"lat\" in value) || value[\"lat\"] === undefined) return false;\n  if (!(\"lon\" in value) || value[\"lon\"] === undefined) return false;\n  return true;\n}\n\nexport function MatrixWaypointFromJSON(json: any): MatrixWaypoint {\n  return MatrixWaypointFromJSONTyped(json, false);\n}\n\nexport function MatrixWaypointFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): MatrixWaypoint {\n  if (json == null) {\n    return json;\n  }\n  return {\n    lat: json[\"lat\"],\n    lon: json[\"lon\"],\n    searchCutoff:\n      json[\"search_cutoff\"] == null ? undefined : json[\"search_cutoff\"],\n  };\n}\n\nexport function MatrixWaypointToJSON(json: any): MatrixWaypoint {\n  return MatrixWaypointToJSONTyped(json, false);\n}\n\nexport function MatrixWaypointToJSONTyped(\n  value?: MatrixWaypoint | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    lat: value[\"lat\"],\n    lon: value[\"lon\"],\n    search_cutoff: value[\"searchCutoff\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { CostingOptions } from \"./CostingOptions\";\nimport {\n  CostingOptionsFromJSON,\n  CostingOptionsFromJSONTyped,\n  CostingOptionsToJSON,\n  CostingOptionsToJSONTyped,\n} from \"./CostingOptions\";\nimport type { MatrixWaypoint } from \"./MatrixWaypoint\";\nimport {\n  MatrixWaypointFromJSON,\n  MatrixWaypointFromJSONTyped,\n  MatrixWaypointToJSON,\n  MatrixWaypointToJSONTyped,\n} from \"./MatrixWaypoint\";\nimport type { MatrixCostingModel } from \"./MatrixCostingModel\";\nimport {\n  MatrixCostingModelFromJSON,\n  MatrixCostingModelFromJSONTyped,\n  MatrixCostingModelToJSON,\n  MatrixCostingModelToJSONTyped,\n} from \"./MatrixCostingModel\";\nimport type { DistanceUnit } from \"./DistanceUnit\";\nimport {\n  DistanceUnitFromJSON,\n  DistanceUnitFromJSONTyped,\n  DistanceUnitToJSON,\n  DistanceUnitToJSONTyped,\n} from \"./DistanceUnit\";\nimport type { RoutingLanguages } from \"./RoutingLanguages\";\nimport {\n  RoutingLanguagesFromJSON,\n  RoutingLanguagesFromJSONTyped,\n  RoutingLanguagesToJSON,\n  RoutingLanguagesToJSONTyped,\n} from \"./RoutingLanguages\";\n\n/**\n *\n * @export\n * @interface MatrixRequest\n */\nexport interface MatrixRequest {\n  /**\n   *\n   * @type {DistanceUnit}\n   * @memberof MatrixRequest\n   */\n  units?: DistanceUnit;\n  /**\n   *\n   * @type {RoutingLanguages}\n   * @memberof MatrixRequest\n   */\n  language?: RoutingLanguages;\n  /**\n   * The level of directional narrative to include. Locations and times will always be returned, but narrative generation verbosity can be controlled with this parameter.\n   * @type {string}\n   * @memberof MatrixRequest\n   */\n  directionsType?: MatrixRequestDirectionsTypeEnum;\n  /**\n   * An identifier to disambiguate requests (echoed by the server).\n   * @type {string}\n   * @memberof MatrixRequest\n   */\n  id?: string;\n  /**\n   * The list of starting locations\n   * @type {Array<MatrixWaypoint>}\n   * @memberof MatrixRequest\n   */\n  sources: Array<MatrixWaypoint>;\n  /**\n   * The list of ending locations\n   * @type {Array<MatrixWaypoint>}\n   * @memberof MatrixRequest\n   */\n  targets: Array<MatrixWaypoint>;\n  /**\n   *\n   * @type {MatrixCostingModel}\n   * @memberof MatrixRequest\n   */\n  costing: MatrixCostingModel;\n  /**\n   *\n   * @type {CostingOptions}\n   * @memberof MatrixRequest\n   */\n  costingOptions?: CostingOptions;\n  /**\n   * Only applicable to one-to-many or many-to-one requests. This defaults to all locations. When specified explicitly, this option allows a partial result to be returned. This is basically equivalent to \"find the closest/best locations out of the full set.\" This can have a dramatic improvement for large requests.\n   * @type {number}\n   * @memberof MatrixRequest\n   */\n  matrixLocations?: number;\n}\n\n/**\n * @export\n */\nexport const MatrixRequestDirectionsTypeEnum = {\n  None: \"none\",\n  Maneuvers: \"maneuvers\",\n  Instructions: \"instructions\",\n} as const;\nexport type MatrixRequestDirectionsTypeEnum =\n  (typeof MatrixRequestDirectionsTypeEnum)[keyof typeof MatrixRequestDirectionsTypeEnum];\n\n/**\n * Check if a given object implements the MatrixRequest interface.\n */\nexport function instanceOfMatrixRequest(value: object): value is MatrixRequest {\n  if (!(\"sources\" in value) || value[\"sources\"] === undefined) return false;\n  if (!(\"targets\" in value) || value[\"targets\"] === undefined) return false;\n  if (!(\"costing\" in value) || value[\"costing\"] === undefined) return false;\n  return true;\n}\n\nexport function MatrixRequestFromJSON(json: any): MatrixRequest {\n  return MatrixRequestFromJSONTyped(json, false);\n}\n\nexport function MatrixRequestFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): MatrixRequest {\n  if (json == null) {\n    return json;\n  }\n  return {\n    units:\n      json[\"units\"] == null ? undefined : DistanceUnitFromJSON(json[\"units\"]),\n    language:\n      json[\"language\"] == null\n        ? undefined\n        : RoutingLanguagesFromJSON(json[\"language\"]),\n    directionsType:\n      json[\"directions_type\"] == null ? undefined : json[\"directions_type\"],\n    id: json[\"id\"] == null ? undefined : json[\"id\"],\n    sources: (json[\"sources\"] as Array<any>).map(MatrixWaypointFromJSON),\n    targets: (json[\"targets\"] as Array<any>).map(MatrixWaypointFromJSON),\n    costing: MatrixCostingModelFromJSON(json[\"costing\"]),\n    costingOptions:\n      json[\"costing_options\"] == null\n        ? undefined\n        : CostingOptionsFromJSON(json[\"costing_options\"]),\n    matrixLocations:\n      json[\"matrix_locations\"] == null ? undefined : json[\"matrix_locations\"],\n  };\n}\n\nexport function MatrixRequestToJSON(json: any): MatrixRequest {\n  return MatrixRequestToJSONTyped(json, false);\n}\n\nexport function MatrixRequestToJSONTyped(\n  value?: MatrixRequest | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    units: DistanceUnitToJSON(value[\"units\"]),\n    language: RoutingLanguagesToJSON(value[\"language\"]),\n    directions_type: value[\"directionsType\"],\n    id: value[\"id\"],\n    sources: (value[\"sources\"] as Array<any>).map(MatrixWaypointToJSON),\n    targets: (value[\"targets\"] as Array<any>).map(MatrixWaypointToJSON),\n    costing: MatrixCostingModelToJSON(value[\"costing\"]),\n    costing_options: CostingOptionsToJSON(value[\"costingOptions\"]),\n    matrix_locations: value[\"matrixLocations\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface Warning\n */\nexport interface Warning {\n  /**\n   *\n   * @type {string}\n   * @memberof Warning\n   */\n  text?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof Warning\n   */\n  code?: number;\n}\n\n/**\n * Check if a given object implements the Warning interface.\n */\nexport function instanceOfWarning(value: object): value is Warning {\n  return true;\n}\n\nexport function WarningFromJSON(json: any): Warning {\n  return WarningFromJSONTyped(json, false);\n}\n\nexport function WarningFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): Warning {\n  if (json == null) {\n    return json;\n  }\n  return {\n    text: json[\"text\"] == null ? undefined : json[\"text\"],\n    code: json[\"code\"] == null ? undefined : json[\"code\"],\n  };\n}\n\nexport function WarningToJSON(json: any): Warning {\n  return WarningToJSONTyped(json, false);\n}\n\nexport function WarningToJSONTyped(\n  value?: Warning | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    text: value[\"text\"],\n    code: value[\"code\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { Warning } from \"./Warning\";\nimport {\n  WarningFromJSON,\n  WarningFromJSONTyped,\n  WarningToJSON,\n  WarningToJSONTyped,\n} from \"./Warning\";\nimport type { Coordinate } from \"./Coordinate\";\nimport {\n  CoordinateFromJSON,\n  CoordinateFromJSONTyped,\n  CoordinateToJSON,\n  CoordinateToJSONTyped,\n} from \"./Coordinate\";\nimport type { RoutingLongUnits } from \"./RoutingLongUnits\";\nimport {\n  RoutingLongUnitsFromJSON,\n  RoutingLongUnitsFromJSONTyped,\n  RoutingLongUnitsToJSON,\n  RoutingLongUnitsToJSONTyped,\n} from \"./RoutingLongUnits\";\nimport type { MatrixDistance } from \"./MatrixDistance\";\nimport {\n  MatrixDistanceFromJSON,\n  MatrixDistanceFromJSONTyped,\n  MatrixDistanceToJSON,\n  MatrixDistanceToJSONTyped,\n} from \"./MatrixDistance\";\n\n/**\n *\n * @export\n * @interface MatrixResponse\n */\nexport interface MatrixResponse {\n  /**\n   * An identifier to disambiguate requests (echoed by the server).\n   * @type {string}\n   * @memberof MatrixResponse\n   */\n  id?: string;\n  /**\n   * The list of starting locations determined by snapping to the nearest appropriate point on the road network for the costing model. All locations appear in the same order as the input.\n   * @type {Array<Coordinate>}\n   * @memberof MatrixResponse\n   */\n  sources: Array<Coordinate>;\n  /**\n   * The list of ending locations determined by snapping to the nearest appropriate point on the road network for the costing model. All locations appear in the same order as the input.\n   * @type {Array<Coordinate>}\n   * @memberof MatrixResponse\n   */\n  targets: Array<Coordinate>;\n  /**\n   * The matrix of starting and ending locations, along with the computed distance and travel time. The array is row-ordered. This means that the time and distance from the first location to all others forms the first row of the array, followed by the time and distance from the second source location to all target locations, etc.\n   * @type {Array<Array<MatrixDistance>>}\n   * @memberof MatrixResponse\n   */\n  sourcesToTargets: Array<Array<MatrixDistance>>;\n  /**\n   *\n   * @type {Array<Warning>}\n   * @memberof MatrixResponse\n   */\n  warnings?: Array<Warning>;\n  /**\n   *\n   * @type {RoutingLongUnits}\n   * @memberof MatrixResponse\n   */\n  units: RoutingLongUnits;\n}\n\n/**\n * Check if a given object implements the MatrixResponse interface.\n */\nexport function instanceOfMatrixResponse(\n  value: object,\n): value is MatrixResponse {\n  if (!(\"sources\" in value) || value[\"sources\"] === undefined) return false;\n  if (!(\"targets\" in value) || value[\"targets\"] === undefined) return false;\n  if (!(\"sourcesToTargets\" in value) || value[\"sourcesToTargets\"] === undefined)\n    return false;\n  if (!(\"units\" in value) || value[\"units\"] === undefined) return false;\n  return true;\n}\n\nexport function MatrixResponseFromJSON(json: any): MatrixResponse {\n  return MatrixResponseFromJSONTyped(json, false);\n}\n\nexport function MatrixResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): MatrixResponse {\n  if (json == null) {\n    return json;\n  }\n  return {\n    id: json[\"id\"] == null ? undefined : json[\"id\"],\n    sources: (json[\"sources\"] as Array<any>).map(CoordinateFromJSON),\n    targets: (json[\"targets\"] as Array<any>).map(CoordinateFromJSON),\n    sourcesToTargets: json[\"sources_to_targets\"],\n    warnings:\n      json[\"warnings\"] == null\n        ? undefined\n        : (json[\"warnings\"] as Array<any>).map(WarningFromJSON),\n    units: RoutingLongUnitsFromJSON(json[\"units\"]),\n  };\n}\n\nexport function MatrixResponseToJSON(json: any): MatrixResponse {\n  return MatrixResponseToJSONTyped(json, false);\n}\n\nexport function MatrixResponseToJSONTyped(\n  value?: MatrixResponse | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    id: value[\"id\"],\n    sources: (value[\"sources\"] as Array<any>).map(CoordinateToJSON),\n    targets: (value[\"targets\"] as Array<any>).map(CoordinateToJSON),\n    sources_to_targets: value[\"sourcesToTargets\"],\n    warnings:\n      value[\"warnings\"] == null\n        ? undefined\n        : (value[\"warnings\"] as Array<any>).map(WarningToJSON),\n    units: RoutingLongUnitsToJSON(value[\"units\"]),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { CostingModel } from \"./CostingModel\";\nimport {\n  CostingModelFromJSON,\n  CostingModelFromJSONTyped,\n  CostingModelToJSON,\n  CostingModelToJSONTyped,\n} from \"./CostingModel\";\nimport type { CostingOptions } from \"./CostingOptions\";\nimport {\n  CostingOptionsFromJSON,\n  CostingOptionsFromJSONTyped,\n  CostingOptionsToJSON,\n  CostingOptionsToJSONTyped,\n} from \"./CostingOptions\";\nimport type { Coordinate } from \"./Coordinate\";\nimport {\n  CoordinateFromJSON,\n  CoordinateFromJSONTyped,\n  CoordinateToJSON,\n  CoordinateToJSONTyped,\n} from \"./Coordinate\";\nimport type { DistanceUnit } from \"./DistanceUnit\";\nimport {\n  DistanceUnitFromJSON,\n  DistanceUnitFromJSONTyped,\n  DistanceUnitToJSON,\n  DistanceUnitToJSONTyped,\n} from \"./DistanceUnit\";\nimport type { RoutingLanguages } from \"./RoutingLanguages\";\nimport {\n  RoutingLanguagesFromJSON,\n  RoutingLanguagesFromJSONTyped,\n  RoutingLanguagesToJSON,\n  RoutingLanguagesToJSONTyped,\n} from \"./RoutingLanguages\";\n\n/**\n *\n * @export\n * @interface NearestRoadsRequest\n */\nexport interface NearestRoadsRequest {\n  /**\n   *\n   * @type {DistanceUnit}\n   * @memberof NearestRoadsRequest\n   */\n  units?: DistanceUnit;\n  /**\n   *\n   * @type {RoutingLanguages}\n   * @memberof NearestRoadsRequest\n   */\n  language?: RoutingLanguages;\n  /**\n   * The level of directional narrative to include. Locations and times will always be returned, but narrative generation verbosity can be controlled with this parameter.\n   * @type {string}\n   * @memberof NearestRoadsRequest\n   */\n  directionsType?: NearestRoadsRequestDirectionsTypeEnum;\n  /**\n   *\n   * @type {Array<Coordinate>}\n   * @memberof NearestRoadsRequest\n   */\n  locations: Array<Coordinate>;\n  /**\n   *\n   * @type {CostingModel}\n   * @memberof NearestRoadsRequest\n   */\n  costing?: CostingModel;\n  /**\n   *\n   * @type {CostingOptions}\n   * @memberof NearestRoadsRequest\n   */\n  costingOptions?: CostingOptions;\n  /**\n   *\n   * @type {boolean}\n   * @memberof NearestRoadsRequest\n   */\n  verbose?: boolean;\n}\n\n/**\n * @export\n */\nexport const NearestRoadsRequestDirectionsTypeEnum = {\n  None: \"none\",\n  Maneuvers: \"maneuvers\",\n  Instructions: \"instructions\",\n} as const;\nexport type NearestRoadsRequestDirectionsTypeEnum =\n  (typeof NearestRoadsRequestDirectionsTypeEnum)[keyof typeof NearestRoadsRequestDirectionsTypeEnum];\n\n/**\n * Check if a given object implements the NearestRoadsRequest interface.\n */\nexport function instanceOfNearestRoadsRequest(\n  value: object,\n): value is NearestRoadsRequest {\n  if (!(\"locations\" in value) || value[\"locations\"] === undefined) return false;\n  return true;\n}\n\nexport function NearestRoadsRequestFromJSON(json: any): NearestRoadsRequest {\n  return NearestRoadsRequestFromJSONTyped(json, false);\n}\n\nexport function NearestRoadsRequestFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): NearestRoadsRequest {\n  if (json == null) {\n    return json;\n  }\n  return {\n    units:\n      json[\"units\"] == null ? undefined : DistanceUnitFromJSON(json[\"units\"]),\n    language:\n      json[\"language\"] == null\n        ? undefined\n        : RoutingLanguagesFromJSON(json[\"language\"]),\n    directionsType:\n      json[\"directions_type\"] == null ? undefined : json[\"directions_type\"],\n    locations: (json[\"locations\"] as Array<any>).map(CoordinateFromJSON),\n    costing:\n      json[\"costing\"] == null\n        ? undefined\n        : CostingModelFromJSON(json[\"costing\"]),\n    costingOptions:\n      json[\"costing_options\"] == null\n        ? undefined\n        : CostingOptionsFromJSON(json[\"costing_options\"]),\n    verbose: json[\"verbose\"] == null ? undefined : json[\"verbose\"],\n  };\n}\n\nexport function NearestRoadsRequestToJSON(json: any): NearestRoadsRequest {\n  return NearestRoadsRequestToJSONTyped(json, false);\n}\n\nexport function NearestRoadsRequestToJSONTyped(\n  value?: NearestRoadsRequest | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    units: DistanceUnitToJSON(value[\"units\"]),\n    language: RoutingLanguagesToJSON(value[\"language\"]),\n    directions_type: value[\"directionsType\"],\n    locations: (value[\"locations\"] as Array<any>).map(CoordinateToJSON),\n    costing: CostingModelToJSON(value[\"costing\"]),\n    costing_options: CostingOptionsToJSON(value[\"costingOptions\"]),\n    verbose: value[\"verbose\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { CostingOptions } from \"./CostingOptions\";\nimport {\n  CostingOptionsFromJSON,\n  CostingOptionsFromJSONTyped,\n  CostingOptionsToJSON,\n  CostingOptionsToJSONTyped,\n} from \"./CostingOptions\";\nimport type { Coordinate } from \"./Coordinate\";\nimport {\n  CoordinateFromJSON,\n  CoordinateFromJSONTyped,\n  CoordinateToJSON,\n  CoordinateToJSONTyped,\n} from \"./Coordinate\";\nimport type { MatrixCostingModel } from \"./MatrixCostingModel\";\nimport {\n  MatrixCostingModelFromJSON,\n  MatrixCostingModelFromJSONTyped,\n  MatrixCostingModelToJSON,\n  MatrixCostingModelToJSONTyped,\n} from \"./MatrixCostingModel\";\nimport type { AnnotationFilters } from \"./AnnotationFilters\";\nimport {\n  AnnotationFiltersFromJSON,\n  AnnotationFiltersFromJSONTyped,\n  AnnotationFiltersToJSON,\n  AnnotationFiltersToJSONTyped,\n} from \"./AnnotationFilters\";\nimport type { DistanceUnit } from \"./DistanceUnit\";\nimport {\n  DistanceUnitFromJSON,\n  DistanceUnitFromJSONTyped,\n  DistanceUnitToJSON,\n  DistanceUnitToJSONTyped,\n} from \"./DistanceUnit\";\nimport type { RoutingLanguages } from \"./RoutingLanguages\";\nimport {\n  RoutingLanguagesFromJSON,\n  RoutingLanguagesFromJSONTyped,\n  RoutingLanguagesToJSON,\n  RoutingLanguagesToJSONTyped,\n} from \"./RoutingLanguages\";\n\n/**\n *\n * @export\n * @interface OptimizedRouteRequest\n */\nexport interface OptimizedRouteRequest {\n  /**\n   *\n   * @type {DistanceUnit}\n   * @memberof OptimizedRouteRequest\n   */\n  units?: DistanceUnit;\n  /**\n   *\n   * @type {RoutingLanguages}\n   * @memberof OptimizedRouteRequest\n   */\n  language?: RoutingLanguages;\n  /**\n   * The level of directional narrative to include. Locations and times will always be returned, but narrative generation verbosity can be controlled with this parameter.\n   * @type {string}\n   * @memberof OptimizedRouteRequest\n   */\n  directionsType?: OptimizedRouteRequestDirectionsTypeEnum;\n  /**\n   * The output response format. The default JSON format is extremely compact and ideal for web or data-constrained use cases where you want to fetch additional attributes on demand in small chunks. The OSRM format is much richer and is configurable with significantly more info for turn-by-turn navigation use cases.\n   * @type {string}\n   * @memberof OptimizedRouteRequest\n   */\n  format?: OptimizedRouteRequestFormatEnum;\n  /**\n   * Optionally includes helpful banners with timing information for turn-by-turn navigation. This is only available in the OSRM format.\n   * @type {boolean}\n   * @memberof OptimizedRouteRequest\n   */\n  bannerInstructions?: boolean;\n  /**\n   * Optionally includes voice instructions with timing information for turn-by-turn navigation. This is only available in the OSRM format.\n   * @type {boolean}\n   * @memberof OptimizedRouteRequest\n   */\n  voiceInstructions?: boolean;\n  /**\n   *\n   * @type {AnnotationFilters}\n   * @memberof OptimizedRouteRequest\n   */\n  filters?: AnnotationFilters;\n  /**\n   * An identifier to disambiguate requests (echoed by the server).\n   * @type {string}\n   * @memberof OptimizedRouteRequest\n   */\n  id?: string;\n  /**\n   * The list of locations. The first and last are assumed to be the start and end points, and all intermediate points are locations that you want to visit along the way.\n   * @type {Array<Coordinate>}\n   * @memberof OptimizedRouteRequest\n   */\n  locations: Array<Coordinate>;\n  /**\n   *\n   * @type {MatrixCostingModel}\n   * @memberof OptimizedRouteRequest\n   */\n  costing: MatrixCostingModel;\n  /**\n   *\n   * @type {CostingOptions}\n   * @memberof OptimizedRouteRequest\n   */\n  costingOptions?: CostingOptions;\n  /**\n   * If greater than zero, attempts to include elevation along the route at regular intervals. The \"native\" internal resolution is 30m, so we recommend you use this when possible. This number is interpreted as either meters or feet depending on the unit parameter.\n   * Elevation for route sections containing a bridge or tunnel is interpolated linearly. This doesn't always match the true elevation of the bridge/tunnel, but it prevents sharp artifacts from the surrounding terrain. This functionality is unique to the routing endpoints and is not available via the elevation API.\n   * NOTE: This has no effect on the OSRM response format.\n   * @type {number}\n   * @memberof OptimizedRouteRequest\n   */\n  elevationInterval?: number;\n}\n\n/**\n * @export\n */\nexport const OptimizedRouteRequestDirectionsTypeEnum = {\n  None: \"none\",\n  Maneuvers: \"maneuvers\",\n  Instructions: \"instructions\",\n} as const;\nexport type OptimizedRouteRequestDirectionsTypeEnum =\n  (typeof OptimizedRouteRequestDirectionsTypeEnum)[keyof typeof OptimizedRouteRequestDirectionsTypeEnum];\n\n/**\n * @export\n */\nexport const OptimizedRouteRequestFormatEnum = {\n  Json: \"json\",\n  Osrm: \"osrm\",\n} as const;\nexport type OptimizedRouteRequestFormatEnum =\n  (typeof OptimizedRouteRequestFormatEnum)[keyof typeof OptimizedRouteRequestFormatEnum];\n\n/**\n * Check if a given object implements the OptimizedRouteRequest interface.\n */\nexport function instanceOfOptimizedRouteRequest(\n  value: object,\n): value is OptimizedRouteRequest {\n  if (!(\"locations\" in value) || value[\"locations\"] === undefined) return false;\n  if (!(\"costing\" in value) || value[\"costing\"] === undefined) return false;\n  return true;\n}\n\nexport function OptimizedRouteRequestFromJSON(\n  json: any,\n): OptimizedRouteRequest {\n  return OptimizedRouteRequestFromJSONTyped(json, false);\n}\n\nexport function OptimizedRouteRequestFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): OptimizedRouteRequest {\n  if (json == null) {\n    return json;\n  }\n  return {\n    units:\n      json[\"units\"] == null ? undefined : DistanceUnitFromJSON(json[\"units\"]),\n    language:\n      json[\"language\"] == null\n        ? undefined\n        : RoutingLanguagesFromJSON(json[\"language\"]),\n    directionsType:\n      json[\"directions_type\"] == null ? undefined : json[\"directions_type\"],\n    format: json[\"format\"] == null ? undefined : json[\"format\"],\n    bannerInstructions:\n      json[\"banner_instructions\"] == null\n        ? undefined\n        : json[\"banner_instructions\"],\n    voiceInstructions:\n      json[\"voice_instructions\"] == null\n        ? undefined\n        : json[\"voice_instructions\"],\n    filters:\n      json[\"filters\"] == null\n        ? undefined\n        : AnnotationFiltersFromJSON(json[\"filters\"]),\n    id: json[\"id\"] == null ? undefined : json[\"id\"],\n    locations: (json[\"locations\"] as Array<any>).map(CoordinateFromJSON),\n    costing: MatrixCostingModelFromJSON(json[\"costing\"]),\n    costingOptions:\n      json[\"costing_options\"] == null\n        ? undefined\n        : CostingOptionsFromJSON(json[\"costing_options\"]),\n    elevationInterval:\n      json[\"elevation_interval\"] == null\n        ? undefined\n        : json[\"elevation_interval\"],\n  };\n}\n\nexport function OptimizedRouteRequestToJSON(json: any): OptimizedRouteRequest {\n  return OptimizedRouteRequestToJSONTyped(json, false);\n}\n\nexport function OptimizedRouteRequestToJSONTyped(\n  value?: OptimizedRouteRequest | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    units: DistanceUnitToJSON(value[\"units\"]),\n    language: RoutingLanguagesToJSON(value[\"language\"]),\n    directions_type: value[\"directionsType\"],\n    format: value[\"format\"],\n    banner_instructions: value[\"bannerInstructions\"],\n    voice_instructions: value[\"voiceInstructions\"],\n    filters: AnnotationFiltersToJSON(value[\"filters\"]),\n    id: value[\"id\"],\n    locations: (value[\"locations\"] as Array<any>).map(CoordinateToJSON),\n    costing: MatrixCostingModelToJSON(value[\"costing\"]),\n    costing_options: CostingOptionsToJSON(value[\"costingOptions\"]),\n    elevation_interval: value[\"elevationInterval\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface OsrmAdmin\n */\nexport interface OsrmAdmin {\n  /**\n   * The ISO 3166-1 two-character code for the admin region.\n   * @type {string}\n   * @memberof OsrmAdmin\n   */\n  iso31661?: string;\n  /**\n   * The ISO 3166-1 three-character code for the admin region.\n   * @type {string}\n   * @memberof OsrmAdmin\n   */\n  iso31661Alpha3?: string;\n}\n\n/**\n * Check if a given object implements the OsrmAdmin interface.\n */\nexport function instanceOfOsrmAdmin(value: object): value is OsrmAdmin {\n  return true;\n}\n\nexport function OsrmAdminFromJSON(json: any): OsrmAdmin {\n  return OsrmAdminFromJSONTyped(json, false);\n}\n\nexport function OsrmAdminFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): OsrmAdmin {\n  if (json == null) {\n    return json;\n  }\n  return {\n    iso31661: json[\"iso_3166_1\"] == null ? undefined : json[\"iso_3166_1\"],\n    iso31661Alpha3:\n      json[\"iso_3166_1_alpha3\"] == null ? undefined : json[\"iso_3166_1_alpha3\"],\n  };\n}\n\nexport function OsrmAdminToJSON(json: any): OsrmAdmin {\n  return OsrmAdminToJSONTyped(json, false);\n}\n\nexport function OsrmAdminToJSONTyped(\n  value?: OsrmAdmin | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    iso_3166_1: value[\"iso31661\"],\n    iso_3166_1_alpha3: value[\"iso31661Alpha3\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n * The speed limit between the pair of coordinates.\n * @export\n * @interface OsrmSpeedLimit\n */\nexport interface OsrmSpeedLimit {\n  /**\n   *\n   * @type {number}\n   * @memberof OsrmSpeedLimit\n   */\n  speed?: number;\n  /**\n   * The unit of measure for the speed. Always included if speed is present.\n   * @type {string}\n   * @memberof OsrmSpeedLimit\n   */\n  unit?: OsrmSpeedLimitUnitEnum;\n  /**\n   * True if the speed limit is not known.\n   * @type {boolean}\n   * @memberof OsrmSpeedLimit\n   */\n  unknown?: boolean;\n  /**\n   * True if there is no explicit speed limit (ex: some Autobahn sections)\n   * @type {boolean}\n   * @memberof OsrmSpeedLimit\n   */\n  none?: boolean;\n}\n\n/**\n * @export\n */\nexport const OsrmSpeedLimitUnitEnum = {\n  KmH: \"km/h\",\n  Mph: \"mph\",\n} as const;\nexport type OsrmSpeedLimitUnitEnum =\n  (typeof OsrmSpeedLimitUnitEnum)[keyof typeof OsrmSpeedLimitUnitEnum];\n\n/**\n * Check if a given object implements the OsrmSpeedLimit interface.\n */\nexport function instanceOfOsrmSpeedLimit(\n  value: object,\n): value is OsrmSpeedLimit {\n  return true;\n}\n\nexport function OsrmSpeedLimitFromJSON(json: any): OsrmSpeedLimit {\n  return OsrmSpeedLimitFromJSONTyped(json, false);\n}\n\nexport function OsrmSpeedLimitFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): OsrmSpeedLimit {\n  if (json == null) {\n    return json;\n  }\n  return {\n    speed: json[\"speed\"] == null ? undefined : json[\"speed\"],\n    unit: json[\"unit\"] == null ? undefined : json[\"unit\"],\n    unknown: json[\"unknown\"] == null ? undefined : json[\"unknown\"],\n    none: json[\"none\"] == null ? undefined : json[\"none\"],\n  };\n}\n\nexport function OsrmSpeedLimitToJSON(json: any): OsrmSpeedLimit {\n  return OsrmSpeedLimitToJSONTyped(json, false);\n}\n\nexport function OsrmSpeedLimitToJSONTyped(\n  value?: OsrmSpeedLimit | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    speed: value[\"speed\"],\n    unit: value[\"unit\"],\n    unknown: value[\"unknown\"],\n    none: value[\"none\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { OsrmSpeedLimit } from \"./OsrmSpeedLimit\";\nimport {\n  OsrmSpeedLimitFromJSON,\n  OsrmSpeedLimitFromJSONTyped,\n  OsrmSpeedLimitToJSON,\n  OsrmSpeedLimitToJSONTyped,\n} from \"./OsrmSpeedLimit\";\n\n/**\n *\n * @export\n * @interface OsrmAnnotation\n */\nexport interface OsrmAnnotation {\n  /**\n   * The distance, in meters, between each pair of coordinates.\n   * @type {Array<number>}\n   * @memberof OsrmAnnotation\n   */\n  distance?: Array<number>;\n  /**\n   * The duration between each pair of coordinates, in seconds.\n   * @type {Array<number>}\n   * @memberof OsrmAnnotation\n   */\n  duration?: Array<number>;\n  /**\n   *\n   * @type {Array<number>}\n   * @memberof OsrmAnnotation\n   */\n  weight?: Array<number>;\n  /**\n   * The estimated speed of travel between each pair of coordinates in meters/sec.\n   * @type {Array<number>}\n   * @memberof OsrmAnnotation\n   */\n  speed?: Array<number>;\n  /**\n   *\n   * @type {Array<OsrmSpeedLimit>}\n   * @memberof OsrmAnnotation\n   */\n  maxspeed?: Array<OsrmSpeedLimit>;\n}\n\n/**\n * Check if a given object implements the OsrmAnnotation interface.\n */\nexport function instanceOfOsrmAnnotation(\n  value: object,\n): value is OsrmAnnotation {\n  return true;\n}\n\nexport function OsrmAnnotationFromJSON(json: any): OsrmAnnotation {\n  return OsrmAnnotationFromJSONTyped(json, false);\n}\n\nexport function OsrmAnnotationFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): OsrmAnnotation {\n  if (json == null) {\n    return json;\n  }\n  return {\n    distance: json[\"distance\"] == null ? undefined : json[\"distance\"],\n    duration: json[\"duration\"] == null ? undefined : json[\"duration\"],\n    weight: json[\"weight\"] == null ? undefined : json[\"weight\"],\n    speed: json[\"speed\"] == null ? undefined : json[\"speed\"],\n    maxspeed:\n      json[\"maxspeed\"] == null\n        ? undefined\n        : (json[\"maxspeed\"] as Array<any>).map(OsrmSpeedLimitFromJSON),\n  };\n}\n\nexport function OsrmAnnotationToJSON(json: any): OsrmAnnotation {\n  return OsrmAnnotationToJSONTyped(json, false);\n}\n\nexport function OsrmAnnotationToJSONTyped(\n  value?: OsrmAnnotation | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    distance: value[\"distance\"],\n    duration: value[\"duration\"],\n    weight: value[\"weight\"],\n    speed: value[\"speed\"],\n    maxspeed:\n      value[\"maxspeed\"] == null\n        ? undefined\n        : (value[\"maxspeed\"] as Array<any>).map(OsrmSpeedLimitToJSON),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface OsrmBannerComponent\n */\nexport interface OsrmBannerComponent {\n  /**\n   *\n   * @type {string}\n   * @memberof OsrmBannerComponent\n   */\n  text?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof OsrmBannerComponent\n   */\n  type?: OsrmBannerComponentTypeEnum;\n}\n\n/**\n * @export\n */\nexport const OsrmBannerComponentTypeEnum = {\n  Text: \"text\",\n  Icon: \"icon\",\n  Delimiter: \"delimiter\",\n  ExitNumber: \"exit-number\",\n  Exit: \"exit\",\n  Lane: \"lane\",\n} as const;\nexport type OsrmBannerComponentTypeEnum =\n  (typeof OsrmBannerComponentTypeEnum)[keyof typeof OsrmBannerComponentTypeEnum];\n\n/**\n * Check if a given object implements the OsrmBannerComponent interface.\n */\nexport function instanceOfOsrmBannerComponent(\n  value: object,\n): value is OsrmBannerComponent {\n  return true;\n}\n\nexport function OsrmBannerComponentFromJSON(json: any): OsrmBannerComponent {\n  return OsrmBannerComponentFromJSONTyped(json, false);\n}\n\nexport function OsrmBannerComponentFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): OsrmBannerComponent {\n  if (json == null) {\n    return json;\n  }\n  return {\n    text: json[\"text\"] == null ? undefined : json[\"text\"],\n    type: json[\"type\"] == null ? undefined : json[\"type\"],\n  };\n}\n\nexport function OsrmBannerComponentToJSON(json: any): OsrmBannerComponent {\n  return OsrmBannerComponentToJSONTyped(json, false);\n}\n\nexport function OsrmBannerComponentToJSONTyped(\n  value?: OsrmBannerComponent | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    text: value[\"text\"],\n    type: value[\"type\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n * An optional value indicating the directional change of the maneuver (further clarifying type).\n * @export\n */\nexport const OsrmGuidanceModifier = {\n  Uturn: \"uturn\",\n  SharpRight: \"sharp right\",\n  Right: \"right\",\n  SlightRight: \"slight right\",\n  Straight: \"straight\",\n  SlightLeft: \"slight left\",\n  Left: \"left\",\n  SharpLeft: \"sharp left\",\n} as const;\nexport type OsrmGuidanceModifier =\n  (typeof OsrmGuidanceModifier)[keyof typeof OsrmGuidanceModifier];\n\nexport function instanceOfOsrmGuidanceModifier(value: any): boolean {\n  for (const key in OsrmGuidanceModifier) {\n    if (Object.prototype.hasOwnProperty.call(OsrmGuidanceModifier, key)) {\n      if (\n        OsrmGuidanceModifier[key as keyof typeof OsrmGuidanceModifier] === value\n      ) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function OsrmGuidanceModifierFromJSON(json: any): OsrmGuidanceModifier {\n  return OsrmGuidanceModifierFromJSONTyped(json, false);\n}\n\nexport function OsrmGuidanceModifierFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): OsrmGuidanceModifier {\n  return json as OsrmGuidanceModifier;\n}\n\nexport function OsrmGuidanceModifierToJSON(\n  value?: OsrmGuidanceModifier | null,\n): any {\n  return value as any;\n}\n\nexport function OsrmGuidanceModifierToJSONTyped(\n  value: any,\n  ignoreDiscriminator: boolean,\n): OsrmGuidanceModifier {\n  return value as OsrmGuidanceModifier;\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { OsrmGuidanceModifier } from \"./OsrmGuidanceModifier\";\nimport {\n  OsrmGuidanceModifierFromJSON,\n  OsrmGuidanceModifierFromJSONTyped,\n  OsrmGuidanceModifierToJSON,\n  OsrmGuidanceModifierToJSONTyped,\n} from \"./OsrmGuidanceModifier\";\nimport type { OsrmBannerComponent } from \"./OsrmBannerComponent\";\nimport {\n  OsrmBannerComponentFromJSON,\n  OsrmBannerComponentFromJSONTyped,\n  OsrmBannerComponentToJSON,\n  OsrmBannerComponentToJSONTyped,\n} from \"./OsrmBannerComponent\";\n\n/**\n *\n * @export\n * @interface OsrmBannerContent\n */\nexport interface OsrmBannerContent {\n  /**\n   *\n   * @type {string}\n   * @memberof OsrmBannerContent\n   */\n  text: string;\n  /**\n   *\n   * @type {string}\n   * @memberof OsrmBannerContent\n   */\n  type?: OsrmBannerContentTypeEnum;\n  /**\n   *\n   * @type {OsrmGuidanceModifier}\n   * @memberof OsrmBannerContent\n   */\n  modifier?: OsrmGuidanceModifier | null;\n  /**\n   * A list of objects with additional context that allow for visual layout improvements beyond what's possible with plain text.\n   * @type {Array<OsrmBannerComponent>}\n   * @memberof OsrmBannerContent\n   */\n  components?: Array<OsrmBannerComponent>;\n}\n\n/**\n * @export\n */\nexport const OsrmBannerContentTypeEnum = {\n  Turn: \"turn\",\n  NewName: \"new name\",\n  Depart: \"depart\",\n  Arrive: \"arrive\",\n  Merge: \"merge\",\n  OnRamp: \"on ramp\",\n  OffRamp: \"off ramp\",\n  Fork: \"fork\",\n  EndOfRoad: \"end of road\",\n  Continue: \"continue\",\n  Roundabout: \"roundabout\",\n  Rotary: \"rotary\",\n  RoundaboutTurn: \"roundabout turn\",\n  Notification: \"notification\",\n  ExitRoundabout: \"exit roundabout\",\n  ExitRotary: \"exit rotary\",\n} as const;\nexport type OsrmBannerContentTypeEnum =\n  (typeof OsrmBannerContentTypeEnum)[keyof typeof OsrmBannerContentTypeEnum];\n\n/**\n * Check if a given object implements the OsrmBannerContent interface.\n */\nexport function instanceOfOsrmBannerContent(\n  value: object,\n): value is OsrmBannerContent {\n  if (!(\"text\" in value) || value[\"text\"] === undefined) return false;\n  return true;\n}\n\nexport function OsrmBannerContentFromJSON(json: any): OsrmBannerContent {\n  return OsrmBannerContentFromJSONTyped(json, false);\n}\n\nexport function OsrmBannerContentFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): OsrmBannerContent {\n  if (json == null) {\n    return json;\n  }\n  return {\n    text: json[\"text\"],\n    type: json[\"type\"] == null ? undefined : json[\"type\"],\n    modifier:\n      json[\"modifier\"] == null\n        ? undefined\n        : OsrmGuidanceModifierFromJSON(json[\"modifier\"]),\n    components:\n      json[\"components\"] == null\n        ? undefined\n        : (json[\"components\"] as Array<any>).map(OsrmBannerComponentFromJSON),\n  };\n}\n\nexport function OsrmBannerContentToJSON(json: any): OsrmBannerContent {\n  return OsrmBannerContentToJSONTyped(json, false);\n}\n\nexport function OsrmBannerContentToJSONTyped(\n  value?: OsrmBannerContent | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    text: value[\"text\"],\n    type: value[\"type\"],\n    modifier: OsrmGuidanceModifierToJSON(value[\"modifier\"]),\n    components:\n      value[\"components\"] == null\n        ? undefined\n        : (value[\"components\"] as Array<any>).map(OsrmBannerComponentToJSON),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { OsrmBannerContent } from \"./OsrmBannerContent\";\nimport {\n  OsrmBannerContentFromJSON,\n  OsrmBannerContentFromJSONTyped,\n  OsrmBannerContentToJSON,\n  OsrmBannerContentToJSONTyped,\n} from \"./OsrmBannerContent\";\n\n/**\n *\n * @export\n * @interface OsrmBannerInstruction\n */\nexport interface OsrmBannerInstruction {\n  /**\n   * How far (in meters) from the upcoming maneuver the instruction should start being displayed.\n   * @type {number}\n   * @memberof OsrmBannerInstruction\n   */\n  distanceAlongGeometry: number;\n  /**\n   *\n   * @type {OsrmBannerContent}\n   * @memberof OsrmBannerInstruction\n   */\n  primary: OsrmBannerContent;\n  /**\n   *\n   * @type {OsrmBannerContent}\n   * @memberof OsrmBannerInstruction\n   */\n  secondary?: OsrmBannerContent;\n}\n\n/**\n * Check if a given object implements the OsrmBannerInstruction interface.\n */\nexport function instanceOfOsrmBannerInstruction(\n  value: object,\n): value is OsrmBannerInstruction {\n  if (\n    !(\"distanceAlongGeometry\" in value) ||\n    value[\"distanceAlongGeometry\"] === undefined\n  )\n    return false;\n  if (!(\"primary\" in value) || value[\"primary\"] === undefined) return false;\n  return true;\n}\n\nexport function OsrmBannerInstructionFromJSON(\n  json: any,\n): OsrmBannerInstruction {\n  return OsrmBannerInstructionFromJSONTyped(json, false);\n}\n\nexport function OsrmBannerInstructionFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): OsrmBannerInstruction {\n  if (json == null) {\n    return json;\n  }\n  return {\n    distanceAlongGeometry: json[\"distanceAlongGeometry\"],\n    primary: OsrmBannerContentFromJSON(json[\"primary\"]),\n    secondary:\n      json[\"secondary\"] == null\n        ? undefined\n        : OsrmBannerContentFromJSON(json[\"secondary\"]),\n  };\n}\n\nexport function OsrmBannerInstructionToJSON(json: any): OsrmBannerInstruction {\n  return OsrmBannerInstructionToJSONTyped(json, false);\n}\n\nexport function OsrmBannerInstructionToJSONTyped(\n  value?: OsrmBannerInstruction | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    distanceAlongGeometry: value[\"distanceAlongGeometry\"],\n    primary: OsrmBannerContentToJSON(value[\"primary\"]),\n    secondary: OsrmBannerContentToJSON(value[\"secondary\"]),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface OsrmBaseApiResponse\n */\nexport interface OsrmBaseApiResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof OsrmBaseApiResponse\n   */\n  code: OsrmBaseApiResponseCodeEnum;\n  /**\n   *\n   * @type {string}\n   * @memberof OsrmBaseApiResponse\n   */\n  message?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof OsrmBaseApiResponse\n   */\n  dataVersion?: string;\n}\n\n/**\n * @export\n */\nexport const OsrmBaseApiResponseCodeEnum = {\n  Ok: \"Ok\",\n  InvalidUrl: \"InvalidUrl\",\n  InvalidService: \"InvalidService\",\n  InvalidVersion: \"InvalidVersion\",\n  InvalidOptions: \"InvalidOptions\",\n  InvalidQuery: \"InvalidQuery\",\n  InvalidValue: \"InvalidValue\",\n  NoSegment: \"NoSegment\",\n  TooBig: \"TooBig\",\n  NoRoute: \"NoRoute\",\n  NoTable: \"NoTable\",\n  NotImplemented: \"NotImplemented\",\n  NoTrips: \"NoTrips\",\n} as const;\nexport type OsrmBaseApiResponseCodeEnum =\n  (typeof OsrmBaseApiResponseCodeEnum)[keyof typeof OsrmBaseApiResponseCodeEnum];\n\n/**\n * Check if a given object implements the OsrmBaseApiResponse interface.\n */\nexport function instanceOfOsrmBaseApiResponse(\n  value: object,\n): value is OsrmBaseApiResponse {\n  if (!(\"code\" in value) || value[\"code\"] === undefined) return false;\n  return true;\n}\n\nexport function OsrmBaseApiResponseFromJSON(json: any): OsrmBaseApiResponse {\n  return OsrmBaseApiResponseFromJSONTyped(json, false);\n}\n\nexport function OsrmBaseApiResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): OsrmBaseApiResponse {\n  if (json == null) {\n    return json;\n  }\n  return {\n    code: json[\"code\"],\n    message: json[\"message\"] == null ? undefined : json[\"message\"],\n    dataVersion:\n      json[\"data_version\"] == null ? undefined : json[\"data_version\"],\n  };\n}\n\nexport function OsrmBaseApiResponseToJSON(json: any): OsrmBaseApiResponse {\n  return OsrmBaseApiResponseToJSONTyped(json, false);\n}\n\nexport function OsrmBaseApiResponseToJSONTyped(\n  value?: OsrmBaseApiResponse | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    code: value[\"code\"],\n    message: value[\"message\"],\n    data_version: value[\"dataVersion\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface OsrmLane\n */\nexport interface OsrmLane {\n  /**\n   * A list of indication (e.g. marking on the road) specifying the turn lane. A road can have multiple indications (e.g. an arrow pointing straight and left).\n   * @type {Array<string>}\n   * @memberof OsrmLane\n   */\n  indications: Array<OsrmLaneIndicationsEnum>;\n  /**\n   * True if the lane is a valid choice for the current maneuver.\n   * @type {boolean}\n   * @memberof OsrmLane\n   */\n  valid: boolean;\n}\n\n/**\n * @export\n */\nexport const OsrmLaneIndicationsEnum = {\n  None: \"none\",\n  Uturn: \"uturn\",\n  SharpRight: \"sharp right\",\n  Right: \"right\",\n  SlightRight: \"slight right\",\n  Straight: \"straight\",\n  SlightLeft: \"slight left\",\n  Left: \"left\",\n  SharpLeft: \"sharp left\",\n} as const;\nexport type OsrmLaneIndicationsEnum =\n  (typeof OsrmLaneIndicationsEnum)[keyof typeof OsrmLaneIndicationsEnum];\n\n/**\n * Check if a given object implements the OsrmLane interface.\n */\nexport function instanceOfOsrmLane(value: object): value is OsrmLane {\n  if (!(\"indications\" in value) || value[\"indications\"] === undefined)\n    return false;\n  if (!(\"valid\" in value) || value[\"valid\"] === undefined) return false;\n  return true;\n}\n\nexport function OsrmLaneFromJSON(json: any): OsrmLane {\n  return OsrmLaneFromJSONTyped(json, false);\n}\n\nexport function OsrmLaneFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): OsrmLane {\n  if (json == null) {\n    return json;\n  }\n  return {\n    indications: json[\"indications\"],\n    valid: json[\"valid\"],\n  };\n}\n\nexport function OsrmLaneToJSON(json: any): OsrmLane {\n  return OsrmLaneToJSONTyped(json, false);\n}\n\nexport function OsrmLaneToJSONTyped(\n  value?: OsrmLane | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    indications: value[\"indications\"],\n    valid: value[\"valid\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { OsrmLane } from \"./OsrmLane\";\nimport {\n  OsrmLaneFromJSON,\n  OsrmLaneFromJSONTyped,\n  OsrmLaneToJSON,\n  OsrmLaneToJSONTyped,\n} from \"./OsrmLane\";\n\n/**\n * Detailed information about intersections that the route traverses. For every step, the first intersection is at the location of the maneuver. Additional intersections will be provided for every road or path traversed until the next step.\n * @export\n * @interface OsrmIntersection\n */\nexport interface OsrmIntersection {\n  /**\n   * A (longitude, latitude) coordinate pair.\n   * @type {Array<number>}\n   * @memberof OsrmIntersection\n   */\n  location: Array<number>;\n  /**\n   * A list of bearing values that are available for travel through the intersection.\n   * @type {Array<number>}\n   * @memberof OsrmIntersection\n   */\n  bearings: Array<number>;\n  /**\n   *\n   * @type {Array<string>}\n   * @memberof OsrmIntersection\n   */\n  classes?: Array<OsrmIntersectionClassesEnum>;\n  /**\n   * A list of entry flags, which map 1:1 to the bearings. A value of true indicates that the respective road could be entered on a valid route. False indicates that the turn onto the respective road would violate a restriction.\n   * @type {Array<boolean>}\n   * @memberof OsrmIntersection\n   */\n  entry: Array<boolean>;\n  /**\n   * An index into bearings/entry array. Used to calculate the bearing just before the turn. Namely, the clockwise angle from true north to the direction of travel immediately before the maneuver/passing the intersection. Bearings are given relative to the intersection. To get the bearing in the direction of driving, the bearing has to be rotated by a value of 180. The value is not supplied for depart maneuvers.\n   * @type {number}\n   * @memberof OsrmIntersection\n   */\n  _in?: number;\n  /**\n   * An index into bearings/entry array. Used to calculate the bearing just after the turn. Namely, the clockwise angle from true north to the direction of travel immediately after the maneuver/passing the intersection. This is not supplied for arrive maneuvers.\n   * @type {number}\n   * @memberof OsrmIntersection\n   */\n  out?: number;\n  /**\n   * Available turn lanes at the intersection. May be omitted if no lane information is available for the intersection.\n   * @type {Array<OsrmLane>}\n   * @memberof OsrmIntersection\n   */\n  lanes?: Array<OsrmLane>;\n  /**\n   * The index into the admin boundaries list on the route leg.\n   * @type {number}\n   * @memberof OsrmIntersection\n   */\n  adminIndex?: number;\n  /**\n   * The estimated duration, in seconds, to traverse the intersection.\n   * @type {number}\n   * @memberof OsrmIntersection\n   */\n  duration?: number;\n  /**\n   * The estimated duration, in seconds, to complete the turn.\n   * @type {number}\n   * @memberof OsrmIntersection\n   */\n  turnDuration?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof OsrmIntersection\n   */\n  turnWeight?: number;\n  /**\n   * The index of the intersection in the leg geometry.\n   * @type {number}\n   * @memberof OsrmIntersection\n   */\n  geometryIndex?: number;\n  /**\n   *\n   * @type {number}\n   * @memberof OsrmIntersection\n   */\n  weight?: number;\n}\n\n/**\n * @export\n */\nexport const OsrmIntersectionClassesEnum = {\n  Toll: \"toll\",\n  Ferry: \"ferry\",\n  Restricted: \"restricted\",\n  Motorway: \"motorway\",\n  Tunnel: \"tunnel\",\n} as const;\nexport type OsrmIntersectionClassesEnum =\n  (typeof OsrmIntersectionClassesEnum)[keyof typeof OsrmIntersectionClassesEnum];\n\n/**\n * Check if a given object implements the OsrmIntersection interface.\n */\nexport function instanceOfOsrmIntersection(\n  value: object,\n): value is OsrmIntersection {\n  if (!(\"location\" in value) || value[\"location\"] === undefined) return false;\n  if (!(\"bearings\" in value) || value[\"bearings\"] === undefined) return false;\n  if (!(\"entry\" in value) || value[\"entry\"] === undefined) return false;\n  return true;\n}\n\nexport function OsrmIntersectionFromJSON(json: any): OsrmIntersection {\n  return OsrmIntersectionFromJSONTyped(json, false);\n}\n\nexport function OsrmIntersectionFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): OsrmIntersection {\n  if (json == null) {\n    return json;\n  }\n  return {\n    location: json[\"location\"],\n    bearings: json[\"bearings\"],\n    classes: json[\"classes\"] == null ? undefined : json[\"classes\"],\n    entry: json[\"entry\"],\n    _in: json[\"in\"] == null ? undefined : json[\"in\"],\n    out: json[\"out\"] == null ? undefined : json[\"out\"],\n    lanes:\n      json[\"lanes\"] == null\n        ? undefined\n        : (json[\"lanes\"] as Array<any>).map(OsrmLaneFromJSON),\n    adminIndex: json[\"admin_index\"] == null ? undefined : json[\"admin_index\"],\n    duration: json[\"duration\"] == null ? undefined : json[\"duration\"],\n    turnDuration:\n      json[\"turn_duration\"] == null ? undefined : json[\"turn_duration\"],\n    turnWeight: json[\"turn_weight\"] == null ? undefined : json[\"turn_weight\"],\n    geometryIndex:\n      json[\"geometry_index\"] == null ? undefined : json[\"geometry_index\"],\n    weight: json[\"weight\"] == null ? undefined : json[\"weight\"],\n  };\n}\n\nexport function OsrmIntersectionToJSON(json: any): OsrmIntersection {\n  return OsrmIntersectionToJSONTyped(json, false);\n}\n\nexport function OsrmIntersectionToJSONTyped(\n  value?: OsrmIntersection | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    location: value[\"location\"],\n    bearings: value[\"bearings\"],\n    classes: value[\"classes\"],\n    entry: value[\"entry\"],\n    in: value[\"_in\"],\n    out: value[\"out\"],\n    lanes:\n      value[\"lanes\"] == null\n        ? undefined\n        : (value[\"lanes\"] as Array<any>).map(OsrmLaneToJSON),\n    admin_index: value[\"adminIndex\"],\n    duration: value[\"duration\"],\n    turn_duration: value[\"turnDuration\"],\n    turn_weight: value[\"turnWeight\"],\n    geometry_index: value[\"geometryIndex\"],\n    weight: value[\"weight\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface OsrmViaWaypoint\n */\nexport interface OsrmViaWaypoint {\n  /**\n   * The distance from the start of the leg, in meters.\n   * @type {number}\n   * @memberof OsrmViaWaypoint\n   */\n  distanceFromStart: number;\n  /**\n   * The index of the waypoint's location in the route geometry.\n   * @type {number}\n   * @memberof OsrmViaWaypoint\n   */\n  geometryIndex: number;\n  /**\n   * The index of the associated waypoint.\n   * @type {number}\n   * @memberof OsrmViaWaypoint\n   */\n  waypointIndex: number;\n}\n\n/**\n * Check if a given object implements the OsrmViaWaypoint interface.\n */\nexport function instanceOfOsrmViaWaypoint(\n  value: object,\n): value is OsrmViaWaypoint {\n  if (\n    !(\"distanceFromStart\" in value) ||\n    value[\"distanceFromStart\"] === undefined\n  )\n    return false;\n  if (!(\"geometryIndex\" in value) || value[\"geometryIndex\"] === undefined)\n    return false;\n  if (!(\"waypointIndex\" in value) || value[\"waypointIndex\"] === undefined)\n    return false;\n  return true;\n}\n\nexport function OsrmViaWaypointFromJSON(json: any): OsrmViaWaypoint {\n  return OsrmViaWaypointFromJSONTyped(json, false);\n}\n\nexport function OsrmViaWaypointFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): OsrmViaWaypoint {\n  if (json == null) {\n    return json;\n  }\n  return {\n    distanceFromStart: json[\"distance_from_start\"],\n    geometryIndex: json[\"geometry_index\"],\n    waypointIndex: json[\"waypoint_index\"],\n  };\n}\n\nexport function OsrmViaWaypointToJSON(json: any): OsrmViaWaypoint {\n  return OsrmViaWaypointToJSONTyped(json, false);\n}\n\nexport function OsrmViaWaypointToJSONTyped(\n  value?: OsrmViaWaypoint | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    distance_from_start: value[\"distanceFromStart\"],\n    geometry_index: value[\"geometryIndex\"],\n    waypoint_index: value[\"waypointIndex\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { OsrmGuidanceModifier } from \"./OsrmGuidanceModifier\";\nimport {\n  OsrmGuidanceModifierFromJSON,\n  OsrmGuidanceModifierFromJSONTyped,\n  OsrmGuidanceModifierToJSON,\n  OsrmGuidanceModifierToJSONTyped,\n} from \"./OsrmGuidanceModifier\";\n\n/**\n *\n * @export\n * @interface OsrmStepManeuver\n */\nexport interface OsrmStepManeuver {\n  /**\n   * A (longitude, latitude) coordinate pair.\n   * @type {Array<number>}\n   * @memberof OsrmStepManeuver\n   */\n  location: Array<number>;\n  /**\n   * A human-readable instruction for the maneuver.\n   * @type {string}\n   * @memberof OsrmStepManeuver\n   */\n  instruction?: string;\n  /**\n   * The clockwise angle from true north to the direction of travel immediately before the maneuver.\n   * @type {number}\n   * @memberof OsrmStepManeuver\n   */\n  bearingBefore: number;\n  /**\n   * The clockwise angle from true north to the direction of travel immediately after the maneuver.\n   * @type {number}\n   * @memberof OsrmStepManeuver\n   */\n  bearingAfter: number;\n  /**\n   *\n   * @type {string}\n   * @memberof OsrmStepManeuver\n   */\n  type: OsrmStepManeuverTypeEnum;\n  /**\n   *\n   * @type {OsrmGuidanceModifier}\n   * @memberof OsrmStepManeuver\n   */\n  modifier?: OsrmGuidanceModifier | null;\n  /**\n   * The exit number to take (for roundabouts, rotaries, and number of intersections).\n   * @type {number}\n   * @memberof OsrmStepManeuver\n   */\n  exit?: number;\n}\n\n/**\n * @export\n */\nexport const OsrmStepManeuverTypeEnum = {\n  Turn: \"turn\",\n  NewName: \"new name\",\n  Depart: \"depart\",\n  Arrive: \"arrive\",\n  Merge: \"merge\",\n  Ramp: \"ramp\",\n  OnRamp: \"on ramp\",\n  OffRamp: \"off ramp\",\n  Fork: \"fork\",\n  EndOfRoad: \"end of road\",\n  UseLane: \"use lane\",\n  Continue: \"continue\",\n  Roundabout: \"roundabout\",\n  Rotary: \"rotary\",\n  RoundaboutTurn: \"roundabout turn\",\n  Notification: \"notification\",\n  ExitRoundabout: \"exit roundabout\",\n  ExitRotary: \"exit rotary\",\n} as const;\nexport type OsrmStepManeuverTypeEnum =\n  (typeof OsrmStepManeuverTypeEnum)[keyof typeof OsrmStepManeuverTypeEnum];\n\n/**\n * Check if a given object implements the OsrmStepManeuver interface.\n */\nexport function instanceOfOsrmStepManeuver(\n  value: object,\n): value is OsrmStepManeuver {\n  if (!(\"location\" in value) || value[\"location\"] === undefined) return false;\n  if (!(\"bearingBefore\" in value) || value[\"bearingBefore\"] === undefined)\n    return false;\n  if (!(\"bearingAfter\" in value) || value[\"bearingAfter\"] === undefined)\n    return false;\n  if (!(\"type\" in value) || value[\"type\"] === undefined) return false;\n  return true;\n}\n\nexport function OsrmStepManeuverFromJSON(json: any): OsrmStepManeuver {\n  return OsrmStepManeuverFromJSONTyped(json, false);\n}\n\nexport function OsrmStepManeuverFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): OsrmStepManeuver {\n  if (json == null) {\n    return json;\n  }\n  return {\n    location: json[\"location\"],\n    instruction: json[\"instruction\"] == null ? undefined : json[\"instruction\"],\n    bearingBefore: json[\"bearing_before\"],\n    bearingAfter: json[\"bearing_after\"],\n    type: json[\"type\"],\n    modifier:\n      json[\"modifier\"] == null\n        ? undefined\n        : OsrmGuidanceModifierFromJSON(json[\"modifier\"]),\n    exit: json[\"exit\"] == null ? undefined : json[\"exit\"],\n  };\n}\n\nexport function OsrmStepManeuverToJSON(json: any): OsrmStepManeuver {\n  return OsrmStepManeuverToJSONTyped(json, false);\n}\n\nexport function OsrmStepManeuverToJSONTyped(\n  value?: OsrmStepManeuver | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    location: value[\"location\"],\n    instruction: value[\"instruction\"],\n    bearing_before: value[\"bearingBefore\"],\n    bearing_after: value[\"bearingAfter\"],\n    type: value[\"type\"],\n    modifier: OsrmGuidanceModifierToJSON(value[\"modifier\"]),\n    exit: value[\"exit\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface OsrmVoiceInstruction\n */\nexport interface OsrmVoiceInstruction {\n  /**\n   * How far (in meters) from the upcoming maneuver the instruction should be announced.\n   * @type {number}\n   * @memberof OsrmVoiceInstruction\n   */\n  distanceAlongGeometry: number;\n  /**\n   * The plain-text announcement.\n   * @type {string}\n   * @memberof OsrmVoiceInstruction\n   */\n  announcement: string;\n  /**\n   * The announcement in Speech Synthesis Markup Language (SSML). Supported TTS engines include Amazon Polly and Apple's AVSpeechSynthesizer.\n   * @type {string}\n   * @memberof OsrmVoiceInstruction\n   */\n  ssmlAnnouncement?: string;\n}\n\n/**\n * Check if a given object implements the OsrmVoiceInstruction interface.\n */\nexport function instanceOfOsrmVoiceInstruction(\n  value: object,\n): value is OsrmVoiceInstruction {\n  if (\n    !(\"distanceAlongGeometry\" in value) ||\n    value[\"distanceAlongGeometry\"] === undefined\n  )\n    return false;\n  if (!(\"announcement\" in value) || value[\"announcement\"] === undefined)\n    return false;\n  return true;\n}\n\nexport function OsrmVoiceInstructionFromJSON(json: any): OsrmVoiceInstruction {\n  return OsrmVoiceInstructionFromJSONTyped(json, false);\n}\n\nexport function OsrmVoiceInstructionFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): OsrmVoiceInstruction {\n  if (json == null) {\n    return json;\n  }\n  return {\n    distanceAlongGeometry: json[\"distanceAlongGeometry\"],\n    announcement: json[\"announcement\"],\n    ssmlAnnouncement:\n      json[\"ssmlAnnouncement\"] == null ? undefined : json[\"ssmlAnnouncement\"],\n  };\n}\n\nexport function OsrmVoiceInstructionToJSON(json: any): OsrmVoiceInstruction {\n  return OsrmVoiceInstructionToJSONTyped(json, false);\n}\n\nexport function OsrmVoiceInstructionToJSONTyped(\n  value?: OsrmVoiceInstruction | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    distanceAlongGeometry: value[\"distanceAlongGeometry\"],\n    announcement: value[\"announcement\"],\n    ssmlAnnouncement: value[\"ssmlAnnouncement\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { OsrmIntersection } from \"./OsrmIntersection\";\nimport {\n  OsrmIntersectionFromJSON,\n  OsrmIntersectionFromJSONTyped,\n  OsrmIntersectionToJSON,\n  OsrmIntersectionToJSONTyped,\n} from \"./OsrmIntersection\";\nimport type { OsrmStepManeuver } from \"./OsrmStepManeuver\";\nimport {\n  OsrmStepManeuverFromJSON,\n  OsrmStepManeuverFromJSONTyped,\n  OsrmStepManeuverToJSON,\n  OsrmStepManeuverToJSONTyped,\n} from \"./OsrmStepManeuver\";\nimport type { OsrmBannerInstruction } from \"./OsrmBannerInstruction\";\nimport {\n  OsrmBannerInstructionFromJSON,\n  OsrmBannerInstructionFromJSONTyped,\n  OsrmBannerInstructionToJSON,\n  OsrmBannerInstructionToJSONTyped,\n} from \"./OsrmBannerInstruction\";\nimport type { OsrmVoiceInstruction } from \"./OsrmVoiceInstruction\";\nimport {\n  OsrmVoiceInstructionFromJSON,\n  OsrmVoiceInstructionFromJSONTyped,\n  OsrmVoiceInstructionToJSON,\n  OsrmVoiceInstructionToJSONTyped,\n} from \"./OsrmVoiceInstruction\";\n\n/**\n * A maneuver such as a turn or merge, followed by travel along a single road or path.\n * @export\n * @interface OsrmRouteStep\n */\nexport interface OsrmRouteStep {\n  /**\n   * The distance traveled by the route, in meters.\n   * @type {number}\n   * @memberof OsrmRouteStep\n   */\n  distance: number;\n  /**\n   * The estimated travel time, in number of seconds.\n   * @type {number}\n   * @memberof OsrmRouteStep\n   */\n  duration: number;\n  /**\n   * An encoded polyline (https://developers.google.com/maps/documentation/utilities/polylinealgorithm) with 6 digits of decimal precision (NOTE: most implementations default to 5).\n   * @type {string}\n   * @memberof OsrmRouteStep\n   */\n  geometry: string;\n  /**\n   *\n   * @type {number}\n   * @memberof OsrmRouteStep\n   */\n  weight?: number;\n  /**\n   * The name of the segment (ex: road) being traversed\n   * @type {string}\n   * @memberof OsrmRouteStep\n   */\n  name?: string;\n  /**\n   * A reference number of code for the segment being traversed.\n   * @type {string}\n   * @memberof OsrmRouteStep\n   */\n  ref?: string;\n  /**\n   * Pronunciation of the name (if available). The format of this varies by implementation/vendor.\n   * @type {string}\n   * @memberof OsrmRouteStep\n   */\n  pronunciation?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof OsrmRouteStep\n   */\n  destinations?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof OsrmRouteStep\n   */\n  exits?: string;\n  /**\n   * The mode of travel.\n   * @type {string}\n   * @memberof OsrmRouteStep\n   */\n  mode: string;\n  /**\n   *\n   * @type {OsrmStepManeuver}\n   * @memberof OsrmRouteStep\n   */\n  maneuver: OsrmStepManeuver;\n  /**\n   *\n   * @type {Array<OsrmIntersection>}\n   * @memberof OsrmRouteStep\n   */\n  intersections?: Array<OsrmIntersection>;\n  /**\n   * The name of the traffic circle.\n   * @type {string}\n   * @memberof OsrmRouteStep\n   */\n  rotaryName?: string;\n  /**\n   * Pronunciation of the rotary name (if available). The format of this varies by implementation/vendor.\n   * @type {string}\n   * @memberof OsrmRouteStep\n   */\n  rotaryPronunciation?: string;\n  /**\n   * The side of the road on which driving is legal for this step.\n   * @type {string}\n   * @memberof OsrmRouteStep\n   */\n  drivingSide?: OsrmRouteStepDrivingSideEnum;\n  /**\n   * A list of announcements which should be spoken at various points along the maneuver.\n   * @type {Array<OsrmVoiceInstruction>}\n   * @memberof OsrmRouteStep\n   */\n  voiceInstructions?: Array<OsrmVoiceInstruction>;\n  /**\n   * A list of announcements which should be displayed prominently on screen at various points along the maneuver.\n   * @type {Array<OsrmBannerInstruction>}\n   * @memberof OsrmRouteStep\n   */\n  bannerInstructions?: Array<OsrmBannerInstruction>;\n  /**\n   * The style of speed limit signs used along the step.\n   * @type {string}\n   * @memberof OsrmRouteStep\n   */\n  speedLimitSign?: OsrmRouteStepSpeedLimitSignEnum;\n  /**\n   * The unit of measure that is used locally along the step. This may be different from the unit used in maxspeed annotations, and is provided so that apps can localize their display.\n   * @type {string}\n   * @memberof OsrmRouteStep\n   */\n  speedLimitUnit?: string;\n}\n\n/**\n * @export\n */\nexport const OsrmRouteStepDrivingSideEnum = {\n  Left: \"left\",\n  Right: \"right\",\n} as const;\nexport type OsrmRouteStepDrivingSideEnum =\n  (typeof OsrmRouteStepDrivingSideEnum)[keyof typeof OsrmRouteStepDrivingSideEnum];\n\n/**\n * @export\n */\nexport const OsrmRouteStepSpeedLimitSignEnum = {\n  Mutcd: \"mutcd\",\n  Vienna: \"vienna\",\n} as const;\nexport type OsrmRouteStepSpeedLimitSignEnum =\n  (typeof OsrmRouteStepSpeedLimitSignEnum)[keyof typeof OsrmRouteStepSpeedLimitSignEnum];\n\n/**\n * Check if a given object implements the OsrmRouteStep interface.\n */\nexport function instanceOfOsrmRouteStep(value: object): value is OsrmRouteStep {\n  if (!(\"distance\" in value) || value[\"distance\"] === undefined) return false;\n  if (!(\"duration\" in value) || value[\"duration\"] === undefined) return false;\n  if (!(\"geometry\" in value) || value[\"geometry\"] === undefined) return false;\n  if (!(\"mode\" in value) || value[\"mode\"] === undefined) return false;\n  if (!(\"maneuver\" in value) || value[\"maneuver\"] === undefined) return false;\n  return true;\n}\n\nexport function OsrmRouteStepFromJSON(json: any): OsrmRouteStep {\n  return OsrmRouteStepFromJSONTyped(json, false);\n}\n\nexport function OsrmRouteStepFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): OsrmRouteStep {\n  if (json == null) {\n    return json;\n  }\n  return {\n    distance: json[\"distance\"],\n    duration: json[\"duration\"],\n    geometry: json[\"geometry\"],\n    weight: json[\"weight\"] == null ? undefined : json[\"weight\"],\n    name: json[\"name\"] == null ? undefined : json[\"name\"],\n    ref: json[\"ref\"] == null ? undefined : json[\"ref\"],\n    pronunciation:\n      json[\"pronunciation\"] == null ? undefined : json[\"pronunciation\"],\n    destinations:\n      json[\"destinations\"] == null ? undefined : json[\"destinations\"],\n    exits: json[\"exits\"] == null ? undefined : json[\"exits\"],\n    mode: json[\"mode\"],\n    maneuver: OsrmStepManeuverFromJSON(json[\"maneuver\"]),\n    intersections:\n      json[\"intersections\"] == null\n        ? undefined\n        : (json[\"intersections\"] as Array<any>).map(OsrmIntersectionFromJSON),\n    rotaryName: json[\"rotary_name\"] == null ? undefined : json[\"rotary_name\"],\n    rotaryPronunciation:\n      json[\"rotary_pronunciation\"] == null\n        ? undefined\n        : json[\"rotary_pronunciation\"],\n    drivingSide:\n      json[\"driving_side\"] == null ? undefined : json[\"driving_side\"],\n    voiceInstructions:\n      json[\"voiceInstructions\"] == null\n        ? undefined\n        : (json[\"voiceInstructions\"] as Array<any>).map(\n            OsrmVoiceInstructionFromJSON,\n          ),\n    bannerInstructions:\n      json[\"bannerInstructions\"] == null\n        ? undefined\n        : (json[\"bannerInstructions\"] as Array<any>).map(\n            OsrmBannerInstructionFromJSON,\n          ),\n    speedLimitSign:\n      json[\"speedLimitSign\"] == null ? undefined : json[\"speedLimitSign\"],\n    speedLimitUnit:\n      json[\"speedLimitUnit\"] == null ? undefined : json[\"speedLimitUnit\"],\n  };\n}\n\nexport function OsrmRouteStepToJSON(json: any): OsrmRouteStep {\n  return OsrmRouteStepToJSONTyped(json, false);\n}\n\nexport function OsrmRouteStepToJSONTyped(\n  value?: OsrmRouteStep | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    distance: value[\"distance\"],\n    duration: value[\"duration\"],\n    geometry: value[\"geometry\"],\n    weight: value[\"weight\"],\n    name: value[\"name\"],\n    ref: value[\"ref\"],\n    pronunciation: value[\"pronunciation\"],\n    destinations: value[\"destinations\"],\n    exits: value[\"exits\"],\n    mode: value[\"mode\"],\n    maneuver: OsrmStepManeuverToJSON(value[\"maneuver\"]),\n    intersections:\n      value[\"intersections\"] == null\n        ? undefined\n        : (value[\"intersections\"] as Array<any>).map(OsrmIntersectionToJSON),\n    rotary_name: value[\"rotaryName\"],\n    rotary_pronunciation: value[\"rotaryPronunciation\"],\n    driving_side: value[\"drivingSide\"],\n    voiceInstructions:\n      value[\"voiceInstructions\"] == null\n        ? undefined\n        : (value[\"voiceInstructions\"] as Array<any>).map(\n            OsrmVoiceInstructionToJSON,\n          ),\n    bannerInstructions:\n      value[\"bannerInstructions\"] == null\n        ? undefined\n        : (value[\"bannerInstructions\"] as Array<any>).map(\n            OsrmBannerInstructionToJSON,\n          ),\n    speedLimitSign: value[\"speedLimitSign\"],\n    speedLimitUnit: value[\"speedLimitUnit\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { OsrmViaWaypoint } from \"./OsrmViaWaypoint\";\nimport {\n  OsrmViaWaypointFromJSON,\n  OsrmViaWaypointFromJSONTyped,\n  OsrmViaWaypointToJSON,\n  OsrmViaWaypointToJSONTyped,\n} from \"./OsrmViaWaypoint\";\nimport type { OsrmAnnotation } from \"./OsrmAnnotation\";\nimport {\n  OsrmAnnotationFromJSON,\n  OsrmAnnotationFromJSONTyped,\n  OsrmAnnotationToJSON,\n  OsrmAnnotationToJSONTyped,\n} from \"./OsrmAnnotation\";\nimport type { OsrmAdmin } from \"./OsrmAdmin\";\nimport {\n  OsrmAdminFromJSON,\n  OsrmAdminFromJSONTyped,\n  OsrmAdminToJSON,\n  OsrmAdminToJSONTyped,\n} from \"./OsrmAdmin\";\nimport type { OsrmRouteStep } from \"./OsrmRouteStep\";\nimport {\n  OsrmRouteStepFromJSON,\n  OsrmRouteStepFromJSONTyped,\n  OsrmRouteStepToJSON,\n  OsrmRouteStepToJSONTyped,\n} from \"./OsrmRouteStep\";\n\n/**\n *\n * @export\n * @interface OsrmRouteLeg\n */\nexport interface OsrmRouteLeg {\n  /**\n   * The distance traveled by the route, in meters.\n   * @type {number}\n   * @memberof OsrmRouteLeg\n   */\n  distance: number;\n  /**\n   * The estimated travel time, in number of seconds.\n   * @type {number}\n   * @memberof OsrmRouteLeg\n   */\n  duration: number;\n  /**\n   * The total cost of the leg computed by the routing engine.\n   * @type {number}\n   * @memberof OsrmRouteLeg\n   */\n  weight?: number;\n  /**\n   *\n   * @type {string}\n   * @memberof OsrmRouteLeg\n   */\n  summary?: string;\n  /**\n   *\n   * @type {Array<OsrmRouteStep>}\n   * @memberof OsrmRouteLeg\n   */\n  steps: Array<OsrmRouteStep>;\n  /**\n   *\n   * @type {OsrmAnnotation}\n   * @memberof OsrmRouteLeg\n   */\n  annotation?: OsrmAnnotation;\n  /**\n   * Indicates which waypoints are passed through rather than creating a new leg.\n   * @type {Array<OsrmViaWaypoint>}\n   * @memberof OsrmRouteLeg\n   */\n  viaWaypoints?: Array<OsrmViaWaypoint> | null;\n  /**\n   * Administrative regions visited along the leg.\n   * @type {Array<OsrmAdmin>}\n   * @memberof OsrmRouteLeg\n   */\n  admins?: Array<OsrmAdmin>;\n}\n\n/**\n * Check if a given object implements the OsrmRouteLeg interface.\n */\nexport function instanceOfOsrmRouteLeg(value: object): value is OsrmRouteLeg {\n  if (!(\"distance\" in value) || value[\"distance\"] === undefined) return false;\n  if (!(\"duration\" in value) || value[\"duration\"] === undefined) return false;\n  if (!(\"steps\" in value) || value[\"steps\"] === undefined) return false;\n  return true;\n}\n\nexport function OsrmRouteLegFromJSON(json: any): OsrmRouteLeg {\n  return OsrmRouteLegFromJSONTyped(json, false);\n}\n\nexport function OsrmRouteLegFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): OsrmRouteLeg {\n  if (json == null) {\n    return json;\n  }\n  return {\n    distance: json[\"distance\"],\n    duration: json[\"duration\"],\n    weight: json[\"weight\"] == null ? undefined : json[\"weight\"],\n    summary: json[\"summary\"] == null ? undefined : json[\"summary\"],\n    steps: (json[\"steps\"] as Array<any>).map(OsrmRouteStepFromJSON),\n    annotation:\n      json[\"annotation\"] == null\n        ? undefined\n        : OsrmAnnotationFromJSON(json[\"annotation\"]),\n    viaWaypoints:\n      json[\"via_waypoints\"] == null\n        ? undefined\n        : (json[\"via_waypoints\"] as Array<any>).map(OsrmViaWaypointFromJSON),\n    admins:\n      json[\"admins\"] == null\n        ? undefined\n        : (json[\"admins\"] as Array<any>).map(OsrmAdminFromJSON),\n  };\n}\n\nexport function OsrmRouteLegToJSON(json: any): OsrmRouteLeg {\n  return OsrmRouteLegToJSONTyped(json, false);\n}\n\nexport function OsrmRouteLegToJSONTyped(\n  value?: OsrmRouteLeg | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    distance: value[\"distance\"],\n    duration: value[\"duration\"],\n    weight: value[\"weight\"],\n    summary: value[\"summary\"],\n    steps: (value[\"steps\"] as Array<any>).map(OsrmRouteStepToJSON),\n    annotation: OsrmAnnotationToJSON(value[\"annotation\"]),\n    via_waypoints:\n      value[\"viaWaypoints\"] == null\n        ? undefined\n        : (value[\"viaWaypoints\"] as Array<any>).map(OsrmViaWaypointToJSON),\n    admins:\n      value[\"admins\"] == null\n        ? undefined\n        : (value[\"admins\"] as Array<any>).map(OsrmAdminToJSON),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { OsrmRouteLeg } from \"./OsrmRouteLeg\";\nimport {\n  OsrmRouteLegFromJSON,\n  OsrmRouteLegFromJSONTyped,\n  OsrmRouteLegToJSON,\n  OsrmRouteLegToJSONTyped,\n} from \"./OsrmRouteLeg\";\n\n/**\n *\n * @export\n * @interface OsrmRoute\n */\nexport interface OsrmRoute {\n  /**\n   * The distance traveled by the route, in meters.\n   * @type {number}\n   * @memberof OsrmRoute\n   */\n  distance: number;\n  /**\n   * The estimated travel time, in number of seconds.\n   * @type {number}\n   * @memberof OsrmRoute\n   */\n  duration: number;\n  /**\n   * An encoded polyline (https://developers.google.com/maps/documentation/utilities/polylinealgorithm). Note that the polyline is encoded with 6 digits of precision rather than the default 5!\n   * @type {string}\n   * @memberof OsrmRoute\n   */\n  geometry: string;\n  /**\n   * The total cost of the route computed by the routing engine.\n   * @type {number}\n   * @memberof OsrmRoute\n   */\n  weight?: number;\n  /**\n   * The costing model used for the route.\n   * @type {string}\n   * @memberof OsrmRoute\n   */\n  weightName?: string;\n  /**\n   *\n   * @type {Array<OsrmRouteLeg>}\n   * @memberof OsrmRoute\n   */\n  legs: Array<OsrmRouteLeg>;\n}\n\n/**\n * Check if a given object implements the OsrmRoute interface.\n */\nexport function instanceOfOsrmRoute(value: object): value is OsrmRoute {\n  if (!(\"distance\" in value) || value[\"distance\"] === undefined) return false;\n  if (!(\"duration\" in value) || value[\"duration\"] === undefined) return false;\n  if (!(\"geometry\" in value) || value[\"geometry\"] === undefined) return false;\n  if (!(\"legs\" in value) || value[\"legs\"] === undefined) return false;\n  return true;\n}\n\nexport function OsrmRouteFromJSON(json: any): OsrmRoute {\n  return OsrmRouteFromJSONTyped(json, false);\n}\n\nexport function OsrmRouteFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): OsrmRoute {\n  if (json == null) {\n    return json;\n  }\n  return {\n    distance: json[\"distance\"],\n    duration: json[\"duration\"],\n    geometry: json[\"geometry\"],\n    weight: json[\"weight\"] == null ? undefined : json[\"weight\"],\n    weightName: json[\"weight_name\"] == null ? undefined : json[\"weight_name\"],\n    legs: (json[\"legs\"] as Array<any>).map(OsrmRouteLegFromJSON),\n  };\n}\n\nexport function OsrmRouteToJSON(json: any): OsrmRoute {\n  return OsrmRouteToJSONTyped(json, false);\n}\n\nexport function OsrmRouteToJSONTyped(\n  value?: OsrmRoute | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    distance: value[\"distance\"],\n    duration: value[\"duration\"],\n    geometry: value[\"geometry\"],\n    weight: value[\"weight\"],\n    weight_name: value[\"weightName\"],\n    legs: (value[\"legs\"] as Array<any>).map(OsrmRouteLegToJSON),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface OsrmWaypoint\n */\nexport interface OsrmWaypoint {\n  /**\n   *\n   * @type {string}\n   * @memberof OsrmWaypoint\n   */\n  name?: string;\n  /**\n   * A (longitude, latitude) coordinate pair.\n   * @type {Array<number>}\n   * @memberof OsrmWaypoint\n   */\n  location: Array<number>;\n  /**\n   * The distance of the snapped point from the original location.\n   * @type {number}\n   * @memberof OsrmWaypoint\n   */\n  distance: number;\n  /**\n   *\n   * @type {string}\n   * @memberof OsrmWaypoint\n   */\n  hint?: string;\n}\n\n/**\n * Check if a given object implements the OsrmWaypoint interface.\n */\nexport function instanceOfOsrmWaypoint(value: object): value is OsrmWaypoint {\n  if (!(\"location\" in value) || value[\"location\"] === undefined) return false;\n  if (!(\"distance\" in value) || value[\"distance\"] === undefined) return false;\n  return true;\n}\n\nexport function OsrmWaypointFromJSON(json: any): OsrmWaypoint {\n  return OsrmWaypointFromJSONTyped(json, false);\n}\n\nexport function OsrmWaypointFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): OsrmWaypoint {\n  if (json == null) {\n    return json;\n  }\n  return {\n    name: json[\"name\"] == null ? undefined : json[\"name\"],\n    location: json[\"location\"],\n    distance: json[\"distance\"],\n    hint: json[\"hint\"] == null ? undefined : json[\"hint\"],\n  };\n}\n\nexport function OsrmWaypointToJSON(json: any): OsrmWaypoint {\n  return OsrmWaypointToJSONTyped(json, false);\n}\n\nexport function OsrmWaypointToJSONTyped(\n  value?: OsrmWaypoint | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    name: value[\"name\"],\n    location: value[\"location\"],\n    distance: value[\"distance\"],\n    hint: value[\"hint\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { OsrmWaypoint } from \"./OsrmWaypoint\";\nimport {\n  OsrmWaypointFromJSON,\n  OsrmWaypointFromJSONTyped,\n  OsrmWaypointToJSON,\n  OsrmWaypointToJSONTyped,\n} from \"./OsrmWaypoint\";\nimport type { OsrmRoute } from \"./OsrmRoute\";\nimport {\n  OsrmRouteFromJSON,\n  OsrmRouteFromJSONTyped,\n  OsrmRouteToJSON,\n  OsrmRouteToJSONTyped,\n} from \"./OsrmRoute\";\n\n/**\n *\n * @export\n * @interface OsrmRouteResponse\n */\nexport interface OsrmRouteResponse {\n  /**\n   *\n   * @type {string}\n   * @memberof OsrmRouteResponse\n   */\n  code: OsrmRouteResponseCodeEnum;\n  /**\n   *\n   * @type {string}\n   * @memberof OsrmRouteResponse\n   */\n  message?: string;\n  /**\n   *\n   * @type {string}\n   * @memberof OsrmRouteResponse\n   */\n  dataVersion?: string;\n  /**\n   *\n   * @type {Array<OsrmWaypoint>}\n   * @memberof OsrmRouteResponse\n   */\n  waypoints?: Array<OsrmWaypoint>;\n  /**\n   *\n   * @type {Array<OsrmRoute>}\n   * @memberof OsrmRouteResponse\n   */\n  routes?: Array<OsrmRoute>;\n}\n\n/**\n * @export\n */\nexport const OsrmRouteResponseCodeEnum = {\n  Ok: \"Ok\",\n  InvalidUrl: \"InvalidUrl\",\n  InvalidService: \"InvalidService\",\n  InvalidVersion: \"InvalidVersion\",\n  InvalidOptions: \"InvalidOptions\",\n  InvalidQuery: \"InvalidQuery\",\n  InvalidValue: \"InvalidValue\",\n  NoSegment: \"NoSegment\",\n  TooBig: \"TooBig\",\n  NoRoute: \"NoRoute\",\n  NoTable: \"NoTable\",\n  NotImplemented: \"NotImplemented\",\n  NoTrips: \"NoTrips\",\n} as const;\nexport type OsrmRouteResponseCodeEnum =\n  (typeof OsrmRouteResponseCodeEnum)[keyof typeof OsrmRouteResponseCodeEnum];\n\n/**\n * Check if a given object implements the OsrmRouteResponse interface.\n */\nexport function instanceOfOsrmRouteResponse(\n  value: object,\n): value is OsrmRouteResponse {\n  if (!(\"code\" in value) || value[\"code\"] === undefined) return false;\n  return true;\n}\n\nexport function OsrmRouteResponseFromJSON(json: any): OsrmRouteResponse {\n  return OsrmRouteResponseFromJSONTyped(json, false);\n}\n\nexport function OsrmRouteResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): OsrmRouteResponse {\n  if (json == null) {\n    return json;\n  }\n  return {\n    code: json[\"code\"],\n    message: json[\"message\"] == null ? undefined : json[\"message\"],\n    dataVersion:\n      json[\"data_version\"] == null ? undefined : json[\"data_version\"],\n    waypoints:\n      json[\"waypoints\"] == null\n        ? undefined\n        : (json[\"waypoints\"] as Array<any>).map(OsrmWaypointFromJSON),\n    routes:\n      json[\"routes\"] == null\n        ? undefined\n        : (json[\"routes\"] as Array<any>).map(OsrmRouteFromJSON),\n  };\n}\n\nexport function OsrmRouteResponseToJSON(json: any): OsrmRouteResponse {\n  return OsrmRouteResponseToJSONTyped(json, false);\n}\n\nexport function OsrmRouteResponseToJSONTyped(\n  value?: OsrmRouteResponse | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    code: value[\"code\"],\n    message: value[\"message\"],\n    data_version: value[\"dataVersion\"],\n    waypoints:\n      value[\"waypoints\"] == null\n        ? undefined\n        : (value[\"waypoints\"] as Array<any>).map(OsrmWaypointToJSON),\n    routes:\n      value[\"routes\"] == null\n        ? undefined\n        : (value[\"routes\"] as Array<any>).map(OsrmRouteToJSON),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { Context } from \"./Context\";\nimport {\n  ContextFromJSON,\n  ContextFromJSONTyped,\n  ContextToJSON,\n  ContextToJSONTyped,\n} from \"./Context\";\nimport type { MatchType } from \"./MatchType\";\nimport {\n  MatchTypeFromJSON,\n  MatchTypeFromJSONTyped,\n  MatchTypeToJSON,\n  MatchTypeToJSONTyped,\n} from \"./MatchType\";\nimport type { SourceAttribution } from \"./SourceAttribution\";\nimport {\n  SourceAttributionFromJSON,\n  SourceAttributionFromJSONTyped,\n  SourceAttributionToJSON,\n  SourceAttributionToJSONTyped,\n} from \"./SourceAttribution\";\nimport type { Precision } from \"./Precision\";\nimport {\n  PrecisionFromJSON,\n  PrecisionFromJSONTyped,\n  PrecisionToJSON,\n  PrecisionToJSONTyped,\n} from \"./Precision\";\nimport type { AddendumV2 } from \"./AddendumV2\";\nimport {\n  AddendumV2FromJSON,\n  AddendumV2FromJSONTyped,\n  AddendumV2ToJSON,\n  AddendumV2ToJSONTyped,\n} from \"./AddendumV2\";\nimport type { AddressComponentsV2 } from \"./AddressComponentsV2\";\nimport {\n  AddressComponentsV2FromJSON,\n  AddressComponentsV2FromJSONTyped,\n  AddressComponentsV2ToJSON,\n  AddressComponentsV2ToJSONTyped,\n} from \"./AddressComponentsV2\";\n\n/**\n * The GeoJSON properties object.\n * @export\n * @interface PropertiesV2\n */\nexport interface PropertiesV2 {\n  /**\n   *\n   * @type {AddendumV2}\n   * @memberof PropertiesV2\n   */\n  addendum?: AddendumV2 | null;\n  /**\n   *\n   * @type {AddressComponentsV2}\n   * @memberof PropertiesV2\n   */\n  addressComponents?: AddressComponentsV2 | null;\n  /**\n   * The coarse-grained location of the place (e.g. Seoul, South Korea).\n   *\n   * In search experiences, this is typically the second line of a result cell.\n   * @type {string}\n   * @memberof PropertiesV2\n   */\n  coarseLocation?: string | null;\n  /**\n   * The level of confidence (0.0 - 1.0) that the result is what you actually searched for.\n   *\n   * This is not necessarily the same as relevance (results are returned sorted by relevance already),\n   * but rather how closely the explicit or inferred components match the result.\n   * This is only present for forward geocoding responses (not autocomplete or place details).\n   * @type {number}\n   * @memberof PropertiesV2\n   */\n  confidence?: number | null;\n  /**\n   *\n   * @type {Context}\n   * @memberof PropertiesV2\n   */\n  context?: Context | null;\n  /**\n   * The distance from the search focus point, in kilometers.\n   * @type {number}\n   * @memberof PropertiesV2\n   */\n  distance?: number | null;\n  /**\n   * The address formatted as a single line,\n   * following local postal conventions for ordering and separators.\n   * @type {string}\n   * @memberof PropertiesV2\n   */\n  formattedAddressLine?: string;\n  /**\n   * Address components split up into lines,\n   * following local postal conventions for ordering and separators.\n   * @type {Array<string>}\n   * @memberof PropertiesV2\n   */\n  formattedAddressLines?: Array<string>;\n  /**\n   * The globally unique identifier for this result.\n   *\n   * You can use this to uniquely identify a place,\n   * and to get the full details from the place details endpoint.\n   *\n   * NOTE: While GIDs are unique, they may not necessarily be stable in all datasets.\n   * @type {string}\n   * @memberof PropertiesV2\n   */\n  gid: string;\n  /**\n   * The data layer containing the place (e.g. \"address\" or \"poi\").\n   * @type {string}\n   * @memberof PropertiesV2\n   */\n  layer: string;\n  /**\n   * The type of match (forward geocoding endpoints only).\n   * @type {MatchType}\n   * @memberof PropertiesV2\n   */\n  matchType?: MatchType | null;\n  /**\n   * The best name for the place, accounting for request language preferences.\n   *\n   * When building an autocomplete search experience, this is the primary display string.\n   * @type {string}\n   * @memberof PropertiesV2\n   */\n  name: string;\n  /**\n   *\n   * @type {Precision}\n   * @memberof PropertiesV2\n   */\n  precision: Precision;\n  /**\n   * A list of sources from which the result is derived.\n   * @type {Array<SourceAttribution>}\n   * @memberof PropertiesV2\n   */\n  sources?: Array<SourceAttribution>;\n}\n\n/**\n * Check if a given object implements the PropertiesV2 interface.\n */\nexport function instanceOfPropertiesV2(value: object): value is PropertiesV2 {\n  if (!(\"gid\" in value) || value[\"gid\"] === undefined) return false;\n  if (!(\"layer\" in value) || value[\"layer\"] === undefined) return false;\n  if (!(\"name\" in value) || value[\"name\"] === undefined) return false;\n  if (!(\"precision\" in value) || value[\"precision\"] === undefined) return false;\n  return true;\n}\n\nexport function PropertiesV2FromJSON(json: any): PropertiesV2 {\n  return PropertiesV2FromJSONTyped(json, false);\n}\n\nexport function PropertiesV2FromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): PropertiesV2 {\n  if (json == null) {\n    return json;\n  }\n  return {\n    addendum:\n      json[\"addendum\"] == null\n        ? undefined\n        : AddendumV2FromJSON(json[\"addendum\"]),\n    addressComponents:\n      json[\"address_components\"] == null\n        ? undefined\n        : AddressComponentsV2FromJSON(json[\"address_components\"]),\n    coarseLocation:\n      json[\"coarse_location\"] == null ? undefined : json[\"coarse_location\"],\n    confidence: json[\"confidence\"] == null ? undefined : json[\"confidence\"],\n    context:\n      json[\"context\"] == null ? undefined : ContextFromJSON(json[\"context\"]),\n    distance: json[\"distance\"] == null ? undefined : json[\"distance\"],\n    formattedAddressLine:\n      json[\"formatted_address_line\"] == null\n        ? undefined\n        : json[\"formatted_address_line\"],\n    formattedAddressLines:\n      json[\"formatted_address_lines\"] == null\n        ? undefined\n        : json[\"formatted_address_lines\"],\n    gid: json[\"gid\"],\n    layer: json[\"layer\"],\n    matchType:\n      json[\"match_type\"] == null\n        ? undefined\n        : MatchTypeFromJSON(json[\"match_type\"]),\n    name: json[\"name\"],\n    precision: PrecisionFromJSON(json[\"precision\"]),\n    sources:\n      json[\"sources\"] == null\n        ? undefined\n        : (json[\"sources\"] as Array<any>).map(SourceAttributionFromJSON),\n  };\n}\n\nexport function PropertiesV2ToJSON(json: any): PropertiesV2 {\n  return PropertiesV2ToJSONTyped(json, false);\n}\n\nexport function PropertiesV2ToJSONTyped(\n  value?: PropertiesV2 | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    addendum: AddendumV2ToJSON(value[\"addendum\"]),\n    address_components: AddressComponentsV2ToJSON(value[\"addressComponents\"]),\n    coarse_location: value[\"coarseLocation\"],\n    confidence: value[\"confidence\"],\n    context: ContextToJSON(value[\"context\"]),\n    distance: value[\"distance\"],\n    formatted_address_line: value[\"formattedAddressLine\"],\n    formatted_address_lines: value[\"formattedAddressLines\"],\n    gid: value[\"gid\"],\n    layer: value[\"layer\"],\n    match_type: MatchTypeToJSON(value[\"matchType\"]),\n    name: value[\"name\"],\n    precision: PrecisionToJSON(value[\"precision\"]),\n    sources:\n      value[\"sources\"] == null\n        ? undefined\n        : (value[\"sources\"] as Array<any>).map(SourceAttributionToJSON),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { RouteResponseAlternatesInner } from \"./RouteResponseAlternatesInner\";\nimport {\n  RouteResponseAlternatesInnerFromJSON,\n  RouteResponseAlternatesInnerFromJSONTyped,\n  RouteResponseAlternatesInnerToJSON,\n  RouteResponseAlternatesInnerToJSONTyped,\n} from \"./RouteResponseAlternatesInner\";\nimport type { RouteTrip } from \"./RouteTrip\";\nimport {\n  RouteTripFromJSON,\n  RouteTripFromJSONTyped,\n  RouteTripToJSON,\n  RouteTripToJSONTyped,\n} from \"./RouteTrip\";\n\n/**\n *\n * @export\n * @interface RouteResponse\n */\nexport interface RouteResponse {\n  /**\n   * An identifier to disambiguate requests (echoed by the server).\n   * @type {string}\n   * @memberof RouteResponse\n   */\n  id?: string;\n  /**\n   *\n   * @type {RouteTrip}\n   * @memberof RouteResponse\n   */\n  trip: RouteTrip;\n  /**\n   *\n   * @type {Array<RouteResponseAlternatesInner>}\n   * @memberof RouteResponse\n   */\n  alternates?: Array<RouteResponseAlternatesInner>;\n}\n\n/**\n * Check if a given object implements the RouteResponse interface.\n */\nexport function instanceOfRouteResponse(value: object): value is RouteResponse {\n  if (!(\"trip\" in value) || value[\"trip\"] === undefined) return false;\n  return true;\n}\n\nexport function RouteResponseFromJSON(json: any): RouteResponse {\n  return RouteResponseFromJSONTyped(json, false);\n}\n\nexport function RouteResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): RouteResponse {\n  if (json == null) {\n    return json;\n  }\n  return {\n    id: json[\"id\"] == null ? undefined : json[\"id\"],\n    trip: RouteTripFromJSON(json[\"trip\"]),\n    alternates:\n      json[\"alternates\"] == null\n        ? undefined\n        : (json[\"alternates\"] as Array<any>).map(\n            RouteResponseAlternatesInnerFromJSON,\n          ),\n  };\n}\n\nexport function RouteResponseToJSON(json: any): RouteResponse {\n  return RouteResponseToJSONTyped(json, false);\n}\n\nexport function RouteResponseToJSONTyped(\n  value?: RouteResponse | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    id: value[\"id\"],\n    trip: RouteTripToJSON(value[\"trip\"]),\n    alternates:\n      value[\"alternates\"] == null\n        ? undefined\n        : (value[\"alternates\"] as Array<any>).map(\n            RouteResponseAlternatesInnerToJSON,\n          ),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport type { OsrmRouteResponse } from \"./OsrmRouteResponse\";\nimport {\n  instanceOfOsrmRouteResponse,\n  OsrmRouteResponseFromJSON,\n  OsrmRouteResponseFromJSONTyped,\n  OsrmRouteResponseToJSON,\n} from \"./OsrmRouteResponse\";\nimport type { RouteResponse } from \"./RouteResponse\";\nimport {\n  instanceOfRouteResponse,\n  RouteResponseFromJSON,\n  RouteResponseFromJSONTyped,\n  RouteResponseToJSON,\n} from \"./RouteResponse\";\n\n/**\n * @type Route200Response\n *\n * @export\n */\nexport type Route200Response = OsrmRouteResponse | RouteResponse;\n\nexport function Route200ResponseFromJSON(json: any): Route200Response {\n  return Route200ResponseFromJSONTyped(json, false);\n}\n\nexport function Route200ResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): Route200Response {\n  if (json == null) {\n    return json;\n  }\n  if (typeof json !== \"object\") {\n    return json;\n  }\n  if (instanceOfOsrmRouteResponse(json)) {\n    return OsrmRouteResponseFromJSONTyped(json, true);\n  }\n  if (instanceOfRouteResponse(json)) {\n    return RouteResponseFromJSONTyped(json, true);\n  }\n\n  return {} as any;\n}\n\nexport function Route200ResponseToJSON(json: any): any {\n  return Route200ResponseToJSONTyped(json, false);\n}\n\nexport function Route200ResponseToJSONTyped(\n  value?: Route200Response | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n  if (typeof value !== \"object\") {\n    return value;\n  }\n  if (instanceOfOsrmRouteResponse(value)) {\n    return OsrmRouteResponseToJSON(value as OsrmRouteResponse);\n  }\n  if (instanceOfRouteResponse(value)) {\n    return RouteResponseToJSON(value as RouteResponse);\n  }\n\n  return {};\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { RoadClass } from \"./RoadClass\";\nimport {\n  RoadClassFromJSON,\n  RoadClassFromJSONTyped,\n  RoadClassToJSON,\n  RoadClassToJSONTyped,\n} from \"./RoadClass\";\n\n/**\n *\n * @export\n * @interface RoutingWaypointAllOfSearchFilter\n */\nexport interface RoutingWaypointAllOfSearchFilter {\n  /**\n   * Excludes roads marked as tunnels\n   * @type {boolean}\n   * @memberof RoutingWaypointAllOfSearchFilter\n   */\n  excludeTunnel?: boolean;\n  /**\n   * Excludes roads marked as bridges\n   * @type {boolean}\n   * @memberof RoutingWaypointAllOfSearchFilter\n   */\n  excludeBridge?: boolean;\n  /**\n   * Excludes roads marked as ramps\n   * @type {boolean}\n   * @memberof RoutingWaypointAllOfSearchFilter\n   */\n  excludeRamp?: boolean;\n  /**\n   * Excludes roads marked as closed\n   * @type {boolean}\n   * @memberof RoutingWaypointAllOfSearchFilter\n   */\n  excludeClosures?: boolean;\n  /**\n   * The lowest road class allowed\n   * @type {RoadClass}\n   * @memberof RoutingWaypointAllOfSearchFilter\n   */\n  minRoadClass?: RoadClass;\n  /**\n   * The highest road class allowed\n   * @type {RoadClass}\n   * @memberof RoutingWaypointAllOfSearchFilter\n   */\n  maxRoadClass?: RoadClass;\n}\n\n/**\n * Check if a given object implements the RoutingWaypointAllOfSearchFilter interface.\n */\nexport function instanceOfRoutingWaypointAllOfSearchFilter(\n  value: object,\n): value is RoutingWaypointAllOfSearchFilter {\n  return true;\n}\n\nexport function RoutingWaypointAllOfSearchFilterFromJSON(\n  json: any,\n): RoutingWaypointAllOfSearchFilter {\n  return RoutingWaypointAllOfSearchFilterFromJSONTyped(json, false);\n}\n\nexport function RoutingWaypointAllOfSearchFilterFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): RoutingWaypointAllOfSearchFilter {\n  if (json == null) {\n    return json;\n  }\n  return {\n    excludeTunnel:\n      json[\"exclude_tunnel\"] == null ? undefined : json[\"exclude_tunnel\"],\n    excludeBridge:\n      json[\"exclude_bridge\"] == null ? undefined : json[\"exclude_bridge\"],\n    excludeRamp:\n      json[\"exclude_ramp\"] == null ? undefined : json[\"exclude_ramp\"],\n    excludeClosures:\n      json[\"exclude_closures\"] == null ? undefined : json[\"exclude_closures\"],\n    minRoadClass:\n      json[\"min_road_class\"] == null\n        ? undefined\n        : RoadClassFromJSON(json[\"min_road_class\"]),\n    maxRoadClass:\n      json[\"max_road_class\"] == null\n        ? undefined\n        : RoadClassFromJSON(json[\"max_road_class\"]),\n  };\n}\n\nexport function RoutingWaypointAllOfSearchFilterToJSON(\n  json: any,\n): RoutingWaypointAllOfSearchFilter {\n  return RoutingWaypointAllOfSearchFilterToJSONTyped(json, false);\n}\n\nexport function RoutingWaypointAllOfSearchFilterToJSONTyped(\n  value?: RoutingWaypointAllOfSearchFilter | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    exclude_tunnel: value[\"excludeTunnel\"],\n    exclude_bridge: value[\"excludeBridge\"],\n    exclude_ramp: value[\"excludeRamp\"],\n    exclude_closures: value[\"excludeClosures\"],\n    min_road_class: RoadClassToJSON(value[\"minRoadClass\"]),\n    max_road_class: RoadClassToJSON(value[\"maxRoadClass\"]),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { RoutingWaypointAllOfSearchFilter } from \"./RoutingWaypointAllOfSearchFilter\";\nimport {\n  RoutingWaypointAllOfSearchFilterFromJSON,\n  RoutingWaypointAllOfSearchFilterFromJSONTyped,\n  RoutingWaypointAllOfSearchFilterToJSON,\n  RoutingWaypointAllOfSearchFilterToJSONTyped,\n} from \"./RoutingWaypointAllOfSearchFilter\";\n\n/**\n *\n * @export\n * @interface RoutingWaypoint\n */\nexport interface RoutingWaypoint {\n  /**\n   * The latitude of a point in the shape.\n   * @type {number}\n   * @memberof RoutingWaypoint\n   */\n  lat: number;\n  /**\n   * The longitude of a point in the shape.\n   * @type {number}\n   * @memberof RoutingWaypoint\n   */\n  lon: number;\n  /**\n   * A `break` represents the start or end of a leg, and allows reversals. A `through` location is an intermediate waypoint that must be visited between `break`s, but at which reversals are not allowed. A `via` is similar to a `through` except that reversals are allowed. A `break_through` is similar to a `break` in that it can be the start/end of a leg, but does not allow reversals. Defaults to `break`.\n   * @type {string}\n   * @memberof RoutingWaypoint\n   */\n  type?: RoutingWaypointTypeEnum;\n  /**\n   * The preferred direction of travel when starting the route, in integer clockwise degrees from north. North is 0, south is 180, east is 90, and west is 270.\n   * @type {number}\n   * @memberof RoutingWaypoint\n   */\n  heading?: number;\n  /**\n   * The tolerance (in degrees) determining whether a street is considered the same direction.\n   * @type {number}\n   * @memberof RoutingWaypoint\n   */\n  headingTolerance?: number;\n  /**\n   * The minimum number of nodes that must be reachable for a given edge to consider that edge as belonging to a connected region. If a candidate edge has fewer connections, it will be considered a disconnected island.\n   * @type {number}\n   * @memberof RoutingWaypoint\n   */\n  minimumReachability?: number;\n  /**\n   * The distance (in meters) to look for candidate edges around the location for purposes of snapping locations to the route graph. If there are no candidates within this distance, the closest candidate within a reasonable search distance will be used. This is subject to clamping by internal limits.\n   * @type {number}\n   * @memberof RoutingWaypoint\n   */\n  radius?: number;\n  /**\n   * If true, candidates will be ranked according to their distance from the target location as well as other factors. If false, candidates will only be ranked using their distance from the target.\n   * @type {boolean}\n   * @memberof RoutingWaypoint\n   */\n  rankCandidates?: boolean;\n  /**\n   * If the location is not offset from the road centerline or is closest to an intersection, this option has no effect. Otherwise, the preferred side of street is used to determine whether or not the location should be visited from the same, opposite or either side of the road with respect to the side of the road the given locale drives on.\n   * @type {string}\n   * @memberof RoutingWaypoint\n   */\n  preferredSide?: RoutingWaypointPreferredSideEnum;\n  /**\n   * During edge correlation this is the tolerance (in meters) used to determine whether or not to snap to the intersection rather than along the street, if the snap location is within this distance from the intersection, the intersection is used instead.\n   * @type {number}\n   * @memberof RoutingWaypoint\n   */\n  nodeSnapTolerance?: number;\n  /**\n   * A tolerance in meters from the edge centerline used for determining the side of the street that the location is on. If the distance to the centerline is less than this tolerance, no side will be inferred. Otherwise, the left or right side will be selected depending on the direction of travel.\n   * @type {number}\n   * @memberof RoutingWaypoint\n   */\n  streetSideTolerance?: number;\n  /**\n   * A tolerance in meters from the edge centerline used for determining the side of the street that the location is on. If the distance to the centerline is greater than this tolerance, no side will be inferred. Otherwise, the left or right side will be selected depending on the direction of travel.\n   * @type {number}\n   * @memberof RoutingWaypoint\n   */\n  streetSideMaxDistance?: number;\n  /**\n   *\n   * @type {RoutingWaypointAllOfSearchFilter}\n   * @memberof RoutingWaypoint\n   */\n  searchFilter?: RoutingWaypointAllOfSearchFilter;\n}\n\n/**\n * @export\n */\nexport const RoutingWaypointTypeEnum = {\n  Break: \"break\",\n  Through: \"through\",\n  Via: \"via\",\n  BreakThrough: \"break_through\",\n} as const;\nexport type RoutingWaypointTypeEnum =\n  (typeof RoutingWaypointTypeEnum)[keyof typeof RoutingWaypointTypeEnum];\n\n/**\n * @export\n */\nexport const RoutingWaypointPreferredSideEnum = {\n  Same: \"same\",\n  Opposite: \"opposite\",\n  Either: \"either\",\n} as const;\nexport type RoutingWaypointPreferredSideEnum =\n  (typeof RoutingWaypointPreferredSideEnum)[keyof typeof RoutingWaypointPreferredSideEnum];\n\n/**\n * Check if a given object implements the RoutingWaypoint interface.\n */\nexport function instanceOfRoutingWaypoint(\n  value: object,\n): value is RoutingWaypoint {\n  if (!(\"lat\" in value) || value[\"lat\"] === undefined) return false;\n  if (!(\"lon\" in value) || value[\"lon\"] === undefined) return false;\n  return true;\n}\n\nexport function RoutingWaypointFromJSON(json: any): RoutingWaypoint {\n  return RoutingWaypointFromJSONTyped(json, false);\n}\n\nexport function RoutingWaypointFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): RoutingWaypoint {\n  if (json == null) {\n    return json;\n  }\n  return {\n    lat: json[\"lat\"],\n    lon: json[\"lon\"],\n    type: json[\"type\"] == null ? undefined : json[\"type\"],\n    heading: json[\"heading\"] == null ? undefined : json[\"heading\"],\n    headingTolerance:\n      json[\"heading_tolerance\"] == null ? undefined : json[\"heading_tolerance\"],\n    minimumReachability:\n      json[\"minimum_reachability\"] == null\n        ? undefined\n        : json[\"minimum_reachability\"],\n    radius: json[\"radius\"] == null ? undefined : json[\"radius\"],\n    rankCandidates:\n      json[\"rank_candidates\"] == null ? undefined : json[\"rank_candidates\"],\n    preferredSide:\n      json[\"preferred_side\"] == null ? undefined : json[\"preferred_side\"],\n    nodeSnapTolerance:\n      json[\"node_snap_tolerance\"] == null\n        ? undefined\n        : json[\"node_snap_tolerance\"],\n    streetSideTolerance:\n      json[\"street_side_tolerance\"] == null\n        ? undefined\n        : json[\"street_side_tolerance\"],\n    streetSideMaxDistance:\n      json[\"street_side_max_distance\"] == null\n        ? undefined\n        : json[\"street_side_max_distance\"],\n    searchFilter:\n      json[\"search_filter\"] == null\n        ? undefined\n        : RoutingWaypointAllOfSearchFilterFromJSON(json[\"search_filter\"]),\n  };\n}\n\nexport function RoutingWaypointToJSON(json: any): RoutingWaypoint {\n  return RoutingWaypointToJSONTyped(json, false);\n}\n\nexport function RoutingWaypointToJSONTyped(\n  value?: RoutingWaypoint | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    lat: value[\"lat\"],\n    lon: value[\"lon\"],\n    type: value[\"type\"],\n    heading: value[\"heading\"],\n    heading_tolerance: value[\"headingTolerance\"],\n    minimum_reachability: value[\"minimumReachability\"],\n    radius: value[\"radius\"],\n    rank_candidates: value[\"rankCandidates\"],\n    preferred_side: value[\"preferredSide\"],\n    node_snap_tolerance: value[\"nodeSnapTolerance\"],\n    street_side_tolerance: value[\"streetSideTolerance\"],\n    street_side_max_distance: value[\"streetSideMaxDistance\"],\n    search_filter: RoutingWaypointAllOfSearchFilterToJSON(\n      value[\"searchFilter\"],\n    ),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { CostingModel } from \"./CostingModel\";\nimport {\n  CostingModelFromJSON,\n  CostingModelFromJSONTyped,\n  CostingModelToJSON,\n  CostingModelToJSONTyped,\n} from \"./CostingModel\";\nimport type { CostingOptions } from \"./CostingOptions\";\nimport {\n  CostingOptionsFromJSON,\n  CostingOptionsFromJSONTyped,\n  CostingOptionsToJSON,\n  CostingOptionsToJSONTyped,\n} from \"./CostingOptions\";\nimport type { RoutingWaypoint } from \"./RoutingWaypoint\";\nimport {\n  RoutingWaypointFromJSON,\n  RoutingWaypointFromJSONTyped,\n  RoutingWaypointToJSON,\n  RoutingWaypointToJSONTyped,\n} from \"./RoutingWaypoint\";\nimport type { AnnotationFilters } from \"./AnnotationFilters\";\nimport {\n  AnnotationFiltersFromJSON,\n  AnnotationFiltersFromJSONTyped,\n  AnnotationFiltersToJSON,\n  AnnotationFiltersToJSONTyped,\n} from \"./AnnotationFilters\";\nimport type { DistanceUnit } from \"./DistanceUnit\";\nimport {\n  DistanceUnitFromJSON,\n  DistanceUnitFromJSONTyped,\n  DistanceUnitToJSON,\n  DistanceUnitToJSONTyped,\n} from \"./DistanceUnit\";\nimport type { RoutingLanguages } from \"./RoutingLanguages\";\nimport {\n  RoutingLanguagesFromJSON,\n  RoutingLanguagesFromJSONTyped,\n  RoutingLanguagesToJSON,\n  RoutingLanguagesToJSONTyped,\n} from \"./RoutingLanguages\";\n\n/**\n *\n * @export\n * @interface RouteRequest\n */\nexport interface RouteRequest {\n  /**\n   *\n   * @type {DistanceUnit}\n   * @memberof RouteRequest\n   */\n  units?: DistanceUnit;\n  /**\n   *\n   * @type {RoutingLanguages}\n   * @memberof RouteRequest\n   */\n  language?: RoutingLanguages;\n  /**\n   * The level of directional narrative to include. Locations and times will always be returned, but narrative generation verbosity can be controlled with this parameter.\n   * @type {string}\n   * @memberof RouteRequest\n   */\n  directionsType?: RouteRequestDirectionsTypeEnum;\n  /**\n   * The output response format. The default JSON format is extremely compact and ideal for web or data-constrained use cases where you want to fetch additional attributes on demand in small chunks. The OSRM format is much richer and is configurable with significantly more info for turn-by-turn navigation use cases.\n   * @type {string}\n   * @memberof RouteRequest\n   */\n  format?: RouteRequestFormatEnum;\n  /**\n   * Optionally includes helpful banners with timing information for turn-by-turn navigation. This is only available in the OSRM format.\n   * @type {boolean}\n   * @memberof RouteRequest\n   */\n  bannerInstructions?: boolean;\n  /**\n   * Optionally includes voice instructions with timing information for turn-by-turn navigation. This is only available in the OSRM format.\n   * @type {boolean}\n   * @memberof RouteRequest\n   */\n  voiceInstructions?: boolean;\n  /**\n   *\n   * @type {AnnotationFilters}\n   * @memberof RouteRequest\n   */\n  filters?: AnnotationFilters;\n  /**\n   * An identifier to disambiguate requests (echoed by the server).\n   * @type {string}\n   * @memberof RouteRequest\n   */\n  id?: string;\n  /**\n   *\n   * @type {Array<RoutingWaypoint>}\n   * @memberof RouteRequest\n   */\n  locations: Array<RoutingWaypoint>;\n  /**\n   *\n   * @type {CostingModel}\n   * @memberof RouteRequest\n   */\n  costing: CostingModel;\n  /**\n   *\n   * @type {CostingOptions}\n   * @memberof RouteRequest\n   */\n  costingOptions?: CostingOptions;\n  /**\n   * This has the same format as the locations list. Locations are mapped to the closed road(s), and these road(s) are excluded from the route path computation.\n   * @type {Array<RoutingWaypoint>}\n   * @memberof RouteRequest\n   */\n  excludeLocations?: Array<RoutingWaypoint>;\n  /**\n   * One or multiple exterior rings of polygons in the form of nested JSON arrays. Roads intersecting these rings will be avoided during path finding. Open rings will be closed automatically. If you only need to avoid a few specific roads, it's much more efficient to use `exclude_locations`.\n   * @type {Array<Array<Array<number>>>}\n   * @memberof RouteRequest\n   */\n  excludePolygons?: Array<Array<Array<number>>>;\n  /**\n   * How many alternate routes are desired. Note that fewer or no alternates may be returned. Alternates are not yet supported on routes with more than 2 locations or on time-dependent routes.\n   * @type {number}\n   * @memberof RouteRequest\n   */\n  alternates?: number;\n  /**\n   * If greater than zero, attempts to include elevation along the route at regular intervals. The \"native\" internal resolution is 30m, so we recommend you use this when possible. This number is interpreted as either meters or feet depending on the unit parameter.\n   * Elevation for route sections containing a bridge or tunnel is interpolated linearly. This doesn't always match the true elevation of the bridge/tunnel, but it prevents sharp artifacts from the surrounding terrain. This functionality is unique to the routing endpoints and is not available via the elevation API.\n   * NOTE: This has no effect on the OSRM response format.\n   * @type {number}\n   * @memberof RouteRequest\n   */\n  elevationInterval?: number;\n  /**\n   * Determines whether the output should include roundabout exit instructions.\n   * @type {boolean}\n   * @memberof RouteRequest\n   */\n  roundaboutExits?: boolean;\n}\n\n/**\n * @export\n */\nexport const RouteRequestDirectionsTypeEnum = {\n  None: \"none\",\n  Maneuvers: \"maneuvers\",\n  Instructions: \"instructions\",\n} as const;\nexport type RouteRequestDirectionsTypeEnum =\n  (typeof RouteRequestDirectionsTypeEnum)[keyof typeof RouteRequestDirectionsTypeEnum];\n\n/**\n * @export\n */\nexport const RouteRequestFormatEnum = {\n  Json: \"json\",\n  Osrm: \"osrm\",\n} as const;\nexport type RouteRequestFormatEnum =\n  (typeof RouteRequestFormatEnum)[keyof typeof RouteRequestFormatEnum];\n\n/**\n * Check if a given object implements the RouteRequest interface.\n */\nexport function instanceOfRouteRequest(value: object): value is RouteRequest {\n  if (!(\"locations\" in value) || value[\"locations\"] === undefined) return false;\n  if (!(\"costing\" in value) || value[\"costing\"] === undefined) return false;\n  return true;\n}\n\nexport function RouteRequestFromJSON(json: any): RouteRequest {\n  return RouteRequestFromJSONTyped(json, false);\n}\n\nexport function RouteRequestFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): RouteRequest {\n  if (json == null) {\n    return json;\n  }\n  return {\n    units:\n      json[\"units\"] == null ? undefined : DistanceUnitFromJSON(json[\"units\"]),\n    language:\n      json[\"language\"] == null\n        ? undefined\n        : RoutingLanguagesFromJSON(json[\"language\"]),\n    directionsType:\n      json[\"directions_type\"] == null ? undefined : json[\"directions_type\"],\n    format: json[\"format\"] == null ? undefined : json[\"format\"],\n    bannerInstructions:\n      json[\"banner_instructions\"] == null\n        ? undefined\n        : json[\"banner_instructions\"],\n    voiceInstructions:\n      json[\"voice_instructions\"] == null\n        ? undefined\n        : json[\"voice_instructions\"],\n    filters:\n      json[\"filters\"] == null\n        ? undefined\n        : AnnotationFiltersFromJSON(json[\"filters\"]),\n    id: json[\"id\"] == null ? undefined : json[\"id\"],\n    locations: (json[\"locations\"] as Array<any>).map(RoutingWaypointFromJSON),\n    costing: CostingModelFromJSON(json[\"costing\"]),\n    costingOptions:\n      json[\"costing_options\"] == null\n        ? undefined\n        : CostingOptionsFromJSON(json[\"costing_options\"]),\n    excludeLocations:\n      json[\"exclude_locations\"] == null\n        ? undefined\n        : (json[\"exclude_locations\"] as Array<any>).map(\n            RoutingWaypointFromJSON,\n          ),\n    excludePolygons:\n      json[\"exclude_polygons\"] == null ? undefined : json[\"exclude_polygons\"],\n    alternates: json[\"alternates\"] == null ? undefined : json[\"alternates\"],\n    elevationInterval:\n      json[\"elevation_interval\"] == null\n        ? undefined\n        : json[\"elevation_interval\"],\n    roundaboutExits:\n      json[\"roundabout_exits\"] == null ? undefined : json[\"roundabout_exits\"],\n  };\n}\n\nexport function RouteRequestToJSON(json: any): RouteRequest {\n  return RouteRequestToJSONTyped(json, false);\n}\n\nexport function RouteRequestToJSONTyped(\n  value?: RouteRequest | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    units: DistanceUnitToJSON(value[\"units\"]),\n    language: RoutingLanguagesToJSON(value[\"language\"]),\n    directions_type: value[\"directionsType\"],\n    format: value[\"format\"],\n    banner_instructions: value[\"bannerInstructions\"],\n    voice_instructions: value[\"voiceInstructions\"],\n    filters: AnnotationFiltersToJSON(value[\"filters\"]),\n    id: value[\"id\"],\n    locations: (value[\"locations\"] as Array<any>).map(RoutingWaypointToJSON),\n    costing: CostingModelToJSON(value[\"costing\"]),\n    costing_options: CostingOptionsToJSON(value[\"costingOptions\"]),\n    exclude_locations:\n      value[\"excludeLocations\"] == null\n        ? undefined\n        : (value[\"excludeLocations\"] as Array<any>).map(RoutingWaypointToJSON),\n    exclude_polygons: value[\"excludePolygons\"],\n    alternates: value[\"alternates\"],\n    elevation_interval: value[\"elevationInterval\"],\n    roundabout_exits: value[\"roundaboutExits\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface SimpleRoutingWaypoint\n */\nexport interface SimpleRoutingWaypoint {\n  /**\n   * The latitude of a point in the shape.\n   * @type {number}\n   * @memberof SimpleRoutingWaypoint\n   */\n  lat: number;\n  /**\n   * The longitude of a point in the shape.\n   * @type {number}\n   * @memberof SimpleRoutingWaypoint\n   */\n  lon: number;\n  /**\n   * A `break` represents the start or end of a leg, and allows reversals. A `through` location is an intermediate waypoint that must be visited between `break`s, but at which reversals are not allowed. A `via` is similar to a `through` except that reversals are allowed. A `break_through` is similar to a `break` in that it can be the start/end of a leg, but does not allow reversals. Defaults to `break`.\n   * @type {string}\n   * @memberof SimpleRoutingWaypoint\n   */\n  type?: SimpleRoutingWaypointTypeEnum;\n}\n\n/**\n * @export\n */\nexport const SimpleRoutingWaypointTypeEnum = {\n  Break: \"break\",\n  Through: \"through\",\n  Via: \"via\",\n  BreakThrough: \"break_through\",\n} as const;\nexport type SimpleRoutingWaypointTypeEnum =\n  (typeof SimpleRoutingWaypointTypeEnum)[keyof typeof SimpleRoutingWaypointTypeEnum];\n\n/**\n * Check if a given object implements the SimpleRoutingWaypoint interface.\n */\nexport function instanceOfSimpleRoutingWaypoint(\n  value: object,\n): value is SimpleRoutingWaypoint {\n  if (!(\"lat\" in value) || value[\"lat\"] === undefined) return false;\n  if (!(\"lon\" in value) || value[\"lon\"] === undefined) return false;\n  return true;\n}\n\nexport function SimpleRoutingWaypointFromJSON(\n  json: any,\n): SimpleRoutingWaypoint {\n  return SimpleRoutingWaypointFromJSONTyped(json, false);\n}\n\nexport function SimpleRoutingWaypointFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): SimpleRoutingWaypoint {\n  if (json == null) {\n    return json;\n  }\n  return {\n    lat: json[\"lat\"],\n    lon: json[\"lon\"],\n    type: json[\"type\"] == null ? undefined : json[\"type\"],\n  };\n}\n\nexport function SimpleRoutingWaypointToJSON(json: any): SimpleRoutingWaypoint {\n  return SimpleRoutingWaypointToJSONTyped(json, false);\n}\n\nexport function SimpleRoutingWaypointToJSONTyped(\n  value?: SimpleRoutingWaypoint | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    lat: value[\"lat\"],\n    lon: value[\"lon\"],\n    type: value[\"type\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n * Canonical geocoding source IDs.\n * @export\n */\nexport const SourceId = {\n  Openstreetmap: \"openstreetmap\",\n  Openaddresses: \"openaddresses\",\n  Whosonfirst: \"whosonfirst\",\n  Geonames: \"geonames\",\n  Foursquare: \"foursquare\",\n} as const;\nexport type SourceId = (typeof SourceId)[keyof typeof SourceId];\n\nexport function instanceOfSourceId(value: any): boolean {\n  for (const key in SourceId) {\n    if (Object.prototype.hasOwnProperty.call(SourceId, key)) {\n      if (SourceId[key as keyof typeof SourceId] === value) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function SourceIdFromJSON(json: any): SourceId {\n  return SourceIdFromJSONTyped(json, false);\n}\n\nexport function SourceIdFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): SourceId {\n  return json as SourceId;\n}\n\nexport function SourceIdToJSON(value?: SourceId | null): any {\n  return value as any;\n}\n\nexport function SourceIdToJSONTyped(\n  value: any,\n  ignoreDiscriminator: boolean,\n): SourceId {\n  return value as SourceId;\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n *\n * @export\n */\nexport const TraceAttributeKey = {\n  EdgeNames: \"edge.names\",\n  EdgeLength: \"edge.length\",\n  EdgeSpeed: \"edge.speed\",\n  EdgeRoadClass: \"edge.road_class\",\n  EdgeBeginHeading: \"edge.begin_heading\",\n  EdgeEndHeading: \"edge.end_heading\",\n  EdgeBeginShapeIndex: \"edge.begin_shape_index\",\n  EdgeEndShapeIndex: \"edge.end_shape_index\",\n  EdgeTraversability: \"edge.traversability\",\n  EdgeUse: \"edge.use\",\n  EdgeToll: \"edge.toll\",\n  EdgeUnpaved: \"edge.unpaved\",\n  EdgeTunnel: \"edge.tunnel\",\n  EdgeBridge: \"edge.bridge\",\n  EdgeRoundabout: \"edge.roundabout\",\n  EdgeInternalIntersection: \"edge.internal_intersection\",\n  EdgeDriveOnRight: \"edge.drive_on_right\",\n  EdgeSurface: \"edge.surface\",\n  EdgeSignExitNumber: \"edge.sign.exit_number\",\n  EdgeSignExitBranch: \"edge.sign.exit_branch\",\n  EdgeSignExitToward: \"edge.sign.exit_toward\",\n  EdgeSignExitName: \"edge.sign.exit_name\",\n  EdgeTravelMode: \"edge.travel_mode\",\n  EdgeVehicleType: \"edge.vehicle_type\",\n  EdgePedestrianType: \"edge.pedestrian_type\",\n  EdgeBicycleType: \"edge.bicycle_type\",\n  EdgeTransitType: \"edge.transit_type\",\n  EdgeId: \"edge.id\",\n  EdgeWayId: \"edge.way_id\",\n  EdgeWeightedGrade: \"edge.weighted_grade\",\n  EdgeMaxUpwardGrade: \"edge.max_upward_grade\",\n  EdgeMaxDownwardGrade: \"edge.max_downward_grade\",\n  EdgeMeanElevation: \"edge.mean_elevation\",\n  EdgeLaneCount: \"edge.lane_count\",\n  EdgeCycleLane: \"edge.cycle_lane\",\n  EdgeBicycleNetwork: \"edge.bicycle_network\",\n  EdgeSacScale: \"edge.sac_scale\",\n  EdgeSidewalk: \"edge.sidewalk\",\n  EdgeDensity: \"edge.density\",\n  EdgeSpeedLimit: \"edge.speed_limit\",\n  EdgeTruckSpeed: \"edge.truck_speed\",\n  EdgeTruckRoute: \"edge.truck_route\",\n  NodeIntersectingEdgeBeginHeading: \"node.intersecting_edge.begin_heading\",\n  NodeIntersectingEdgeFromEdgeNameConsistency:\n    \"node.intersecting_edge.from_edge_name_consistency\",\n  NodeIntersectingEdgeToEdgeNameConsistency:\n    \"node.intersecting_edge.to_edge_name_consistency\",\n  NodeIntersectingEdgeDriveability: \"node.intersecting_edge.driveability\",\n  NodeIntersectingEdgeCyclability: \"node.intersecting_edge.cyclability\",\n  NodeIntersectingEdgeWalkability: \"node.intersecting_edge.walkability\",\n  NodeIntersectingEdgeUse: \"node.intersecting_edge.use\",\n  NodeIntersectingEdgeRoadClass: \"node.intersecting_edge.road_class\",\n  NodeElapsedTime: \"node.elapsed_time\",\n  NodeAdminIndex: \"node.admin_index\",\n  NodeType: \"node.type\",\n  NodeFork: \"node.fork\",\n  NodeTimeZone: \"node.time_zone\",\n  OsmChangeset: \"osm_changeset\",\n  Shape: \"shape\",\n  AdminCountryCode: \"admin.country_code\",\n  AdminCountryText: \"admin.country_text\",\n  AdminStateCode: \"admin.state_code\",\n  AdminStateText: \"admin.state_text\",\n  MatchedPoint: \"matched.point\",\n  MatchedType: \"matched.type\",\n  MatchedEdgeIndex: \"matched.edge_index\",\n  MatchedBeginRouteDiscontinuity: \"matched.begin_route_discontinuity\",\n  MatchedEndRouteDiscontinuity: \"matched.end_route_discontinuity\",\n  MatchedDistanceAlongEdge: \"matched.distance_along_edge\",\n  MatchedDistanceFromTracePoint: \"matched.distance_from_trace_point\",\n} as const;\nexport type TraceAttributeKey =\n  (typeof TraceAttributeKey)[keyof typeof TraceAttributeKey];\n\nexport function instanceOfTraceAttributeKey(value: any): boolean {\n  for (const key in TraceAttributeKey) {\n    if (Object.prototype.hasOwnProperty.call(TraceAttributeKey, key)) {\n      if (TraceAttributeKey[key as keyof typeof TraceAttributeKey] === value) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function TraceAttributeKeyFromJSON(json: any): TraceAttributeKey {\n  return TraceAttributeKeyFromJSONTyped(json, false);\n}\n\nexport function TraceAttributeKeyFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): TraceAttributeKey {\n  return json as TraceAttributeKey;\n}\n\nexport function TraceAttributeKeyToJSON(value?: TraceAttributeKey | null): any {\n  return value as any;\n}\n\nexport function TraceAttributeKeyToJSONTyped(\n  value: any,\n  ignoreDiscriminator: boolean,\n): TraceAttributeKey {\n  return value as TraceAttributeKey;\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { TraceAttributeKey } from \"./TraceAttributeKey\";\nimport {\n  TraceAttributeKeyFromJSON,\n  TraceAttributeKeyFromJSONTyped,\n  TraceAttributeKeyToJSON,\n  TraceAttributeKeyToJSONTyped,\n} from \"./TraceAttributeKey\";\n\n/**\n *\n * @export\n * @interface TraceAttributeFilterOptions\n */\nexport interface TraceAttributeFilterOptions {\n  /**\n   *\n   * @type {Array<TraceAttributeKey>}\n   * @memberof TraceAttributeFilterOptions\n   */\n  attributes: Array<TraceAttributeKey>;\n  /**\n   * Determines whether the list of attributes will be used as a whitelist or a blacklist.\n   * @type {string}\n   * @memberof TraceAttributeFilterOptions\n   */\n  action: TraceAttributeFilterOptionsActionEnum;\n}\n\n/**\n * @export\n */\nexport const TraceAttributeFilterOptionsActionEnum = {\n  Include: \"include\",\n  Exclude: \"exclude\",\n} as const;\nexport type TraceAttributeFilterOptionsActionEnum =\n  (typeof TraceAttributeFilterOptionsActionEnum)[keyof typeof TraceAttributeFilterOptionsActionEnum];\n\n/**\n * Check if a given object implements the TraceAttributeFilterOptions interface.\n */\nexport function instanceOfTraceAttributeFilterOptions(\n  value: object,\n): value is TraceAttributeFilterOptions {\n  if (!(\"attributes\" in value) || value[\"attributes\"] === undefined)\n    return false;\n  if (!(\"action\" in value) || value[\"action\"] === undefined) return false;\n  return true;\n}\n\nexport function TraceAttributeFilterOptionsFromJSON(\n  json: any,\n): TraceAttributeFilterOptions {\n  return TraceAttributeFilterOptionsFromJSONTyped(json, false);\n}\n\nexport function TraceAttributeFilterOptionsFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): TraceAttributeFilterOptions {\n  if (json == null) {\n    return json;\n  }\n  return {\n    attributes: (json[\"attributes\"] as Array<any>).map(\n      TraceAttributeKeyFromJSON,\n    ),\n    action: json[\"action\"],\n  };\n}\n\nexport function TraceAttributeFilterOptionsToJSON(\n  json: any,\n): TraceAttributeFilterOptions {\n  return TraceAttributeFilterOptionsToJSONTyped(json, false);\n}\n\nexport function TraceAttributeFilterOptionsToJSONTyped(\n  value?: TraceAttributeFilterOptions | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    attributes: (value[\"attributes\"] as Array<any>).map(\n      TraceAttributeKeyToJSON,\n    ),\n    action: value[\"action\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { Traversability } from \"./Traversability\";\nimport {\n  TraversabilityFromJSON,\n  TraversabilityFromJSONTyped,\n  TraversabilityToJSON,\n  TraversabilityToJSONTyped,\n} from \"./Traversability\";\nimport type { EdgeSign } from \"./EdgeSign\";\nimport {\n  EdgeSignFromJSON,\n  EdgeSignFromJSONTyped,\n  EdgeSignToJSON,\n  EdgeSignToJSONTyped,\n} from \"./EdgeSign\";\nimport type { EndNode } from \"./EndNode\";\nimport {\n  EndNodeFromJSON,\n  EndNodeFromJSONTyped,\n  EndNodeToJSON,\n  EndNodeToJSONTyped,\n} from \"./EndNode\";\nimport type { EdgeUse } from \"./EdgeUse\";\nimport {\n  EdgeUseFromJSON,\n  EdgeUseFromJSONTyped,\n  EdgeUseToJSON,\n  EdgeUseToJSONTyped,\n} from \"./EdgeUse\";\nimport type { RoadClass } from \"./RoadClass\";\nimport {\n  RoadClassFromJSON,\n  RoadClassFromJSONTyped,\n  RoadClassToJSON,\n  RoadClassToJSONTyped,\n} from \"./RoadClass\";\nimport type { TravelMode } from \"./TravelMode\";\nimport {\n  TravelModeFromJSON,\n  TravelModeFromJSONTyped,\n  TravelModeToJSON,\n  TravelModeToJSONTyped,\n} from \"./TravelMode\";\n\n/**\n *\n * @export\n * @interface TraceEdge\n */\nexport interface TraceEdge {\n  /**\n   * The name(s) of the road at this edge, if any.\n   * @type {Array<string>}\n   * @memberof TraceEdge\n   */\n  names?: Array<string>;\n  /**\n   * The length of this edge in `units`.\n   * @type {number}\n   * @memberof TraceEdge\n   */\n  length?: number;\n  /**\n   * The speed of this edge in `units`/hr, in terms of average/free-flow speed for routing purposes. This is affected by any number of factors such as the road service, vehicle type, etc. and not just the posted speed limits.\n   * @type {number}\n   * @memberof TraceEdge\n   */\n  speed?: number;\n  /**\n   *\n   * @type {RoadClass}\n   * @memberof TraceEdge\n   */\n  roadClass?: RoadClass;\n  /**\n   * The direction at the beginning of an edge. The units are degrees clockwise from north.\n   * @type {number}\n   * @memberof TraceEdge\n   */\n  beginHeading?: number;\n  /**\n   * The direction at the end of an edge. The units are degrees clockwise from north.\n   * @type {number}\n   * @memberof TraceEdge\n   */\n  endHeading?: number;\n  /**\n   * Index into the list of shape points for the start of the edge.\n   * @type {number}\n   * @memberof TraceEdge\n   */\n  beginShapeIndex?: number;\n  /**\n   * Index into the list of shape points for the end of the edge.\n   * @type {number}\n   * @memberof TraceEdge\n   */\n  endShapeIndex?: number;\n  /**\n   *\n   * @type {Traversability}\n   * @memberof TraceEdge\n   */\n  traversability?: Traversability;\n  /**\n   *\n   * @type {EdgeUse}\n   * @memberof TraceEdge\n   */\n  use?: EdgeUse;\n  /**\n   * True if the edge has a toll.\n   * @type {boolean}\n   * @memberof TraceEdge\n   */\n  toll?: boolean;\n  /**\n   * True if the edge has rough payment.\n   * @type {boolean}\n   * @memberof TraceEdge\n   */\n  unpaved?: boolean;\n  /**\n   * True if the edge is a tunnel.\n   * @type {boolean}\n   * @memberof TraceEdge\n   */\n  tunnel?: boolean;\n  /**\n   * True if the edge is a bridge.\n   * @type {boolean}\n   * @memberof TraceEdge\n   */\n  bridge?: boolean;\n  /**\n   * True if the edge is a roundabout.\n   * @type {boolean}\n   * @memberof TraceEdge\n   */\n  roundabout?: boolean;\n  /**\n   * True if the edge is an internal intersection.\n   * @type {boolean}\n   * @memberof TraceEdge\n   */\n  internalIntersection?: boolean;\n  /**\n   * True if the edge is in an area where you must drive on the right side of the road.\n   * @type {boolean}\n   * @memberof TraceEdge\n   */\n  driveOnRight?: boolean;\n  /**\n   * The type of surface for the edge.\n   * @type {string}\n   * @memberof TraceEdge\n   */\n  surface?: TraceEdgeSurfaceEnum;\n  /**\n   *\n   * @type {EdgeSign}\n   * @memberof TraceEdge\n   */\n  sign?: EdgeSign;\n  /**\n   *\n   * @type {TravelMode}\n   * @memberof TraceEdge\n   */\n  travelMode?: TravelMode;\n  /**\n   *\n   * @type {string}\n   * @memberof TraceEdge\n   */\n  vehicleType?: TraceEdgeVehicleTypeEnum;\n  /**\n   *\n   * @type {string}\n   * @memberof TraceEdge\n   */\n  pedestrianType?: TraceEdgePedestrianTypeEnum;\n  /**\n   *\n   * @type {string}\n   * @memberof TraceEdge\n   */\n  bicycleType?: TraceEdgeBicycleTypeEnum;\n  /**\n   *\n   * @type {string}\n   * @memberof TraceEdge\n   */\n  transitType?: TraceEdgeTransitTypeEnum;\n  /**\n   *\n   * @type {number}\n   * @memberof TraceEdge\n   */\n  id?: number;\n  /**\n   * The way identifier of the edge in OSM.\n   * @type {number}\n   * @memberof TraceEdge\n   */\n  wayId?: number;\n  /**\n   * The weighted grade factor. The weighted grade is derived from elevation data. It is a measure used for hill avoidance in routing - sort of a relative energy use along an edge. But since an edge can possibly go up and down over several hills, it might not equate to what you would normally think of as grade.\n   * @type {number}\n   * @memberof TraceEdge\n   */\n  weightedGrade?: number;\n  /**\n   * The maximum upward slope. A value of 32768 indicates no elevation data is available for this edge.\n   * @type {number}\n   * @memberof TraceEdge\n   */\n  maxUpwardGrade?: number;\n  /**\n   * The maximum downward slope. A value of 32768 indicates no elevation data is available for this edge.\n   * @type {number}\n   * @memberof TraceEdge\n   */\n  maxDownwardGrade?: number;\n  /**\n   * The mean elevation along the edge. Units are meters by default. If the `units` are specified as miles, then the mean elevation is returned in feet. A value of 32768 indicates no elevation data is available for this edge.\n   * @type {number}\n   * @memberof TraceEdge\n   */\n  meanElevation?: number;\n  /**\n   * The number of lanes for this edge.\n   * @type {number}\n   * @memberof TraceEdge\n   */\n  laneCount?: number;\n  /**\n   * The type of cycle lane (if any) along this edge.\n   * @type {string}\n   * @memberof TraceEdge\n   */\n  cycleLane?: TraceEdgeCycleLaneEnum;\n  /**\n   * The type of bicycle network, if any. This is an integer comprised of constants bitwise or'd together. For example, a route that's part of both a local and mountain network would have a value of 12.\n   * 1 - National 2 - Regional 4 - Local 8 - Mountain\n   * @type {number}\n   * @memberof TraceEdge\n   */\n  bicycleNetwork?: number;\n  /**\n   * The difficulty of the hiking trail according to the SAC scale.\n   * 0 - No Sac Scale 1 - Hiking 2 - Mountain hiking 3 - Demanding mountain hiking 4 - Alpine hiking 5 - Demanding alpine hiking 6 - Difficult alpine hiking\n   * @type {number}\n   * @memberof TraceEdge\n   */\n  sacScale?: number;\n  /**\n   *\n   * @type {string}\n   * @memberof TraceEdge\n   */\n  sidewalk?: TraceEdgeSidewalkEnum;\n  /**\n   *\n   * @type {number}\n   * @memberof TraceEdge\n   */\n  density?: number;\n  /**\n   * The speed limit along the edge measured in `units`/hr. This may be either an integer or the string \"unlimited\" if speed limit data is available. If absent, there is no speed limit data available.\n   * @type {number}\n   * @memberof TraceEdge\n   */\n  speedLimit?: number;\n  /**\n   * The truck speed of this edge in `units`/hr, in terms of average/free-flow speed for routing purposes. This is affected by any number of factors such as the road service, vehicle type, etc. and not just the posted speed limits.\n   * @type {number}\n   * @memberof TraceEdge\n   */\n  truckSpeed?: number;\n  /**\n   * True if the edge is part of a truck route/network.\n   * @type {boolean}\n   * @memberof TraceEdge\n   */\n  truckRoute?: boolean;\n  /**\n   *\n   * @type {EndNode}\n   * @memberof TraceEdge\n   */\n  endNode?: EndNode;\n}\n\n/**\n * @export\n */\nexport const TraceEdgeSurfaceEnum = {\n  PavedSmooth: \"paved_smooth\",\n  Paved: \"paved\",\n  PavedRough: \"paved_rough\",\n  Compacted: \"compacted\",\n  Dirt: \"dirt\",\n  Gravel: \"gravel\",\n  Path: \"path\",\n  Impassable: \"impassable\",\n} as const;\nexport type TraceEdgeSurfaceEnum =\n  (typeof TraceEdgeSurfaceEnum)[keyof typeof TraceEdgeSurfaceEnum];\n\n/**\n * @export\n */\nexport const TraceEdgeVehicleTypeEnum = {\n  Car: \"car\",\n  Motorcycle: \"motorcycle\",\n  Bus: \"bus\",\n  TractorTrailer: \"tractor_trailer\",\n  GolfCart: \"golf_cart\",\n  LowSpeedVehicle: \"low_speed_vehicle\",\n} as const;\nexport type TraceEdgeVehicleTypeEnum =\n  (typeof TraceEdgeVehicleTypeEnum)[keyof typeof TraceEdgeVehicleTypeEnum];\n\n/**\n * @export\n */\nexport const TraceEdgePedestrianTypeEnum = {\n  Foot: \"foot\",\n  Wheelchair: \"wheelchair\",\n  Segway: \"segway\",\n} as const;\nexport type TraceEdgePedestrianTypeEnum =\n  (typeof TraceEdgePedestrianTypeEnum)[keyof typeof TraceEdgePedestrianTypeEnum];\n\n/**\n * @export\n */\nexport const TraceEdgeBicycleTypeEnum = {\n  Road: \"road\",\n  Cross: \"cross\",\n  Hybrid: \"hybrid\",\n  Mountain: \"mountain\",\n} as const;\nexport type TraceEdgeBicycleTypeEnum =\n  (typeof TraceEdgeBicycleTypeEnum)[keyof typeof TraceEdgeBicycleTypeEnum];\n\n/**\n * @export\n */\nexport const TraceEdgeTransitTypeEnum = {\n  Tram: \"tram\",\n  Metro: \"metro\",\n  Rail: \"rail\",\n  Bus: \"bus\",\n  Ferry: \"ferry\",\n  CableCar: \"cable_car\",\n  Gondola: \"gondola\",\n  Funicular: \"funicular\",\n} as const;\nexport type TraceEdgeTransitTypeEnum =\n  (typeof TraceEdgeTransitTypeEnum)[keyof typeof TraceEdgeTransitTypeEnum];\n\n/**\n * @export\n */\nexport const TraceEdgeCycleLaneEnum = {\n  None: \"none\",\n  Shared: \"shared\",\n  Dedicated: \"dedicated\",\n  Separated: \"separated\",\n} as const;\nexport type TraceEdgeCycleLaneEnum =\n  (typeof TraceEdgeCycleLaneEnum)[keyof typeof TraceEdgeCycleLaneEnum];\n\n/**\n * @export\n */\nexport const TraceEdgeSidewalkEnum = {\n  Left: \"left\",\n  Right: \"right\",\n  Both: \"both\",\n  None: \"none\",\n} as const;\nexport type TraceEdgeSidewalkEnum =\n  (typeof TraceEdgeSidewalkEnum)[keyof typeof TraceEdgeSidewalkEnum];\n\n/**\n * Check if a given object implements the TraceEdge interface.\n */\nexport function instanceOfTraceEdge(value: object): value is TraceEdge {\n  return true;\n}\n\nexport function TraceEdgeFromJSON(json: any): TraceEdge {\n  return TraceEdgeFromJSONTyped(json, false);\n}\n\nexport function TraceEdgeFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): TraceEdge {\n  if (json == null) {\n    return json;\n  }\n  return {\n    names: json[\"names\"] == null ? undefined : json[\"names\"],\n    length: json[\"length\"] == null ? undefined : json[\"length\"],\n    speed: json[\"speed\"] == null ? undefined : json[\"speed\"],\n    roadClass:\n      json[\"road_class\"] == null\n        ? undefined\n        : RoadClassFromJSON(json[\"road_class\"]),\n    beginHeading:\n      json[\"begin_heading\"] == null ? undefined : json[\"begin_heading\"],\n    endHeading: json[\"end_heading\"] == null ? undefined : json[\"end_heading\"],\n    beginShapeIndex:\n      json[\"begin_shape_index\"] == null ? undefined : json[\"begin_shape_index\"],\n    endShapeIndex:\n      json[\"end_shape_index\"] == null ? undefined : json[\"end_shape_index\"],\n    traversability:\n      json[\"traversability\"] == null\n        ? undefined\n        : TraversabilityFromJSON(json[\"traversability\"]),\n    use: json[\"use\"] == null ? undefined : EdgeUseFromJSON(json[\"use\"]),\n    toll: json[\"toll\"] == null ? undefined : json[\"toll\"],\n    unpaved: json[\"unpaved\"] == null ? undefined : json[\"unpaved\"],\n    tunnel: json[\"tunnel\"] == null ? undefined : json[\"tunnel\"],\n    bridge: json[\"bridge\"] == null ? undefined : json[\"bridge\"],\n    roundabout: json[\"roundabout\"] == null ? undefined : json[\"roundabout\"],\n    internalIntersection:\n      json[\"internal_intersection\"] == null\n        ? undefined\n        : json[\"internal_intersection\"],\n    driveOnRight:\n      json[\"drive_on_right\"] == null ? undefined : json[\"drive_on_right\"],\n    surface: json[\"surface\"] == null ? undefined : json[\"surface\"],\n    sign: json[\"sign\"] == null ? undefined : EdgeSignFromJSON(json[\"sign\"]),\n    travelMode:\n      json[\"travel_mode\"] == null\n        ? undefined\n        : TravelModeFromJSON(json[\"travel_mode\"]),\n    vehicleType:\n      json[\"vehicle_type\"] == null ? undefined : json[\"vehicle_type\"],\n    pedestrianType:\n      json[\"pedestrian_type\"] == null ? undefined : json[\"pedestrian_type\"],\n    bicycleType:\n      json[\"bicycle_type\"] == null ? undefined : json[\"bicycle_type\"],\n    transitType:\n      json[\"transit_type\"] == null ? undefined : json[\"transit_type\"],\n    id: json[\"id\"] == null ? undefined : json[\"id\"],\n    wayId: json[\"way_id\"] == null ? undefined : json[\"way_id\"],\n    weightedGrade:\n      json[\"weighted_grade\"] == null ? undefined : json[\"weighted_grade\"],\n    maxUpwardGrade:\n      json[\"max_upward_grade\"] == null ? undefined : json[\"max_upward_grade\"],\n    maxDownwardGrade:\n      json[\"max_downward_grade\"] == null\n        ? undefined\n        : json[\"max_downward_grade\"],\n    meanElevation:\n      json[\"mean_elevation\"] == null ? undefined : json[\"mean_elevation\"],\n    laneCount: json[\"lane_count\"] == null ? undefined : json[\"lane_count\"],\n    cycleLane: json[\"cycle_lane\"] == null ? undefined : json[\"cycle_lane\"],\n    bicycleNetwork:\n      json[\"bicycle_network\"] == null ? undefined : json[\"bicycle_network\"],\n    sacScale: json[\"sac_scale\"] == null ? undefined : json[\"sac_scale\"],\n    sidewalk: json[\"sidewalk\"] == null ? undefined : json[\"sidewalk\"],\n    density: json[\"density\"] == null ? undefined : json[\"density\"],\n    speedLimit: json[\"speed_limit\"] == null ? undefined : json[\"speed_limit\"],\n    truckSpeed: json[\"truck_speed\"] == null ? undefined : json[\"truck_speed\"],\n    truckRoute: json[\"truck_route\"] == null ? undefined : json[\"truck_route\"],\n    endNode:\n      json[\"end_node\"] == null ? undefined : EndNodeFromJSON(json[\"end_node\"]),\n  };\n}\n\nexport function TraceEdgeToJSON(json: any): TraceEdge {\n  return TraceEdgeToJSONTyped(json, false);\n}\n\nexport function TraceEdgeToJSONTyped(\n  value?: TraceEdge | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    names: value[\"names\"],\n    length: value[\"length\"],\n    speed: value[\"speed\"],\n    road_class: RoadClassToJSON(value[\"roadClass\"]),\n    begin_heading: value[\"beginHeading\"],\n    end_heading: value[\"endHeading\"],\n    begin_shape_index: value[\"beginShapeIndex\"],\n    end_shape_index: value[\"endShapeIndex\"],\n    traversability: TraversabilityToJSON(value[\"traversability\"]),\n    use: EdgeUseToJSON(value[\"use\"]),\n    toll: value[\"toll\"],\n    unpaved: value[\"unpaved\"],\n    tunnel: value[\"tunnel\"],\n    bridge: value[\"bridge\"],\n    roundabout: value[\"roundabout\"],\n    internal_intersection: value[\"internalIntersection\"],\n    drive_on_right: value[\"driveOnRight\"],\n    surface: value[\"surface\"],\n    sign: EdgeSignToJSON(value[\"sign\"]),\n    travel_mode: TravelModeToJSON(value[\"travelMode\"]),\n    vehicle_type: value[\"vehicleType\"],\n    pedestrian_type: value[\"pedestrianType\"],\n    bicycle_type: value[\"bicycleType\"],\n    transit_type: value[\"transitType\"],\n    id: value[\"id\"],\n    way_id: value[\"wayId\"],\n    weighted_grade: value[\"weightedGrade\"],\n    max_upward_grade: value[\"maxUpwardGrade\"],\n    max_downward_grade: value[\"maxDownwardGrade\"],\n    mean_elevation: value[\"meanElevation\"],\n    lane_count: value[\"laneCount\"],\n    cycle_lane: value[\"cycleLane\"],\n    bicycle_network: value[\"bicycleNetwork\"],\n    sac_scale: value[\"sacScale\"],\n    sidewalk: value[\"sidewalk\"],\n    density: value[\"density\"],\n    speed_limit: value[\"speedLimit\"],\n    truck_speed: value[\"truckSpeed\"],\n    truck_route: value[\"truckRoute\"],\n    end_node: EndNodeToJSON(value[\"endNode\"]),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { TraceEdge } from \"./TraceEdge\";\nimport {\n  TraceEdgeFromJSON,\n  TraceEdgeFromJSONTyped,\n  TraceEdgeToJSON,\n  TraceEdgeToJSONTyped,\n} from \"./TraceEdge\";\nimport type { MatchedPoint } from \"./MatchedPoint\";\nimport {\n  MatchedPointFromJSON,\n  MatchedPointFromJSONTyped,\n  MatchedPointToJSON,\n  MatchedPointToJSONTyped,\n} from \"./MatchedPoint\";\nimport type { AdminRegion } from \"./AdminRegion\";\nimport {\n  AdminRegionFromJSON,\n  AdminRegionFromJSONTyped,\n  AdminRegionToJSON,\n  AdminRegionToJSONTyped,\n} from \"./AdminRegion\";\n\n/**\n *\n * @export\n * @interface TraceAttributesBaseResponse\n */\nexport interface TraceAttributesBaseResponse {\n  /**\n   * The list of edges matched along the path.\n   * @type {Array<TraceEdge>}\n   * @memberof TraceAttributesBaseResponse\n   */\n  edges?: Array<TraceEdge> | null;\n  /**\n   * The set of administrative regions matched along the path. Rather than repeating this information for every end node, the admins in this list are referenced by index.\n   * @type {Array<AdminRegion>}\n   * @memberof TraceAttributesBaseResponse\n   */\n  admins?: Array<AdminRegion>;\n  /**\n   * List of match results when using the map_snap shape match algorithm. There is a one-to-one correspondence with the input set of latitude, longitude coordinates and this list of match results.\n   * @type {Array<MatchedPoint>}\n   * @memberof TraceAttributesBaseResponse\n   */\n  matchedPoints?: Array<MatchedPoint>;\n  /**\n   *\n   * @type {number}\n   * @memberof TraceAttributesBaseResponse\n   */\n  osmChangeset?: number;\n  /**\n   * The encoded polyline (https://developers.google.com/maps/documentation/utilities/polylinealgorithm) of the matched path.\n   * @type {string}\n   * @memberof TraceAttributesBaseResponse\n   */\n  shape?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof TraceAttributesBaseResponse\n   */\n  confidenceScore?: number;\n}\n\n/**\n * Check if a given object implements the TraceAttributesBaseResponse interface.\n */\nexport function instanceOfTraceAttributesBaseResponse(\n  value: object,\n): value is TraceAttributesBaseResponse {\n  return true;\n}\n\nexport function TraceAttributesBaseResponseFromJSON(\n  json: any,\n): TraceAttributesBaseResponse {\n  return TraceAttributesBaseResponseFromJSONTyped(json, false);\n}\n\nexport function TraceAttributesBaseResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): TraceAttributesBaseResponse {\n  if (json == null) {\n    return json;\n  }\n  return {\n    edges:\n      json[\"edges\"] == null\n        ? undefined\n        : (json[\"edges\"] as Array<any>).map(TraceEdgeFromJSON),\n    admins:\n      json[\"admins\"] == null\n        ? undefined\n        : (json[\"admins\"] as Array<any>).map(AdminRegionFromJSON),\n    matchedPoints:\n      json[\"matched_points\"] == null\n        ? undefined\n        : (json[\"matched_points\"] as Array<any>).map(MatchedPointFromJSON),\n    osmChangeset:\n      json[\"osm_changeset\"] == null ? undefined : json[\"osm_changeset\"],\n    shape: json[\"shape\"] == null ? undefined : json[\"shape\"],\n    confidenceScore:\n      json[\"confidence_score\"] == null ? undefined : json[\"confidence_score\"],\n  };\n}\n\nexport function TraceAttributesBaseResponseToJSON(\n  json: any,\n): TraceAttributesBaseResponse {\n  return TraceAttributesBaseResponseToJSONTyped(json, false);\n}\n\nexport function TraceAttributesBaseResponseToJSONTyped(\n  value?: TraceAttributesBaseResponse | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    edges:\n      value[\"edges\"] == null\n        ? undefined\n        : (value[\"edges\"] as Array<any>).map(TraceEdgeToJSON),\n    admins:\n      value[\"admins\"] == null\n        ? undefined\n        : (value[\"admins\"] as Array<any>).map(AdminRegionToJSON),\n    matched_points:\n      value[\"matchedPoints\"] == null\n        ? undefined\n        : (value[\"matchedPoints\"] as Array<any>).map(MatchedPointToJSON),\n    osm_changeset: value[\"osmChangeset\"],\n    shape: value[\"shape\"],\n    confidence_score: value[\"confidenceScore\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { CostingOptions } from \"./CostingOptions\";\nimport {\n  CostingOptionsFromJSON,\n  CostingOptionsFromJSONTyped,\n  CostingOptionsToJSON,\n  CostingOptionsToJSONTyped,\n} from \"./CostingOptions\";\nimport type { MapMatchCostingModel } from \"./MapMatchCostingModel\";\nimport {\n  MapMatchCostingModelFromJSON,\n  MapMatchCostingModelFromJSONTyped,\n  MapMatchCostingModelToJSON,\n  MapMatchCostingModelToJSONTyped,\n} from \"./MapMatchCostingModel\";\nimport type { TraceAttributeFilterOptions } from \"./TraceAttributeFilterOptions\";\nimport {\n  TraceAttributeFilterOptionsFromJSON,\n  TraceAttributeFilterOptionsFromJSONTyped,\n  TraceAttributeFilterOptionsToJSON,\n  TraceAttributeFilterOptionsToJSONTyped,\n} from \"./TraceAttributeFilterOptions\";\nimport type { DistanceUnit } from \"./DistanceUnit\";\nimport {\n  DistanceUnitFromJSON,\n  DistanceUnitFromJSONTyped,\n  DistanceUnitToJSON,\n  DistanceUnitToJSONTyped,\n} from \"./DistanceUnit\";\nimport type { RoutingLanguages } from \"./RoutingLanguages\";\nimport {\n  RoutingLanguagesFromJSON,\n  RoutingLanguagesFromJSONTyped,\n  RoutingLanguagesToJSON,\n  RoutingLanguagesToJSONTyped,\n} from \"./RoutingLanguages\";\nimport type { MapMatchWaypoint } from \"./MapMatchWaypoint\";\nimport {\n  MapMatchWaypointFromJSON,\n  MapMatchWaypointFromJSONTyped,\n  MapMatchWaypointToJSON,\n  MapMatchWaypointToJSONTyped,\n} from \"./MapMatchWaypoint\";\n\n/**\n *\n * @export\n * @interface TraceAttributesRequest\n */\nexport interface TraceAttributesRequest {\n  /**\n   * An identifier to disambiguate requests (echoed by the server).\n   * @type {string}\n   * @memberof TraceAttributesRequest\n   */\n  id?: string;\n  /**\n   * REQUIRED if `encoded_polyline` is not present. Note that `break` type locations are only supported when `shape_match` is set to `map_match`.\n   * @type {Array<MapMatchWaypoint>}\n   * @memberof TraceAttributesRequest\n   */\n  shape?: Array<MapMatchWaypoint>;\n  /**\n   * REQUIRED if `shape` is not present. An encoded polyline (https://developers.google.com/maps/documentation/utilities/polylinealgorithm). Note that the polyline must be encoded with 6 digits of precision rather than the default 5!\n   * @type {string}\n   * @memberof TraceAttributesRequest\n   */\n  encodedPolyline?: string;\n  /**\n   *\n   * @type {MapMatchCostingModel}\n   * @memberof TraceAttributesRequest\n   */\n  costing: MapMatchCostingModel;\n  /**\n   *\n   * @type {CostingOptions}\n   * @memberof TraceAttributesRequest\n   */\n  costingOptions?: CostingOptions;\n  /**\n   * Three snapping modes provide some control over how the map matching occurs. `edge_walk` is fast, but requires extremely precise data that matches the route graph almost perfectly. `map_snap` can handle significantly noisier data, but is very expensive. `walk_or_snap`, the default, tries to use edge walking first and falls back to map matching if edge walking fails.\n   * In general, you should not need to change this parameter unless you want to trace a multi-leg route with multiple `break` locations in the `shape`.\n   * @type {string}\n   * @memberof TraceAttributesRequest\n   */\n  shapeMatch?: TraceAttributesRequestShapeMatchEnum;\n  /**\n   *\n   * @type {DistanceUnit}\n   * @memberof TraceAttributesRequest\n   */\n  units?: DistanceUnit;\n  /**\n   *\n   * @type {RoutingLanguages}\n   * @memberof TraceAttributesRequest\n   */\n  language?: RoutingLanguages;\n  /**\n   * The level of directional narrative to include. Locations and times will always be returned, but narrative generation verbosity can be controlled with this parameter.\n   * @type {string}\n   * @memberof TraceAttributesRequest\n   */\n  directionsType?: TraceAttributesRequestDirectionsTypeEnum;\n  /**\n   * If present, provides either a whitelist or a blacklist of keys to include/exclude in the response. This key is optional, and if omitted from the request, all available info will be returned.\n   * @type {TraceAttributeFilterOptions}\n   * @memberof TraceAttributesRequest\n   */\n  filters?: TraceAttributeFilterOptions;\n  /**\n   * If greater than zero, attempts to include elevation along the route at regular intervals. The \"native\" internal resolution is 30m, so we recommend you use this when possible. This number is interpreted as either meters or feet depending on the unit parameter.\n   * Elevation for route sections containing a bridge or tunnel is interpolated linearly. This doesn't always match the true elevation of the bridge/tunnel, but it prevents sharp artifacts from the surrounding terrain. This functionality is unique to the routing endpoints and is not available via the elevation API.\n   * NOTE: This has no effect on the OSRM response format.\n   * @type {number}\n   * @memberof TraceAttributesRequest\n   */\n  elevationInterval?: number;\n}\n\n/**\n * @export\n */\nexport const TraceAttributesRequestShapeMatchEnum = {\n  EdgeWalk: \"edge_walk\",\n  MapSnap: \"map_snap\",\n  WalkOrSnap: \"walk_or_snap\",\n} as const;\nexport type TraceAttributesRequestShapeMatchEnum =\n  (typeof TraceAttributesRequestShapeMatchEnum)[keyof typeof TraceAttributesRequestShapeMatchEnum];\n\n/**\n * @export\n */\nexport const TraceAttributesRequestDirectionsTypeEnum = {\n  None: \"none\",\n  Maneuvers: \"maneuvers\",\n  Instructions: \"instructions\",\n} as const;\nexport type TraceAttributesRequestDirectionsTypeEnum =\n  (typeof TraceAttributesRequestDirectionsTypeEnum)[keyof typeof TraceAttributesRequestDirectionsTypeEnum];\n\n/**\n * Check if a given object implements the TraceAttributesRequest interface.\n */\nexport function instanceOfTraceAttributesRequest(\n  value: object,\n): value is TraceAttributesRequest {\n  if (!(\"costing\" in value) || value[\"costing\"] === undefined) return false;\n  return true;\n}\n\nexport function TraceAttributesRequestFromJSON(\n  json: any,\n): TraceAttributesRequest {\n  return TraceAttributesRequestFromJSONTyped(json, false);\n}\n\nexport function TraceAttributesRequestFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): TraceAttributesRequest {\n  if (json == null) {\n    return json;\n  }\n  return {\n    id: json[\"id\"] == null ? undefined : json[\"id\"],\n    shape:\n      json[\"shape\"] == null\n        ? undefined\n        : (json[\"shape\"] as Array<any>).map(MapMatchWaypointFromJSON),\n    encodedPolyline:\n      json[\"encoded_polyline\"] == null ? undefined : json[\"encoded_polyline\"],\n    costing: MapMatchCostingModelFromJSON(json[\"costing\"]),\n    costingOptions:\n      json[\"costing_options\"] == null\n        ? undefined\n        : CostingOptionsFromJSON(json[\"costing_options\"]),\n    shapeMatch: json[\"shape_match\"] == null ? undefined : json[\"shape_match\"],\n    units:\n      json[\"units\"] == null ? undefined : DistanceUnitFromJSON(json[\"units\"]),\n    language:\n      json[\"language\"] == null\n        ? undefined\n        : RoutingLanguagesFromJSON(json[\"language\"]),\n    directionsType:\n      json[\"directions_type\"] == null ? undefined : json[\"directions_type\"],\n    filters:\n      json[\"filters\"] == null\n        ? undefined\n        : TraceAttributeFilterOptionsFromJSON(json[\"filters\"]),\n    elevationInterval:\n      json[\"elevation_interval\"] == null\n        ? undefined\n        : json[\"elevation_interval\"],\n  };\n}\n\nexport function TraceAttributesRequestToJSON(\n  json: any,\n): TraceAttributesRequest {\n  return TraceAttributesRequestToJSONTyped(json, false);\n}\n\nexport function TraceAttributesRequestToJSONTyped(\n  value?: TraceAttributesRequest | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    id: value[\"id\"],\n    shape:\n      value[\"shape\"] == null\n        ? undefined\n        : (value[\"shape\"] as Array<any>).map(MapMatchWaypointToJSON),\n    encoded_polyline: value[\"encodedPolyline\"],\n    costing: MapMatchCostingModelToJSON(value[\"costing\"]),\n    costing_options: CostingOptionsToJSON(value[\"costingOptions\"]),\n    shape_match: value[\"shapeMatch\"],\n    units: DistanceUnitToJSON(value[\"units\"]),\n    language: RoutingLanguagesToJSON(value[\"language\"]),\n    directions_type: value[\"directionsType\"],\n    filters: TraceAttributeFilterOptionsToJSON(value[\"filters\"]),\n    elevation_interval: value[\"elevationInterval\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\nimport type { TraceEdge } from \"./TraceEdge\";\nimport {\n  TraceEdgeFromJSON,\n  TraceEdgeFromJSONTyped,\n  TraceEdgeToJSON,\n  TraceEdgeToJSONTyped,\n} from \"./TraceEdge\";\nimport type { RoutingLongUnits } from \"./RoutingLongUnits\";\nimport {\n  RoutingLongUnitsFromJSON,\n  RoutingLongUnitsFromJSONTyped,\n  RoutingLongUnitsToJSON,\n  RoutingLongUnitsToJSONTyped,\n} from \"./RoutingLongUnits\";\nimport type { MatchedPoint } from \"./MatchedPoint\";\nimport {\n  MatchedPointFromJSON,\n  MatchedPointFromJSONTyped,\n  MatchedPointToJSON,\n  MatchedPointToJSONTyped,\n} from \"./MatchedPoint\";\nimport type { AdminRegion } from \"./AdminRegion\";\nimport {\n  AdminRegionFromJSON,\n  AdminRegionFromJSONTyped,\n  AdminRegionToJSON,\n  AdminRegionToJSONTyped,\n} from \"./AdminRegion\";\nimport type { TraceAttributesBaseResponse } from \"./TraceAttributesBaseResponse\";\nimport {\n  TraceAttributesBaseResponseFromJSON,\n  TraceAttributesBaseResponseFromJSONTyped,\n  TraceAttributesBaseResponseToJSON,\n  TraceAttributesBaseResponseToJSONTyped,\n} from \"./TraceAttributesBaseResponse\";\n\n/**\n *\n * @export\n * @interface TraceAttributesResponse\n */\nexport interface TraceAttributesResponse {\n  /**\n   * The list of edges matched along the path.\n   * @type {Array<TraceEdge>}\n   * @memberof TraceAttributesResponse\n   */\n  edges?: Array<TraceEdge>;\n  /**\n   * The set of administrative regions matched along the path. Rather than repeating this information for every end node, the admins in this list are referenced by index.\n   * @type {Array<AdminRegion>}\n   * @memberof TraceAttributesResponse\n   */\n  admins?: Array<AdminRegion>;\n  /**\n   * List of match results when using the map_snap shape match algorithm. There is a one-to-one correspondence with the input set of latitude, longitude coordinates and this list of match results.\n   * @type {Array<MatchedPoint>}\n   * @memberof TraceAttributesResponse\n   */\n  matchedPoints?: Array<MatchedPoint>;\n  /**\n   *\n   * @type {number}\n   * @memberof TraceAttributesResponse\n   */\n  osmChangeset?: number;\n  /**\n   * The encoded polyline (https://developers.google.com/maps/documentation/utilities/polylinealgorithm) of the matched path.\n   * @type {string}\n   * @memberof TraceAttributesResponse\n   */\n  shape?: string;\n  /**\n   *\n   * @type {number}\n   * @memberof TraceAttributesResponse\n   */\n  confidenceScore?: number;\n  /**\n   * An identifier to disambiguate requests (echoed by the server).\n   * @type {string}\n   * @memberof TraceAttributesResponse\n   */\n  id?: string;\n  /**\n   *\n   * @type {RoutingLongUnits}\n   * @memberof TraceAttributesResponse\n   */\n  units?: RoutingLongUnits;\n  /**\n   * Alternate paths, if any, that were not classified as the best match.\n   * @type {Array<TraceAttributesBaseResponse>}\n   * @memberof TraceAttributesResponse\n   */\n  alternatePaths?: Array<TraceAttributesBaseResponse>;\n}\n\n/**\n * Check if a given object implements the TraceAttributesResponse interface.\n */\nexport function instanceOfTraceAttributesResponse(\n  value: object,\n): value is TraceAttributesResponse {\n  return true;\n}\n\nexport function TraceAttributesResponseFromJSON(\n  json: any,\n): TraceAttributesResponse {\n  return TraceAttributesResponseFromJSONTyped(json, false);\n}\n\nexport function TraceAttributesResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): TraceAttributesResponse {\n  if (json == null) {\n    return json;\n  }\n  return {\n    edges:\n      json[\"edges\"] == null\n        ? undefined\n        : (json[\"edges\"] as Array<any>).map(TraceEdgeFromJSON),\n    admins:\n      json[\"admins\"] == null\n        ? undefined\n        : (json[\"admins\"] as Array<any>).map(AdminRegionFromJSON),\n    matchedPoints:\n      json[\"matched_points\"] == null\n        ? undefined\n        : (json[\"matched_points\"] as Array<any>).map(MatchedPointFromJSON),\n    osmChangeset:\n      json[\"osm_changeset\"] == null ? undefined : json[\"osm_changeset\"],\n    shape: json[\"shape\"] == null ? undefined : json[\"shape\"],\n    confidenceScore:\n      json[\"confidence_score\"] == null ? undefined : json[\"confidence_score\"],\n    id: json[\"id\"] == null ? undefined : json[\"id\"],\n    units:\n      json[\"units\"] == null\n        ? undefined\n        : RoutingLongUnitsFromJSON(json[\"units\"]),\n    alternatePaths:\n      json[\"alternate_paths\"] == null\n        ? undefined\n        : (json[\"alternate_paths\"] as Array<any>).map(\n            TraceAttributesBaseResponseFromJSON,\n          ),\n  };\n}\n\nexport function TraceAttributesResponseToJSON(\n  json: any,\n): TraceAttributesResponse {\n  return TraceAttributesResponseToJSONTyped(json, false);\n}\n\nexport function TraceAttributesResponseToJSONTyped(\n  value?: TraceAttributesResponse | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    edges:\n      value[\"edges\"] == null\n        ? undefined\n        : (value[\"edges\"] as Array<any>).map(TraceEdgeToJSON),\n    admins:\n      value[\"admins\"] == null\n        ? undefined\n        : (value[\"admins\"] as Array<any>).map(AdminRegionToJSON),\n    matched_points:\n      value[\"matchedPoints\"] == null\n        ? undefined\n        : (value[\"matchedPoints\"] as Array<any>).map(MatchedPointToJSON),\n    osm_changeset: value[\"osmChangeset\"],\n    shape: value[\"shape\"],\n    confidence_score: value[\"confidenceScore\"],\n    id: value[\"id\"],\n    units: RoutingLongUnitsToJSON(value[\"units\"]),\n    alternate_paths:\n      value[\"alternatePaths\"] == null\n        ? undefined\n        : (value[\"alternatePaths\"] as Array<any>).map(\n            TraceAttributesBaseResponseToJSON,\n          ),\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { mapValues } from \"../runtime\";\n/**\n *\n * @export\n * @interface TzResponse\n */\nexport interface TzResponse {\n  /**\n   * The canonical time zone ID. In the event that multiple time zones could be returned, the first one from the Unicode CLDR timezone.xml is returned.\n   * @type {string}\n   * @memberof TzResponse\n   */\n  tzId: string;\n  /**\n   * The base offset, in seconds, from UTC that is normally in effect for this time zone.\n   * @type {number}\n   * @memberof TzResponse\n   */\n  baseUtcOffset: number;\n  /**\n   * The special offset, in seconds, from UTC that is in effect for this time zone as of the queried timestamp (defaults to now). If no additional offsets are in effect, this value is zero. This typically reflects Daylight Saving Time, but may indicate other special offsets. To get the total offset in effect, add `dst_offset` and `utc_offset` together.\n   * @type {number}\n   * @memberof TzResponse\n   */\n  dstOffset: number;\n  /**\n   * Integer non-leap seconds since January 1, 1970 (UNIX timestamp). If a timestamp is included with the request parameters, it will be echoed here. Otherwise, this will contain the current timestamp.\n   * @type {number}\n   * @memberof TzResponse\n   */\n  timestamp: number;\n  /**\n   * The local time expressed as an RFC 2822 timestamp (e.g. Tue, 1 Jul 2003 10:52:37 +0200). If a timestamp is included in the request, it will be localized here. Otherwise, this will reflect the time of the request.\n   * @type {string}\n   * @memberof TzResponse\n   */\n  localRfc2822Timestamp: string;\n  /**\n   * The local time expressed as an RFC 3389 (ISO 8601) timestamp (e.g. 2003-06-01T10:52:37+02:00). If a timestamp is included in the request, it will be localized here. Otherwise, this will reflect the time of the request.\n   * @type {string}\n   * @memberof TzResponse\n   */\n  localRfc3389Timestamp: string;\n}\n\n/**\n * Check if a given object implements the TzResponse interface.\n */\nexport function instanceOfTzResponse(value: object): value is TzResponse {\n  if (!(\"tzId\" in value) || value[\"tzId\"] === undefined) return false;\n  if (!(\"baseUtcOffset\" in value) || value[\"baseUtcOffset\"] === undefined)\n    return false;\n  if (!(\"dstOffset\" in value) || value[\"dstOffset\"] === undefined) return false;\n  if (!(\"timestamp\" in value) || value[\"timestamp\"] === undefined) return false;\n  if (\n    !(\"localRfc2822Timestamp\" in value) ||\n    value[\"localRfc2822Timestamp\"] === undefined\n  )\n    return false;\n  if (\n    !(\"localRfc3389Timestamp\" in value) ||\n    value[\"localRfc3389Timestamp\"] === undefined\n  )\n    return false;\n  return true;\n}\n\nexport function TzResponseFromJSON(json: any): TzResponse {\n  return TzResponseFromJSONTyped(json, false);\n}\n\nexport function TzResponseFromJSONTyped(\n  json: any,\n  ignoreDiscriminator: boolean,\n): TzResponse {\n  if (json == null) {\n    return json;\n  }\n  return {\n    tzId: json[\"tz_id\"],\n    baseUtcOffset: json[\"base_utc_offset\"],\n    dstOffset: json[\"dst_offset\"],\n    timestamp: json[\"timestamp\"],\n    localRfc2822Timestamp: json[\"local_rfc_2822_timestamp\"],\n    localRfc3389Timestamp: json[\"local_rfc_3389_timestamp\"],\n  };\n}\n\nexport function TzResponseToJSON(json: any): TzResponse {\n  return TzResponseToJSONTyped(json, false);\n}\n\nexport function TzResponseToJSONTyped(\n  value?: TzResponse | null,\n  ignoreDiscriminator: boolean = false,\n): any {\n  if (value == null) {\n    return value;\n  }\n\n  return {\n    tz_id: value[\"tzId\"],\n    base_utc_offset: value[\"baseUtcOffset\"],\n    dst_offset: value[\"dstOffset\"],\n    timestamp: value[\"timestamp\"],\n    local_rfc_2822_timestamp: value[\"localRfc2822Timestamp\"],\n    local_rfc_3389_timestamp: value[\"localRfc3389Timestamp\"],\n  };\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as runtime from \"../runtime\";\nimport type {\n  HeightRequest,\n  HeightResponse,\n  TzResponse,\n} from \"../models/index\";\nimport {\n  HeightRequestFromJSON,\n  HeightRequestToJSON,\n  HeightResponseFromJSON,\n  HeightResponseToJSON,\n  TzResponseFromJSON,\n  TzResponseToJSON,\n} from \"../models/index\";\n\nexport interface ElevationRequest {\n  heightRequest?: HeightRequest;\n}\n\nexport interface TzLookupRequest {\n  lat: number;\n  lng: number;\n  timestamp?: number;\n}\n\n/**\n *\n */\nexport class GeospatialApi extends runtime.BaseAPI {\n  /**\n   * The Stadia elevation API allows you to get the elevation of any point on earth. You can pass either a simple set of points or a Google encoded polyline string. This pairs well with our routing APIs, so you can generate an elevation profile for your next bike or run.\n   * Get the elevation profile along a polyline or at a point.\n   */\n  async elevationRaw(\n    requestParameters: ElevationRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<HeightResponse>> {\n    const queryParameters: any = {};\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    headerParameters[\"Content-Type\"] = \"application/json\";\n\n    if (this.configuration && this.configuration.apiKey) {\n      queryParameters[\"api_key\"] = await this.configuration.apiKey(\"api_key\"); // ApiKeyAuth authentication\n    }\n\n    const response = await this.request(\n      {\n        path: `/elevation/v1`,\n        method: \"POST\",\n        headers: headerParameters,\n        query: queryParameters,\n        body: HeightRequestToJSON(requestParameters[\"heightRequest\"]),\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      HeightResponseFromJSON(jsonValue),\n    );\n  }\n\n  /**\n   * The Stadia elevation API allows you to get the elevation of any point on earth. You can pass either a simple set of points or a Google encoded polyline string. This pairs well with our routing APIs, so you can generate an elevation profile for your next bike or run.\n   * Get the elevation profile along a polyline or at a point.\n   */\n  async elevation(\n    requestParameters: ElevationRequest = {},\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<HeightResponse> {\n    const response = await this.elevationRaw(requestParameters, initOverrides);\n    return await response.value();\n  }\n\n  /**\n   * Retrieve the time zone identifier, standard UTC offset, special offset (such as DST), and the localized time in several common formats.\n   * Get time zone information for any point on earth.\n   */\n  async tzLookupRaw(\n    requestParameters: TzLookupRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<TzResponse>> {\n    if (requestParameters[\"lat\"] == null) {\n      throw new runtime.RequiredError(\n        \"lat\",\n        'Required parameter \"lat\" was null or undefined when calling tzLookup().',\n      );\n    }\n\n    if (requestParameters[\"lng\"] == null) {\n      throw new runtime.RequiredError(\n        \"lng\",\n        'Required parameter \"lng\" was null or undefined when calling tzLookup().',\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters[\"lat\"] != null) {\n      queryParameters[\"lat\"] = requestParameters[\"lat\"];\n    }\n\n    if (requestParameters[\"lng\"] != null) {\n      queryParameters[\"lng\"] = requestParameters[\"lng\"];\n    }\n\n    if (requestParameters[\"timestamp\"] != null) {\n      queryParameters[\"timestamp\"] = requestParameters[\"timestamp\"];\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    if (this.configuration && this.configuration.apiKey) {\n      queryParameters[\"api_key\"] = await this.configuration.apiKey(\"api_key\"); // ApiKeyAuth authentication\n    }\n\n    const response = await this.request(\n      {\n        path: `/tz/lookup/v1`,\n        method: \"GET\",\n        headers: headerParameters,\n        query: queryParameters,\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      TzResponseFromJSON(jsonValue),\n    );\n  }\n\n  /**\n   * Retrieve the time zone identifier, standard UTC offset, special offset (such as DST), and the localized time in several common formats.\n   * Get time zone information for any point on earth.\n   */\n  async tzLookup(\n    requestParameters: TzLookupRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<TzResponse> {\n    const response = await this.tzLookupRaw(requestParameters, initOverrides);\n    return await response.value();\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as runtime from \"../runtime\";\nimport type {\n  IsochroneRequest,\n  IsochroneResponse,\n  LocateObject,\n  MapMatchRequest,\n  MapMatchRouteResponse,\n  MatrixRequest,\n  MatrixResponse,\n  NearestRoadsRequest,\n  OptimizedRouteRequest,\n  Route200Response,\n  RouteRequest,\n  TraceAttributesRequest,\n  TraceAttributesResponse,\n} from \"../models/index\";\nimport {\n  IsochroneRequestFromJSON,\n  IsochroneRequestToJSON,\n  IsochroneResponseFromJSON,\n  IsochroneResponseToJSON,\n  LocateObjectFromJSON,\n  LocateObjectToJSON,\n  MapMatchRequestFromJSON,\n  MapMatchRequestToJSON,\n  MapMatchRouteResponseFromJSON,\n  MapMatchRouteResponseToJSON,\n  MatrixRequestFromJSON,\n  MatrixRequestToJSON,\n  MatrixResponseFromJSON,\n  MatrixResponseToJSON,\n  NearestRoadsRequestFromJSON,\n  NearestRoadsRequestToJSON,\n  OptimizedRouteRequestFromJSON,\n  OptimizedRouteRequestToJSON,\n  Route200ResponseFromJSON,\n  Route200ResponseToJSON,\n  RouteRequestFromJSON,\n  RouteRequestToJSON,\n  TraceAttributesRequestFromJSON,\n  TraceAttributesRequestToJSON,\n  TraceAttributesResponseFromJSON,\n  TraceAttributesResponseToJSON,\n} from \"../models/index\";\n\nexport interface IsochroneOperationRequest {\n  isochroneRequest?: IsochroneRequest;\n}\n\nexport interface MapMatchOperationRequest {\n  mapMatchRequest?: MapMatchRequest;\n}\n\nexport interface NearestRoadsOperationRequest {\n  nearestRoadsRequest?: NearestRoadsRequest;\n}\n\nexport interface OptimizedRouteOperationRequest {\n  optimizedRouteRequest?: OptimizedRouteRequest;\n}\n\nexport interface RouteOperationRequest {\n  routeRequest?: RouteRequest;\n}\n\nexport interface TimeDistanceMatrixRequest {\n  matrixRequest?: MatrixRequest;\n}\n\nexport interface TraceAttributesOperationRequest {\n  traceAttributesRequest?: TraceAttributesRequest;\n}\n\n/**\n *\n */\nexport class RoutingApi extends runtime.BaseAPI {\n  /**\n   * The isochrone API computes reachable areas within a time or distance constraint. The resulting polygon can be rendered on a map and used for assessing urban mobility, planning, or as a search filter of places within a constrained range.\n   * Calculate areas of equal travel time from a location.\n   */\n  async isochroneRaw(\n    requestParameters: IsochroneOperationRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<IsochroneResponse>> {\n    const queryParameters: any = {};\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    headerParameters[\"Content-Type\"] = \"application/json\";\n\n    if (this.configuration && this.configuration.apiKey) {\n      queryParameters[\"api_key\"] = await this.configuration.apiKey(\"api_key\"); // ApiKeyAuth authentication\n    }\n\n    const response = await this.request(\n      {\n        path: `/isochrone/v1`,\n        method: \"POST\",\n        headers: headerParameters,\n        query: queryParameters,\n        body: IsochroneRequestToJSON(requestParameters[\"isochroneRequest\"]),\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      IsochroneResponseFromJSON(jsonValue),\n    );\n  }\n\n  /**\n   * The isochrone API computes reachable areas within a time or distance constraint. The resulting polygon can be rendered on a map and used for assessing urban mobility, planning, or as a search filter of places within a constrained range.\n   * Calculate areas of equal travel time from a location.\n   */\n  async isochrone(\n    requestParameters: IsochroneOperationRequest = {},\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<IsochroneResponse> {\n    const response = await this.isochroneRaw(requestParameters, initOverrides);\n    return await response.value();\n  }\n\n  /**\n   * The map matching API transforms a recorded route into navigation instructions like you would get from the `route` endpoint. The input can be in the form of either an encoded polyline, or (optionally) timestamped coordinates.\n   * Match a recorded route to the road network.\n   */\n  async mapMatchRaw(\n    requestParameters: MapMatchOperationRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<MapMatchRouteResponse>> {\n    const queryParameters: any = {};\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    headerParameters[\"Content-Type\"] = \"application/json\";\n\n    if (this.configuration && this.configuration.apiKey) {\n      queryParameters[\"api_key\"] = await this.configuration.apiKey(\"api_key\"); // ApiKeyAuth authentication\n    }\n\n    const response = await this.request(\n      {\n        path: `/map_match/v1`,\n        method: \"POST\",\n        headers: headerParameters,\n        query: queryParameters,\n        body: MapMatchRequestToJSON(requestParameters[\"mapMatchRequest\"]),\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      MapMatchRouteResponseFromJSON(jsonValue),\n    );\n  }\n\n  /**\n   * The map matching API transforms a recorded route into navigation instructions like you would get from the `route` endpoint. The input can be in the form of either an encoded polyline, or (optionally) timestamped coordinates.\n   * Match a recorded route to the road network.\n   */\n  async mapMatch(\n    requestParameters: MapMatchOperationRequest = {},\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<MapMatchRouteResponse> {\n    const response = await this.mapMatchRaw(requestParameters, initOverrides);\n    return await response.value();\n  }\n\n  /**\n   * The nearest roads API allows you query for detailed information about streets and intersections near the input locations.\n   * Find the nearest roads to the set of input locations.\n   */\n  async nearestRoadsRaw(\n    requestParameters: NearestRoadsOperationRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<Array<LocateObject>>> {\n    const queryParameters: any = {};\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    headerParameters[\"Content-Type\"] = \"application/json\";\n\n    if (this.configuration && this.configuration.apiKey) {\n      queryParameters[\"api_key\"] = await this.configuration.apiKey(\"api_key\"); // ApiKeyAuth authentication\n    }\n\n    const response = await this.request(\n      {\n        path: `/nearest_roads/v1`,\n        method: \"POST\",\n        headers: headerParameters,\n        query: queryParameters,\n        body: NearestRoadsRequestToJSON(\n          requestParameters[\"nearestRoadsRequest\"],\n        ),\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      jsonValue.map(LocateObjectFromJSON),\n    );\n  }\n\n  /**\n   * The nearest roads API allows you query for detailed information about streets and intersections near the input locations.\n   * Find the nearest roads to the set of input locations.\n   */\n  async nearestRoads(\n    requestParameters: NearestRoadsOperationRequest = {},\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<Array<LocateObject>> {\n    const response = await this.nearestRoadsRaw(\n      requestParameters,\n      initOverrides,\n    );\n    return await response.value();\n  }\n\n  /**\n   * The optimized route API is a mix of the matrix and normal route API. For an optimized route, the start and end point are fixed, but the intermediate points will be re-ordered to form an optimal route visiting all nodes once.\n   * Calculate an optimized route between a known start and end point.\n   */\n  async optimizedRouteRaw(\n    requestParameters: OptimizedRouteOperationRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<Route200Response>> {\n    const queryParameters: any = {};\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    headerParameters[\"Content-Type\"] = \"application/json\";\n\n    if (this.configuration && this.configuration.apiKey) {\n      queryParameters[\"api_key\"] = await this.configuration.apiKey(\"api_key\"); // ApiKeyAuth authentication\n    }\n\n    const response = await this.request(\n      {\n        path: `/optimized_route/v1`,\n        method: \"POST\",\n        headers: headerParameters,\n        query: queryParameters,\n        body: OptimizedRouteRequestToJSON(\n          requestParameters[\"optimizedRouteRequest\"],\n        ),\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      Route200ResponseFromJSON(jsonValue),\n    );\n  }\n\n  /**\n   * The optimized route API is a mix of the matrix and normal route API. For an optimized route, the start and end point are fixed, but the intermediate points will be re-ordered to form an optimal route visiting all nodes once.\n   * Calculate an optimized route between a known start and end point.\n   */\n  async optimizedRoute(\n    requestParameters: OptimizedRouteOperationRequest = {},\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<Route200Response> {\n    const response = await this.optimizedRouteRaw(\n      requestParameters,\n      initOverrides,\n    );\n    return await response.value();\n  }\n\n  /**\n   * The route (turn-by-turn) API computes routes between two or more locations. It supports a variety of tunable costing methods, and supports routing through intermediate waypoints and discontinuous multi-leg routes.\n   * Get turn by turn routing instructions between two or more locations.\n   */\n  async routeRaw(\n    requestParameters: RouteOperationRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<Route200Response>> {\n    const queryParameters: any = {};\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    headerParameters[\"Content-Type\"] = \"application/json\";\n\n    if (this.configuration && this.configuration.apiKey) {\n      queryParameters[\"api_key\"] = await this.configuration.apiKey(\"api_key\"); // ApiKeyAuth authentication\n    }\n\n    const response = await this.request(\n      {\n        path: `/route/v1`,\n        method: \"POST\",\n        headers: headerParameters,\n        query: queryParameters,\n        body: RouteRequestToJSON(requestParameters[\"routeRequest\"]),\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      Route200ResponseFromJSON(jsonValue),\n    );\n  }\n\n  /**\n   * The route (turn-by-turn) API computes routes between two or more locations. It supports a variety of tunable costing methods, and supports routing through intermediate waypoints and discontinuous multi-leg routes.\n   * Get turn by turn routing instructions between two or more locations.\n   */\n  async route(\n    requestParameters: RouteOperationRequest = {},\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<Route200Response> {\n    const response = await this.routeRaw(requestParameters, initOverrides);\n    return await response.value();\n  }\n\n  /**\n   * The time distance matrix API lets you compare travel times between a set of possible start and end points. See https://docs.stadiamaps.com/limits/ for documentation of our latest limits.\n   * Calculate a time distance matrix for use in an optimizer.\n   */\n  async timeDistanceMatrixRaw(\n    requestParameters: TimeDistanceMatrixRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<MatrixResponse>> {\n    const queryParameters: any = {};\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    headerParameters[\"Content-Type\"] = \"application/json\";\n\n    if (this.configuration && this.configuration.apiKey) {\n      queryParameters[\"api_key\"] = await this.configuration.apiKey(\"api_key\"); // ApiKeyAuth authentication\n    }\n\n    const response = await this.request(\n      {\n        path: `/matrix/v1`,\n        method: \"POST\",\n        headers: headerParameters,\n        query: queryParameters,\n        body: MatrixRequestToJSON(requestParameters[\"matrixRequest\"]),\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      MatrixResponseFromJSON(jsonValue),\n    );\n  }\n\n  /**\n   * The time distance matrix API lets you compare travel times between a set of possible start and end points. See https://docs.stadiamaps.com/limits/ for documentation of our latest limits.\n   * Calculate a time distance matrix for use in an optimizer.\n   */\n  async timeDistanceMatrix(\n    requestParameters: TimeDistanceMatrixRequest = {},\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<MatrixResponse> {\n    const response = await this.timeDistanceMatrixRaw(\n      requestParameters,\n      initOverrides,\n    );\n    return await response.value();\n  }\n\n  /**\n   * The trace attributes endpoint retrieves detailed information along a route, returning details for each section along the path, as well as any intersections encountered. In addition to tracing a recording route, this is great for providing just-in-time info to navigation applications, enabling them to conserve resources by omitting info like speed limits upfront that may be irrelevant if the user goes off-route.\n   * Trace the attributes of roads visited on a route.\n   */\n  async traceAttributesRaw(\n    requestParameters: TraceAttributesOperationRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<TraceAttributesResponse>> {\n    const queryParameters: any = {};\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    headerParameters[\"Content-Type\"] = \"application/json\";\n\n    if (this.configuration && this.configuration.apiKey) {\n      queryParameters[\"api_key\"] = await this.configuration.apiKey(\"api_key\"); // ApiKeyAuth authentication\n    }\n\n    const response = await this.request(\n      {\n        path: `/trace_attributes/v1`,\n        method: \"POST\",\n        headers: headerParameters,\n        query: queryParameters,\n        body: TraceAttributesRequestToJSON(\n          requestParameters[\"traceAttributesRequest\"],\n        ),\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      TraceAttributesResponseFromJSON(jsonValue),\n    );\n  }\n\n  /**\n   * The trace attributes endpoint retrieves detailed information along a route, returning details for each section along the path, as well as any intersections encountered. In addition to tracing a recording route, this is great for providing just-in-time info to navigation applications, enabling them to conserve resources by omitting info like speed limits upfront that may be irrelevant if the user goes off-route.\n   * Trace the attributes of roads visited on a route.\n   */\n  async traceAttributes(\n    requestParameters: TraceAttributesOperationRequest = {},\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<TraceAttributesResponse> {\n    const response = await this.traceAttributesRaw(\n      requestParameters,\n      initOverrides,\n    );\n    return await response.value();\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Stadia Maps Geospatial APIs\n * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.\n *\n * The version of the OpenAPI document: 10.0.1\n * Contact: support@stadiamaps.com\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as runtime from \"../runtime\";\nimport type {\n  BulkRequest,\n  BulkSearchResponse,\n  GeocodeResponse,\n  GeocodeResponseEnvelopePropertiesV2,\n  GeocodingLayer,\n  GeocodingSource,\n  LayerId,\n  SourceId,\n} from \"../models/index\";\nimport {\n  BulkRequestFromJSON,\n  BulkRequestToJSON,\n  BulkSearchResponseFromJSON,\n  BulkSearchResponseToJSON,\n  GeocodeResponseFromJSON,\n  GeocodeResponseToJSON,\n  GeocodeResponseEnvelopePropertiesV2FromJSON,\n  GeocodeResponseEnvelopePropertiesV2ToJSON,\n  GeocodingLayerFromJSON,\n  GeocodingLayerToJSON,\n  GeocodingSourceFromJSON,\n  GeocodingSourceToJSON,\n  LayerIdFromJSON,\n  LayerIdToJSON,\n  SourceIdFromJSON,\n  SourceIdToJSON,\n} from \"../models/index\";\n\nexport interface AutocompleteRequest {\n  text: string;\n  focusPointLat?: number;\n  focusPointLon?: number;\n  boundaryRectMinLat?: number;\n  boundaryRectMaxLat?: number;\n  boundaryRectMinLon?: number;\n  boundaryRectMaxLon?: number;\n  boundaryCircleLat?: number;\n  boundaryCircleLon?: number;\n  boundaryCircleRadius?: number;\n  boundaryCountry?: Array<string>;\n  boundaryGid?: string;\n  layers?: Array<GeocodingLayer>;\n  sources?: Array<GeocodingSource>;\n  size?: number;\n  lang?: string;\n}\n\nexport interface AutocompleteV2Request {\n  text: string;\n  focusPointLat?: number;\n  focusPointLon?: number;\n  layers?: Array<LayerId>;\n  sources?: Array<SourceId>;\n  boundaryGid?: string;\n  boundaryCountry?: Array<string>;\n  boundaryRectMinLat?: number;\n  boundaryRectMinLon?: number;\n  boundaryRectMaxLat?: number;\n  boundaryRectMaxLon?: number;\n  boundaryCircleLat?: number;\n  boundaryCircleLon?: number;\n  boundaryCircleRadius?: number;\n  size?: number;\n  lang?: string;\n}\n\nexport interface PlaceDetailsRequest {\n  ids: Array<string>;\n  lang?: string;\n}\n\nexport interface PlaceDetailsV2Request {\n  ids: Array<string>;\n  lang?: string;\n}\n\nexport interface ReverseRequest {\n  pointLat: number;\n  pointLon: number;\n  boundaryCircleRadius?: number;\n  layers?: Array<GeocodingLayer>;\n  sources?: Array<GeocodingSource>;\n  boundaryCountry?: Array<string>;\n  boundaryGid?: string;\n  size?: number;\n  lang?: string;\n}\n\nexport interface ReverseV2Request {\n  pointLat: number;\n  pointLon: number;\n  layers?: Array<LayerId>;\n  sources?: Array<SourceId>;\n  boundaryGid?: string;\n  boundaryCountry?: Array<string>;\n  boundaryCircleRadius?: number;\n  size?: number;\n  lang?: string;\n}\n\nexport interface SearchRequest {\n  text: string;\n  focusPointLat?: number;\n  focusPointLon?: number;\n  boundaryRectMinLat?: number;\n  boundaryRectMaxLat?: number;\n  boundaryRectMinLon?: number;\n  boundaryRectMaxLon?: number;\n  boundaryCircleLat?: number;\n  boundaryCircleLon?: number;\n  boundaryCircleRadius?: number;\n  boundaryCountry?: Array<string>;\n  boundaryGid?: string;\n  layers?: Array<GeocodingLayer>;\n  sources?: Array<GeocodingSource>;\n  size?: number;\n  lang?: string;\n}\n\nexport interface SearchBulkRequest {\n  bulkRequest?: Array<BulkRequest>;\n}\n\nexport interface SearchStructuredRequest {\n  address?: string;\n  neighbourhood?: string;\n  borough?: string;\n  locality?: string;\n  county?: string;\n  region?: string;\n  postalcode?: string;\n  country?: string;\n  focusPointLat?: number;\n  focusPointLon?: number;\n  boundaryRectMinLat?: number;\n  boundaryRectMaxLat?: number;\n  boundaryRectMinLon?: number;\n  boundaryRectMaxLon?: number;\n  boundaryCircleLat?: number;\n  boundaryCircleLon?: number;\n  boundaryCircleRadius?: number;\n  boundaryCountry?: Array<string>;\n  boundaryGid?: string;\n  layers?: Array<GeocodingLayer>;\n  sources?: Array<GeocodingSource>;\n  size?: number;\n  lang?: string;\n}\n\nexport interface SearchV2Request {\n  text: string;\n  focusPointLat?: number;\n  focusPointLon?: number;\n  layers?: Array<LayerId>;\n  sources?: Array<SourceId>;\n  boundaryGid?: string;\n  boundaryCountry?: Array<string>;\n  boundaryRectMinLat?: number;\n  boundaryRectMinLon?: number;\n  boundaryRectMaxLat?: number;\n  boundaryRectMaxLon?: number;\n  boundaryCircleLat?: number;\n  boundaryCircleLon?: number;\n  boundaryCircleRadius?: number;\n  size?: number;\n  lang?: string;\n}\n\n/**\n *\n */\nexport class GeocodingApi extends runtime.BaseAPI {\n  /**\n   * Autocomplete enables interactive search-as-you-type user experiences, suggesting places as you type, along with information that will help your users find the correct place quickly.\n   * Search and geocode quickly based on partial input.\n   */\n  async autocompleteRaw(\n    requestParameters: AutocompleteRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<GeocodeResponse>> {\n    if (requestParameters[\"text\"] == null) {\n      throw new runtime.RequiredError(\n        \"text\",\n        'Required parameter \"text\" was null or undefined when calling autocomplete().',\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters[\"text\"] != null) {\n      queryParameters[\"text\"] = requestParameters[\"text\"];\n    }\n\n    if (requestParameters[\"focusPointLat\"] != null) {\n      queryParameters[\"focus.point.lat\"] = requestParameters[\"focusPointLat\"];\n    }\n\n    if (requestParameters[\"focusPointLon\"] != null) {\n      queryParameters[\"focus.point.lon\"] = requestParameters[\"focusPointLon\"];\n    }\n\n    if (requestParameters[\"boundaryRectMinLat\"] != null) {\n      queryParameters[\"boundary.rect.min_lat\"] =\n        requestParameters[\"boundaryRectMinLat\"];\n    }\n\n    if (requestParameters[\"boundaryRectMaxLat\"] != null) {\n      queryParameters[\"boundary.rect.max_lat\"] =\n        requestParameters[\"boundaryRectMaxLat\"];\n    }\n\n    if (requestParameters[\"boundaryRectMinLon\"] != null) {\n      queryParameters[\"boundary.rect.min_lon\"] =\n        requestParameters[\"boundaryRectMinLon\"];\n    }\n\n    if (requestParameters[\"boundaryRectMaxLon\"] != null) {\n      queryParameters[\"boundary.rect.max_lon\"] =\n        requestParameters[\"boundaryRectMaxLon\"];\n    }\n\n    if (requestParameters[\"boundaryCircleLat\"] != null) {\n      queryParameters[\"boundary.circle.lat\"] =\n        requestParameters[\"boundaryCircleLat\"];\n    }\n\n    if (requestParameters[\"boundaryCircleLon\"] != null) {\n      queryParameters[\"boundary.circle.lon\"] =\n        requestParameters[\"boundaryCircleLon\"];\n    }\n\n    if (requestParameters[\"boundaryCircleRadius\"] != null) {\n      queryParameters[\"boundary.circle.radius\"] =\n        requestParameters[\"boundaryCircleRadius\"];\n    }\n\n    if (requestParameters[\"boundaryCountry\"] != null) {\n      queryParameters[\"boundary.country\"] = requestParameters[\n        \"boundaryCountry\"\n      ]!.join(runtime.COLLECTION_FORMATS[\"csv\"]);\n    }\n\n    if (requestParameters[\"boundaryGid\"] != null) {\n      queryParameters[\"boundary.gid\"] = requestParameters[\"boundaryGid\"];\n    }\n\n    if (requestParameters[\"layers\"] != null) {\n      queryParameters[\"layers\"] = requestParameters[\"layers\"]!.join(\n        runtime.COLLECTION_FORMATS[\"csv\"],\n      );\n    }\n\n    if (requestParameters[\"sources\"] != null) {\n      queryParameters[\"sources\"] = requestParameters[\"sources\"]!.join(\n        runtime.COLLECTION_FORMATS[\"csv\"],\n      );\n    }\n\n    if (requestParameters[\"size\"] != null) {\n      queryParameters[\"size\"] = requestParameters[\"size\"];\n    }\n\n    if (requestParameters[\"lang\"] != null) {\n      queryParameters[\"lang\"] = requestParameters[\"lang\"];\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    if (this.configuration && this.configuration.apiKey) {\n      queryParameters[\"api_key\"] = await this.configuration.apiKey(\"api_key\"); // ApiKeyAuth authentication\n    }\n\n    const response = await this.request(\n      {\n        path: `/geocoding/v1/autocomplete`,\n        method: \"GET\",\n        headers: headerParameters,\n        query: queryParameters,\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      GeocodeResponseFromJSON(jsonValue),\n    );\n  }\n\n  /**\n   * Autocomplete enables interactive search-as-you-type user experiences, suggesting places as you type, along with information that will help your users find the correct place quickly.\n   * Search and geocode quickly based on partial input.\n   */\n  async autocomplete(\n    requestParameters: AutocompleteRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<GeocodeResponse> {\n    const response = await this.autocompleteRaw(\n      requestParameters,\n      initOverrides,\n    );\n    return await response.value();\n  }\n\n  /**\n   */\n  async autocompleteV2Raw(\n    requestParameters: AutocompleteV2Request,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<GeocodeResponseEnvelopePropertiesV2>> {\n    if (requestParameters[\"text\"] == null) {\n      throw new runtime.RequiredError(\n        \"text\",\n        'Required parameter \"text\" was null or undefined when calling autocompleteV2().',\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters[\"text\"] != null) {\n      queryParameters[\"text\"] = requestParameters[\"text\"];\n    }\n\n    if (requestParameters[\"focusPointLat\"] != null) {\n      queryParameters[\"focus.point.lat\"] = requestParameters[\"focusPointLat\"];\n    }\n\n    if (requestParameters[\"focusPointLon\"] != null) {\n      queryParameters[\"focus.point.lon\"] = requestParameters[\"focusPointLon\"];\n    }\n\n    if (requestParameters[\"layers\"] != null) {\n      queryParameters[\"layers\"] = requestParameters[\"layers\"]!.join(\n        runtime.COLLECTION_FORMATS[\"csv\"],\n      );\n    }\n\n    if (requestParameters[\"sources\"] != null) {\n      queryParameters[\"sources\"] = requestParameters[\"sources\"]!.join(\n        runtime.COLLECTION_FORMATS[\"csv\"],\n      );\n    }\n\n    if (requestParameters[\"boundaryGid\"] != null) {\n      queryParameters[\"boundary.gid\"] = requestParameters[\"boundaryGid\"];\n    }\n\n    if (requestParameters[\"boundaryCountry\"] != null) {\n      queryParameters[\"boundary.country\"] = requestParameters[\n        \"boundaryCountry\"\n      ]!.join(runtime.COLLECTION_FORMATS[\"csv\"]);\n    }\n\n    if (requestParameters[\"boundaryRectMinLat\"] != null) {\n      queryParameters[\"boundary.rect.min_lat\"] =\n        requestParameters[\"boundaryRectMinLat\"];\n    }\n\n    if (requestParameters[\"boundaryRectMinLon\"] != null) {\n      queryParameters[\"boundary.rect.min_lon\"] =\n        requestParameters[\"boundaryRectMinLon\"];\n    }\n\n    if (requestParameters[\"boundaryRectMaxLat\"] != null) {\n      queryParameters[\"boundary.rect.max_lat\"] =\n        requestParameters[\"boundaryRectMaxLat\"];\n    }\n\n    if (requestParameters[\"boundaryRectMaxLon\"] != null) {\n      queryParameters[\"boundary.rect.max_lon\"] =\n        requestParameters[\"boundaryRectMaxLon\"];\n    }\n\n    if (requestParameters[\"boundaryCircleLat\"] != null) {\n      queryParameters[\"boundary.circle.lat\"] =\n        requestParameters[\"boundaryCircleLat\"];\n    }\n\n    if (requestParameters[\"boundaryCircleLon\"] != null) {\n      queryParameters[\"boundary.circle.lon\"] =\n        requestParameters[\"boundaryCircleLon\"];\n    }\n\n    if (requestParameters[\"boundaryCircleRadius\"] != null) {\n      queryParameters[\"boundary.circle.radius\"] =\n        requestParameters[\"boundaryCircleRadius\"];\n    }\n\n    if (requestParameters[\"size\"] != null) {\n      queryParameters[\"size\"] = requestParameters[\"size\"];\n    }\n\n    if (requestParameters[\"lang\"] != null) {\n      queryParameters[\"lang\"] = requestParameters[\"lang\"];\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    if (this.configuration && this.configuration.apiKey) {\n      queryParameters[\"api_key\"] = await this.configuration.apiKey(\"api_key\"); // ApiKeyAuth authentication\n    }\n\n    const response = await this.request(\n      {\n        path: `/geocoding/v2/autocomplete`,\n        method: \"GET\",\n        headers: headerParameters,\n        query: queryParameters,\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      GeocodeResponseEnvelopePropertiesV2FromJSON(jsonValue),\n    );\n  }\n\n  /**\n   */\n  async autocompleteV2(\n    requestParameters: AutocompleteV2Request,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<GeocodeResponseEnvelopePropertiesV2> {\n    const response = await this.autocompleteV2Raw(\n      requestParameters,\n      initOverrides,\n    );\n    return await response.value();\n  }\n\n  /**\n   * Many search result components include an associated GID field (for example, an address may have a `localadmin_gid`). The place endpoint lets you look up these places directly by ID. Note that GIDs are not stable for all sources. See the [online documentation](https://docs.stadiamaps.com/geocoding-search-autocomplete/place-lookup/) for details.\n   * Retrieve details of a place using its GID.\n   */\n  async placeDetailsRaw(\n    requestParameters: PlaceDetailsRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<GeocodeResponse>> {\n    if (requestParameters[\"ids\"] == null) {\n      throw new runtime.RequiredError(\n        \"ids\",\n        'Required parameter \"ids\" was null or undefined when calling placeDetails().',\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters[\"ids\"] != null) {\n      queryParameters[\"ids\"] = requestParameters[\"ids\"]!.join(\n        runtime.COLLECTION_FORMATS[\"csv\"],\n      );\n    }\n\n    if (requestParameters[\"lang\"] != null) {\n      queryParameters[\"lang\"] = requestParameters[\"lang\"];\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    if (this.configuration && this.configuration.apiKey) {\n      queryParameters[\"api_key\"] = await this.configuration.apiKey(\"api_key\"); // ApiKeyAuth authentication\n    }\n\n    const response = await this.request(\n      {\n        path: `/geocoding/v1/place`,\n        method: \"GET\",\n        headers: headerParameters,\n        query: queryParameters,\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      GeocodeResponseFromJSON(jsonValue),\n    );\n  }\n\n  /**\n   * Many search result components include an associated GID field (for example, an address may have a `localadmin_gid`). The place endpoint lets you look up these places directly by ID. Note that GIDs are not stable for all sources. See the [online documentation](https://docs.stadiamaps.com/geocoding-search-autocomplete/place-lookup/) for details.\n   * Retrieve details of a place using its GID.\n   */\n  async placeDetails(\n    requestParameters: PlaceDetailsRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<GeocodeResponse> {\n    const response = await this.placeDetailsRaw(\n      requestParameters,\n      initOverrides,\n    );\n    return await response.value();\n  }\n\n  /**\n   */\n  async placeDetailsV2Raw(\n    requestParameters: PlaceDetailsV2Request,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<GeocodeResponseEnvelopePropertiesV2>> {\n    if (requestParameters[\"ids\"] == null) {\n      throw new runtime.RequiredError(\n        \"ids\",\n        'Required parameter \"ids\" was null or undefined when calling placeDetailsV2().',\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters[\"ids\"] != null) {\n      queryParameters[\"ids\"] = requestParameters[\"ids\"]!.join(\n        runtime.COLLECTION_FORMATS[\"csv\"],\n      );\n    }\n\n    if (requestParameters[\"lang\"] != null) {\n      queryParameters[\"lang\"] = requestParameters[\"lang\"];\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    if (this.configuration && this.configuration.apiKey) {\n      queryParameters[\"api_key\"] = await this.configuration.apiKey(\"api_key\"); // ApiKeyAuth authentication\n    }\n\n    const response = await this.request(\n      {\n        path: `/geocoding/v2/place_details`,\n        method: \"GET\",\n        headers: headerParameters,\n        query: queryParameters,\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      GeocodeResponseEnvelopePropertiesV2FromJSON(jsonValue),\n    );\n  }\n\n  /**\n   */\n  async placeDetailsV2(\n    requestParameters: PlaceDetailsV2Request,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<GeocodeResponseEnvelopePropertiesV2> {\n    const response = await this.placeDetailsV2Raw(\n      requestParameters,\n      initOverrides,\n    );\n    return await response.value();\n  }\n\n  /**\n   * Reverse geocoding and search finds places and addresses near any geographic coordinates.\n   * Find places and addresses near geographic coordinates (reverse geocoding).\n   */\n  async reverseRaw(\n    requestParameters: ReverseRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<GeocodeResponse>> {\n    if (requestParameters[\"pointLat\"] == null) {\n      throw new runtime.RequiredError(\n        \"pointLat\",\n        'Required parameter \"pointLat\" was null or undefined when calling reverse().',\n      );\n    }\n\n    if (requestParameters[\"pointLon\"] == null) {\n      throw new runtime.RequiredError(\n        \"pointLon\",\n        'Required parameter \"pointLon\" was null or undefined when calling reverse().',\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters[\"pointLat\"] != null) {\n      queryParameters[\"point.lat\"] = requestParameters[\"pointLat\"];\n    }\n\n    if (requestParameters[\"pointLon\"] != null) {\n      queryParameters[\"point.lon\"] = requestParameters[\"pointLon\"];\n    }\n\n    if (requestParameters[\"boundaryCircleRadius\"] != null) {\n      queryParameters[\"boundary.circle.radius\"] =\n        requestParameters[\"boundaryCircleRadius\"];\n    }\n\n    if (requestParameters[\"layers\"] != null) {\n      queryParameters[\"layers\"] = requestParameters[\"layers\"]!.join(\n        runtime.COLLECTION_FORMATS[\"csv\"],\n      );\n    }\n\n    if (requestParameters[\"sources\"] != null) {\n      queryParameters[\"sources\"] = requestParameters[\"sources\"]!.join(\n        runtime.COLLECTION_FORMATS[\"csv\"],\n      );\n    }\n\n    if (requestParameters[\"boundaryCountry\"] != null) {\n      queryParameters[\"boundary.country\"] = requestParameters[\n        \"boundaryCountry\"\n      ]!.join(runtime.COLLECTION_FORMATS[\"csv\"]);\n    }\n\n    if (requestParameters[\"boundaryGid\"] != null) {\n      queryParameters[\"boundary.gid\"] = requestParameters[\"boundaryGid\"];\n    }\n\n    if (requestParameters[\"size\"] != null) {\n      queryParameters[\"size\"] = requestParameters[\"size\"];\n    }\n\n    if (requestParameters[\"lang\"] != null) {\n      queryParameters[\"lang\"] = requestParameters[\"lang\"];\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    if (this.configuration && this.configuration.apiKey) {\n      queryParameters[\"api_key\"] = await this.configuration.apiKey(\"api_key\"); // ApiKeyAuth authentication\n    }\n\n    const response = await this.request(\n      {\n        path: `/geocoding/v1/reverse`,\n        method: \"GET\",\n        headers: headerParameters,\n        query: queryParameters,\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      GeocodeResponseFromJSON(jsonValue),\n    );\n  }\n\n  /**\n   * Reverse geocoding and search finds places and addresses near any geographic coordinates.\n   * Find places and addresses near geographic coordinates (reverse geocoding).\n   */\n  async reverse(\n    requestParameters: ReverseRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<GeocodeResponse> {\n    const response = await this.reverseRaw(requestParameters, initOverrides);\n    return await response.value();\n  }\n\n  /**\n   */\n  async reverseV2Raw(\n    requestParameters: ReverseV2Request,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<GeocodeResponseEnvelopePropertiesV2>> {\n    if (requestParameters[\"pointLat\"] == null) {\n      throw new runtime.RequiredError(\n        \"pointLat\",\n        'Required parameter \"pointLat\" was null or undefined when calling reverseV2().',\n      );\n    }\n\n    if (requestParameters[\"pointLon\"] == null) {\n      throw new runtime.RequiredError(\n        \"pointLon\",\n        'Required parameter \"pointLon\" was null or undefined when calling reverseV2().',\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters[\"pointLat\"] != null) {\n      queryParameters[\"point.lat\"] = requestParameters[\"pointLat\"];\n    }\n\n    if (requestParameters[\"pointLon\"] != null) {\n      queryParameters[\"point.lon\"] = requestParameters[\"pointLon\"];\n    }\n\n    if (requestParameters[\"layers\"] != null) {\n      queryParameters[\"layers\"] = requestParameters[\"layers\"]!.join(\n        runtime.COLLECTION_FORMATS[\"csv\"],\n      );\n    }\n\n    if (requestParameters[\"sources\"] != null) {\n      queryParameters[\"sources\"] = requestParameters[\"sources\"]!.join(\n        runtime.COLLECTION_FORMATS[\"csv\"],\n      );\n    }\n\n    if (requestParameters[\"boundaryGid\"] != null) {\n      queryParameters[\"boundary.gid\"] = requestParameters[\"boundaryGid\"];\n    }\n\n    if (requestParameters[\"boundaryCountry\"] != null) {\n      queryParameters[\"boundary.country\"] = requestParameters[\n        \"boundaryCountry\"\n      ]!.join(runtime.COLLECTION_FORMATS[\"csv\"]);\n    }\n\n    if (requestParameters[\"boundaryCircleRadius\"] != null) {\n      queryParameters[\"boundary.circle.radius\"] =\n        requestParameters[\"boundaryCircleRadius\"];\n    }\n\n    if (requestParameters[\"size\"] != null) {\n      queryParameters[\"size\"] = requestParameters[\"size\"];\n    }\n\n    if (requestParameters[\"lang\"] != null) {\n      queryParameters[\"lang\"] = requestParameters[\"lang\"];\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    if (this.configuration && this.configuration.apiKey) {\n      queryParameters[\"api_key\"] = await this.configuration.apiKey(\"api_key\"); // ApiKeyAuth authentication\n    }\n\n    const response = await this.request(\n      {\n        path: `/geocoding/v2/reverse`,\n        method: \"GET\",\n        headers: headerParameters,\n        query: queryParameters,\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      GeocodeResponseEnvelopePropertiesV2FromJSON(jsonValue),\n    );\n  }\n\n  /**\n   */\n  async reverseV2(\n    requestParameters: ReverseV2Request,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<GeocodeResponseEnvelopePropertiesV2> {\n    const response = await this.reverseV2Raw(requestParameters, initOverrides);\n    return await response.value();\n  }\n\n  /**\n   * The search endpoint lets you search for addresses, points of interest, and administrative areas. This is most commonly used for forward geocoding applications where you need to find the geographic coordinates of an address.\n   * Search for location and other info using a place name or address (forward geocoding).\n   */\n  async searchRaw(\n    requestParameters: SearchRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<GeocodeResponse>> {\n    if (requestParameters[\"text\"] == null) {\n      throw new runtime.RequiredError(\n        \"text\",\n        'Required parameter \"text\" was null or undefined when calling search().',\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters[\"text\"] != null) {\n      queryParameters[\"text\"] = requestParameters[\"text\"];\n    }\n\n    if (requestParameters[\"focusPointLat\"] != null) {\n      queryParameters[\"focus.point.lat\"] = requestParameters[\"focusPointLat\"];\n    }\n\n    if (requestParameters[\"focusPointLon\"] != null) {\n      queryParameters[\"focus.point.lon\"] = requestParameters[\"focusPointLon\"];\n    }\n\n    if (requestParameters[\"boundaryRectMinLat\"] != null) {\n      queryParameters[\"boundary.rect.min_lat\"] =\n        requestParameters[\"boundaryRectMinLat\"];\n    }\n\n    if (requestParameters[\"boundaryRectMaxLat\"] != null) {\n      queryParameters[\"boundary.rect.max_lat\"] =\n        requestParameters[\"boundaryRectMaxLat\"];\n    }\n\n    if (requestParameters[\"boundaryRectMinLon\"] != null) {\n      queryParameters[\"boundary.rect.min_lon\"] =\n        requestParameters[\"boundaryRectMinLon\"];\n    }\n\n    if (requestParameters[\"boundaryRectMaxLon\"] != null) {\n      queryParameters[\"boundary.rect.max_lon\"] =\n        requestParameters[\"boundaryRectMaxLon\"];\n    }\n\n    if (requestParameters[\"boundaryCircleLat\"] != null) {\n      queryParameters[\"boundary.circle.lat\"] =\n        requestParameters[\"boundaryCircleLat\"];\n    }\n\n    if (requestParameters[\"boundaryCircleLon\"] != null) {\n      queryParameters[\"boundary.circle.lon\"] =\n        requestParameters[\"boundaryCircleLon\"];\n    }\n\n    if (requestParameters[\"boundaryCircleRadius\"] != null) {\n      queryParameters[\"boundary.circle.radius\"] =\n        requestParameters[\"boundaryCircleRadius\"];\n    }\n\n    if (requestParameters[\"boundaryCountry\"] != null) {\n      queryParameters[\"boundary.country\"] = requestParameters[\n        \"boundaryCountry\"\n      ]!.join(runtime.COLLECTION_FORMATS[\"csv\"]);\n    }\n\n    if (requestParameters[\"boundaryGid\"] != null) {\n      queryParameters[\"boundary.gid\"] = requestParameters[\"boundaryGid\"];\n    }\n\n    if (requestParameters[\"layers\"] != null) {\n      queryParameters[\"layers\"] = requestParameters[\"layers\"]!.join(\n        runtime.COLLECTION_FORMATS[\"csv\"],\n      );\n    }\n\n    if (requestParameters[\"sources\"] != null) {\n      queryParameters[\"sources\"] = requestParameters[\"sources\"]!.join(\n        runtime.COLLECTION_FORMATS[\"csv\"],\n      );\n    }\n\n    if (requestParameters[\"size\"] != null) {\n      queryParameters[\"size\"] = requestParameters[\"size\"];\n    }\n\n    if (requestParameters[\"lang\"] != null) {\n      queryParameters[\"lang\"] = requestParameters[\"lang\"];\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    if (this.configuration && this.configuration.apiKey) {\n      queryParameters[\"api_key\"] = await this.configuration.apiKey(\"api_key\"); // ApiKeyAuth authentication\n    }\n\n    const response = await this.request(\n      {\n        path: `/geocoding/v1/search`,\n        method: \"GET\",\n        headers: headerParameters,\n        query: queryParameters,\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      GeocodeResponseFromJSON(jsonValue),\n    );\n  }\n\n  /**\n   * The search endpoint lets you search for addresses, points of interest, and administrative areas. This is most commonly used for forward geocoding applications where you need to find the geographic coordinates of an address.\n   * Search for location and other info using a place name or address (forward geocoding).\n   */\n  async search(\n    requestParameters: SearchRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<GeocodeResponse> {\n    const response = await this.searchRaw(requestParameters, initOverrides);\n    return await response.value();\n  }\n\n  /**\n   * The batch endpoint lets you specify many search or structured search requests at once. Once received, all requests will be processed internally on our infrastructure, improving throughput when you need to do a lot of queries.\n   * Quickly run a batch of geocoding queries against the search or structured search endpoints.\n   */\n  async searchBulkRaw(\n    requestParameters: SearchBulkRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<Array<BulkSearchResponse>>> {\n    const queryParameters: any = {};\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    headerParameters[\"Content-Type\"] = \"application/json\";\n\n    if (this.configuration && this.configuration.apiKey) {\n      queryParameters[\"api_key\"] = await this.configuration.apiKey(\"api_key\"); // ApiKeyAuth authentication\n    }\n\n    const response = await this.request(\n      {\n        path: `/geocoding/v1/search/bulk`,\n        method: \"POST\",\n        headers: headerParameters,\n        query: queryParameters,\n        body: requestParameters[\"bulkRequest\"]!.map(BulkRequestToJSON),\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      jsonValue.map(BulkSearchResponseFromJSON),\n    );\n  }\n\n  /**\n   * The batch endpoint lets you specify many search or structured search requests at once. Once received, all requests will be processed internally on our infrastructure, improving throughput when you need to do a lot of queries.\n   * Quickly run a batch of geocoding queries against the search or structured search endpoints.\n   */\n  async searchBulk(\n    requestParameters: SearchBulkRequest = {},\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<Array<BulkSearchResponse>> {\n    const response = await this.searchBulkRaw(requestParameters, initOverrides);\n    return await response.value();\n  }\n\n  /**\n   * The structured search endpoint lets you search for addresses, points of interest, and administrative areas. Rather than a single string which the API must infer meaning from, the structured search endpoint allows you to specify the known components upfront, which is useful in many forward geocoding workflows.\n   * Find locations matching components (structured forward geocoding).\n   */\n  async searchStructuredRaw(\n    requestParameters: SearchStructuredRequest,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<GeocodeResponse>> {\n    const queryParameters: any = {};\n\n    if (requestParameters[\"address\"] != null) {\n      queryParameters[\"address\"] = requestParameters[\"address\"];\n    }\n\n    if (requestParameters[\"neighbourhood\"] != null) {\n      queryParameters[\"neighbourhood\"] = requestParameters[\"neighbourhood\"];\n    }\n\n    if (requestParameters[\"borough\"] != null) {\n      queryParameters[\"borough\"] = requestParameters[\"borough\"];\n    }\n\n    if (requestParameters[\"locality\"] != null) {\n      queryParameters[\"locality\"] = requestParameters[\"locality\"];\n    }\n\n    if (requestParameters[\"county\"] != null) {\n      queryParameters[\"county\"] = requestParameters[\"county\"];\n    }\n\n    if (requestParameters[\"region\"] != null) {\n      queryParameters[\"region\"] = requestParameters[\"region\"];\n    }\n\n    if (requestParameters[\"postalcode\"] != null) {\n      queryParameters[\"postalcode\"] = requestParameters[\"postalcode\"];\n    }\n\n    if (requestParameters[\"country\"] != null) {\n      queryParameters[\"country\"] = requestParameters[\"country\"];\n    }\n\n    if (requestParameters[\"focusPointLat\"] != null) {\n      queryParameters[\"focus.point.lat\"] = requestParameters[\"focusPointLat\"];\n    }\n\n    if (requestParameters[\"focusPointLon\"] != null) {\n      queryParameters[\"focus.point.lon\"] = requestParameters[\"focusPointLon\"];\n    }\n\n    if (requestParameters[\"boundaryRectMinLat\"] != null) {\n      queryParameters[\"boundary.rect.min_lat\"] =\n        requestParameters[\"boundaryRectMinLat\"];\n    }\n\n    if (requestParameters[\"boundaryRectMaxLat\"] != null) {\n      queryParameters[\"boundary.rect.max_lat\"] =\n        requestParameters[\"boundaryRectMaxLat\"];\n    }\n\n    if (requestParameters[\"boundaryRectMinLon\"] != null) {\n      queryParameters[\"boundary.rect.min_lon\"] =\n        requestParameters[\"boundaryRectMinLon\"];\n    }\n\n    if (requestParameters[\"boundaryRectMaxLon\"] != null) {\n      queryParameters[\"boundary.rect.max_lon\"] =\n        requestParameters[\"boundaryRectMaxLon\"];\n    }\n\n    if (requestParameters[\"boundaryCircleLat\"] != null) {\n      queryParameters[\"boundary.circle.lat\"] =\n        requestParameters[\"boundaryCircleLat\"];\n    }\n\n    if (requestParameters[\"boundaryCircleLon\"] != null) {\n      queryParameters[\"boundary.circle.lon\"] =\n        requestParameters[\"boundaryCircleLon\"];\n    }\n\n    if (requestParameters[\"boundaryCircleRadius\"] != null) {\n      queryParameters[\"boundary.circle.radius\"] =\n        requestParameters[\"boundaryCircleRadius\"];\n    }\n\n    if (requestParameters[\"boundaryCountry\"] != null) {\n      queryParameters[\"boundary.country\"] = requestParameters[\n        \"boundaryCountry\"\n      ]!.join(runtime.COLLECTION_FORMATS[\"csv\"]);\n    }\n\n    if (requestParameters[\"boundaryGid\"] != null) {\n      queryParameters[\"boundary.gid\"] = requestParameters[\"boundaryGid\"];\n    }\n\n    if (requestParameters[\"layers\"] != null) {\n      queryParameters[\"layers\"] = requestParameters[\"layers\"]!.join(\n        runtime.COLLECTION_FORMATS[\"csv\"],\n      );\n    }\n\n    if (requestParameters[\"sources\"] != null) {\n      queryParameters[\"sources\"] = requestParameters[\"sources\"]!.join(\n        runtime.COLLECTION_FORMATS[\"csv\"],\n      );\n    }\n\n    if (requestParameters[\"size\"] != null) {\n      queryParameters[\"size\"] = requestParameters[\"size\"];\n    }\n\n    if (requestParameters[\"lang\"] != null) {\n      queryParameters[\"lang\"] = requestParameters[\"lang\"];\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    if (this.configuration && this.configuration.apiKey) {\n      queryParameters[\"api_key\"] = await this.configuration.apiKey(\"api_key\"); // ApiKeyAuth authentication\n    }\n\n    const response = await this.request(\n      {\n        path: `/geocoding/v1/search/structured`,\n        method: \"GET\",\n        headers: headerParameters,\n        query: queryParameters,\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      GeocodeResponseFromJSON(jsonValue),\n    );\n  }\n\n  /**\n   * The structured search endpoint lets you search for addresses, points of interest, and administrative areas. Rather than a single string which the API must infer meaning from, the structured search endpoint allows you to specify the known components upfront, which is useful in many forward geocoding workflows.\n   * Find locations matching components (structured forward geocoding).\n   */\n  async searchStructured(\n    requestParameters: SearchStructuredRequest = {},\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<GeocodeResponse> {\n    const response = await this.searchStructuredRaw(\n      requestParameters,\n      initOverrides,\n    );\n    return await response.value();\n  }\n\n  /**\n   */\n  async searchV2Raw(\n    requestParameters: SearchV2Request,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<runtime.ApiResponse<GeocodeResponseEnvelopePropertiesV2>> {\n    if (requestParameters[\"text\"] == null) {\n      throw new runtime.RequiredError(\n        \"text\",\n        'Required parameter \"text\" was null or undefined when calling searchV2().',\n      );\n    }\n\n    const queryParameters: any = {};\n\n    if (requestParameters[\"text\"] != null) {\n      queryParameters[\"text\"] = requestParameters[\"text\"];\n    }\n\n    if (requestParameters[\"focusPointLat\"] != null) {\n      queryParameters[\"focus.point.lat\"] = requestParameters[\"focusPointLat\"];\n    }\n\n    if (requestParameters[\"focusPointLon\"] != null) {\n      queryParameters[\"focus.point.lon\"] = requestParameters[\"focusPointLon\"];\n    }\n\n    if (requestParameters[\"layers\"] != null) {\n      queryParameters[\"layers\"] = requestParameters[\"layers\"]!.join(\n        runtime.COLLECTION_FORMATS[\"csv\"],\n      );\n    }\n\n    if (requestParameters[\"sources\"] != null) {\n      queryParameters[\"sources\"] = requestParameters[\"sources\"]!.join(\n        runtime.COLLECTION_FORMATS[\"csv\"],\n      );\n    }\n\n    if (requestParameters[\"boundaryGid\"] != null) {\n      queryParameters[\"boundary.gid\"] = requestParameters[\"boundaryGid\"];\n    }\n\n    if (requestParameters[\"boundaryCountry\"] != null) {\n      queryParameters[\"boundary.country\"] = requestParameters[\n        \"boundaryCountry\"\n      ]!.join(runtime.COLLECTION_FORMATS[\"csv\"]);\n    }\n\n    if (requestParameters[\"boundaryRectMinLat\"] != null) {\n      queryParameters[\"boundary.rect.min_lat\"] =\n        requestParameters[\"boundaryRectMinLat\"];\n    }\n\n    if (requestParameters[\"boundaryRectMinLon\"] != null) {\n      queryParameters[\"boundary.rect.min_lon\"] =\n        requestParameters[\"boundaryRectMinLon\"];\n    }\n\n    if (requestParameters[\"boundaryRectMaxLat\"] != null) {\n      queryParameters[\"boundary.rect.max_lat\"] =\n        requestParameters[\"boundaryRectMaxLat\"];\n    }\n\n    if (requestParameters[\"boundaryRectMaxLon\"] != null) {\n      queryParameters[\"boundary.rect.max_lon\"] =\n        requestParameters[\"boundaryRectMaxLon\"];\n    }\n\n    if (requestParameters[\"boundaryCircleLat\"] != null) {\n      queryParameters[\"boundary.circle.lat\"] =\n        requestParameters[\"boundaryCircleLat\"];\n    }\n\n    if (requestParameters[\"boundaryCircleLon\"] != null) {\n      queryParameters[\"boundary.circle.lon\"] =\n        requestParameters[\"boundaryCircleLon\"];\n    }\n\n    if (requestParameters[\"boundaryCircleRadius\"] != null) {\n      queryParameters[\"boundary.circle.radius\"] =\n        requestParameters[\"boundaryCircleRadius\"];\n    }\n\n    if (requestParameters[\"size\"] != null) {\n      queryParameters[\"size\"] = requestParameters[\"size\"];\n    }\n\n    if (requestParameters[\"lang\"] != null) {\n      queryParameters[\"lang\"] = requestParameters[\"lang\"];\n    }\n\n    const headerParameters: runtime.HTTPHeaders = {};\n\n    if (this.configuration && this.configuration.apiKey) {\n      queryParameters[\"api_key\"] = await this.configuration.apiKey(\"api_key\"); // ApiKeyAuth authentication\n    }\n\n    const response = await this.request(\n      {\n        path: `/geocoding/v2/search`,\n        method: \"GET\",\n        headers: headerParameters,\n        query: queryParameters,\n      },\n      initOverrides,\n    );\n\n    return new runtime.JSONApiResponse(response, (jsonValue) =>\n      GeocodeResponseEnvelopePropertiesV2FromJSON(jsonValue),\n    );\n  }\n\n  /**\n   */\n  async searchV2(\n    requestParameters: SearchV2Request,\n    initOverrides?: RequestInit | runtime.InitOverrideFunction,\n  ): Promise<GeocodeResponseEnvelopePropertiesV2> {\n    const response = await this.searchV2Raw(requestParameters, initOverrides);\n    return await response.value();\n  }\n}\n","import {\n  AutocompleteRequest,\n  GeocodingApi as GeneratedApi,\n  InitOverrideFunction,\n  GeocodeResponse,\n} from \"./generated\";\n\nexport class GeocodingApi extends GeneratedApi {\n  cache = new Map();\n\n  /**\n   * Autocomplete enables interactive search-as-you-type user experiences, suggesting places as you type, along with information that will help your users find the correct place quickly.\n   *\n   * To ensure a snappy user experience, recent successful searches are cached automatically.\n   * We also recommend throttling (ex: via lodash) for most interactive applications.\n   */\n  async autocomplete(\n    requestParameters: AutocompleteRequest,\n    initOverrides?: RequestInit | InitOverrideFunction,\n  ): Promise<GeocodeResponse> {\n    let overridesKey =\n      initOverrides === null\n        ? \"null\"\n        : typeof initOverrides === \"function\"\n          ? initOverrides.toString()\n          : JSON.stringify(initOverrides);\n    const key = JSON.stringify(requestParameters) + overridesKey;\n    if (this.cache.has(key)) {\n      return this.cache.get(key);\n    }\n\n    let result = await super.autocomplete(requestParameters, initOverrides);\n\n    // Delete the oldest entry (the first one that was inserted) if we are over our desired limit\n    if (this.cache.size >= 20) {\n      const oldestKey = this.cache.keys().next().value;\n      this.cache.delete(oldestKey);\n    }\n\n    this.cache.set(key, result);\n    return result;\n  }\n}\n"],"names":["BASE_PATH","Configuration","configuration","querystring","apiKey","accessToken","DefaultConfig","_BaseAPI","url","init","fetchParams","middleware","response","e","FetchError","middlewares","next","preMiddlewares","pre","postMiddlewares","post","mime","context","initOverrides","ResponseError","headers","key","initOverrideFn","initParams","overriddenInit","body","isFormData","isBlob","constructor","BaseAPI","value","msg","cause","RequiredError","field","COLLECTION_FORMATS","params","prefix","querystringSingleKey","part","keyPrefix","fullKey","multiValue","singleValue","valueAsArray","exists","json","mapValues","data","fn","result","canConsumeForm","consumes","consume","JSONApiResponse","raw","transformer","jsonValue","VoidApiResponse","BlobApiResponse","TextApiResponse","instanceOfAccess","AccessFromJSON","AccessFromJSONTyped","ignoreDiscriminator","AccessToJSON","AccessToJSONTyped","instanceOfFoursquareAddendum","FoursquareAddendumFromJSON","FoursquareAddendumFromJSONTyped","FoursquareAddendumToJSON","FoursquareAddendumToJSONTyped","instanceOfWhosOnFirstConcordances","WhosOnFirstConcordancesFromJSON","WhosOnFirstConcordancesFromJSONTyped","WhosOnFirstConcordancesToJSON","WhosOnFirstConcordancesToJSONTyped","instanceOfOpenStreetMapAddendum","OpenStreetMapAddendumFromJSON","OpenStreetMapAddendumFromJSONTyped","OpenStreetMapAddendumToJSON","OpenStreetMapAddendumToJSONTyped","instanceOfGeonamesAddendum","GeonamesAddendumFromJSON","GeonamesAddendumFromJSONTyped","GeonamesAddendumToJSON","GeonamesAddendumToJSONTyped","instanceOfAddendumV2","AddendumV2FromJSON","AddendumV2FromJSONTyped","AddendumV2ToJSON","AddendumV2ToJSONTyped","instanceOfAddressComponentsV2","AddressComponentsV2FromJSON","AddressComponentsV2FromJSONTyped","AddressComponentsV2ToJSON","AddressComponentsV2ToJSONTyped","instanceOfAdminRegion","AdminRegionFromJSON","AdminRegionFromJSONTyped","AdminRegionToJSON","AdminRegionToJSONTyped","instanceOfAdministrative","AdministrativeFromJSON","AdministrativeFromJSONTyped","AdministrativeToJSON","AdministrativeToJSONTyped","AnnotationFiltersActionEnum","AnnotationFiltersAttributesEnum","instanceOfAnnotationFilters","AnnotationFiltersFromJSON","AnnotationFiltersFromJSONTyped","AnnotationFiltersToJSON","AnnotationFiltersToJSONTyped","instanceOfAutoCostingOptions","AutoCostingOptionsFromJSON","AutoCostingOptionsFromJSONTyped","AutoCostingOptionsToJSON","AutoCostingOptionsToJSONTyped","instanceOfBaseCostingOptions","BaseCostingOptionsFromJSON","BaseCostingOptionsFromJSONTyped","BaseCostingOptionsToJSON","BaseCostingOptionsToJSONTyped","instanceOfMotorScooterCostingOptions","MotorScooterCostingOptionsFromJSON","MotorScooterCostingOptionsFromJSONTyped","MotorScooterCostingOptionsToJSON","MotorScooterCostingOptionsToJSONTyped","PedestrianType","instanceOfPedestrianType","PedestrianTypeFromJSON","PedestrianTypeFromJSONTyped","PedestrianTypeToJSON","PedestrianTypeToJSONTyped","instanceOfPedestrianCostingOptions","PedestrianCostingOptionsFromJSON","PedestrianCostingOptionsFromJSONTyped","PedestrianCostingOptionsToJSON","PedestrianCostingOptionsToJSONTyped","instanceOfTruckCostingOptions","TruckCostingOptionsFromJSON","TruckCostingOptionsFromJSONTyped","TruckCostingOptionsToJSON","TruckCostingOptionsToJSONTyped","BicycleCostingOptionsBicycleTypeEnum","instanceOfBicycleCostingOptions","BicycleCostingOptionsFromJSON","BicycleCostingOptionsFromJSONTyped","BicycleCostingOptionsToJSON","BicycleCostingOptionsToJSONTyped","LowSpeedVehicleCostingOptionsVehicleTypeEnum","instanceOfLowSpeedVehicleCostingOptions","LowSpeedVehicleCostingOptionsFromJSON","LowSpeedVehicleCostingOptionsFromJSONTyped","LowSpeedVehicleCostingOptionsToJSON","LowSpeedVehicleCostingOptionsToJSONTyped","instanceOfMotorcycleCostingOptions","MotorcycleCostingOptionsFromJSON","MotorcycleCostingOptionsFromJSONTyped","MotorcycleCostingOptionsToJSON","MotorcycleCostingOptionsToJSONTyped","instanceOfCostingOptions","CostingOptionsFromJSON","CostingOptionsFromJSONTyped","CostingOptionsToJSON","CostingOptionsToJSONTyped","MapMatchCostingModel","instanceOfMapMatchCostingModel","MapMatchCostingModelFromJSON","MapMatchCostingModelFromJSONTyped","MapMatchCostingModelToJSON","MapMatchCostingModelToJSONTyped","DistanceUnit","instanceOfDistanceUnit","DistanceUnitFromJSON","DistanceUnitFromJSONTyped","DistanceUnitToJSON","DistanceUnitToJSONTyped","RoutingLanguages","instanceOfRoutingLanguages","RoutingLanguagesFromJSON","RoutingLanguagesFromJSONTyped","RoutingLanguagesToJSON","RoutingLanguagesToJSONTyped","MapMatchWaypointTypeEnum","instanceOfMapMatchWaypoint","MapMatchWaypointFromJSON","MapMatchWaypointFromJSONTyped","MapMatchWaypointToJSON","MapMatchWaypointToJSONTyped","BaseTraceRequestDirectionsTypeEnum","BaseTraceRequestShapeMatchEnum","instanceOfBaseTraceRequest","BaseTraceRequestFromJSON","BaseTraceRequestFromJSONTyped","BaseTraceRequestToJSON","BaseTraceRequestToJSONTyped","instanceOfBikeNetwork","BikeNetworkFromJSON","BikeNetworkFromJSONTyped","BikeNetworkToJSON","BikeNetworkToJSONTyped","GeocodingSource","instanceOfGeocodingSource","GeocodingSourceFromJSON","GeocodingSourceFromJSONTyped","GeocodingSourceToJSON","GeocodingSourceToJSONTyped","GeocodingLayer","instanceOfGeocodingLayer","GeocodingLayerFromJSON","GeocodingLayerFromJSONTyped","GeocodingLayerToJSON","GeocodingLayerToJSONTyped","instanceOfSearchQuery","SearchQueryFromJSON","SearchQueryFromJSONTyped","SearchQueryToJSON","SearchQueryToJSONTyped","instanceOfSearchStructuredQuery","SearchStructuredQueryFromJSON","SearchStructuredQueryFromJSONTyped","SearchStructuredQueryToJSON","SearchStructuredQueryToJSONTyped","BulkRequestQueryFromJSON","BulkRequestQueryFromJSONTyped","BulkRequestQueryToJSON","BulkRequestQueryToJSONTyped","BulkRequestEndpointEnum","instanceOfBulkRequest","BulkRequestFromJSON","BulkRequestFromJSONTyped","BulkRequestToJSON","BulkRequestToJSONTyped","instanceOfGeocodingObject","GeocodingObjectFromJSON","GeocodingObjectFromJSONTyped","GeocodingObjectToJSON","GeocodingObjectToJSONTyped","GeoJSONPointTypeEnum","instanceOfGeoJSONPoint","GeoJSONPointFromJSON","GeoJSONPointFromJSONTyped","GeoJSONPointToJSON","GeoJSONPointToJSONTyped","instanceOfGeocodingGeoJSONPropertiesAddendumOsm","GeocodingGeoJSONPropertiesAddendumOsmFromJSON","GeocodingGeoJSONPropertiesAddendumOsmFromJSONTyped","GeocodingGeoJSONPropertiesAddendumOsmToJSON","GeocodingGeoJSONPropertiesAddendumOsmToJSONTyped","instanceOfGeocodingGeoJSONPropertiesAddendum","GeocodingGeoJSONPropertiesAddendumFromJSON","GeocodingGeoJSONPropertiesAddendumFromJSONTyped","GeocodingGeoJSONPropertiesAddendumToJSON","GeocodingGeoJSONPropertiesAddendumToJSONTyped","GeocodingGeoJSONPropertiesAccuracyEnum","GeocodingGeoJSONPropertiesMatchTypeEnum","instanceOfGeocodingGeoJSONProperties","GeocodingGeoJSONPropertiesFromJSON","GeocodingGeoJSONPropertiesFromJSONTyped","GeocodingGeoJSONPropertiesToJSON","GeocodingGeoJSONPropertiesToJSONTyped","GeocodingGeoJSONFeatureTypeEnum","instanceOfGeocodingGeoJSONFeature","GeocodingGeoJSONFeatureFromJSON","GeocodingGeoJSONFeatureFromJSONTyped","GeocodingGeoJSONFeatureToJSON","GeocodingGeoJSONFeatureToJSONTyped","instanceOfGeocodeResponse","GeocodeResponseFromJSON","GeocodeResponseFromJSONTyped","GeocodeResponseToJSON","GeocodeResponseToJSONTyped","instanceOfBulkSearchResponse","BulkSearchResponseFromJSON","BulkSearchResponseFromJSONTyped","BulkSearchResponseToJSON","BulkSearchResponseToJSONTyped","instanceOfWofContextComponent","WofContextComponentFromJSON","WofContextComponentFromJSONTyped","WofContextComponentToJSON","WofContextComponentToJSONTyped","instanceOfWofContext","WofContextFromJSON","WofContextFromJSONTyped","WofContextToJSON","WofContextToJSONTyped","instanceOfContext","ContextFromJSON","ContextFromJSONTyped","ContextToJSON","ContextToJSONTyped","instanceOfContour","ContourFromJSON","ContourFromJSONTyped","ContourToJSON","ContourToJSONTyped","instanceOfCoordinate","CoordinateFromJSON","CoordinateFromJSONTyped","CoordinateToJSON","CoordinateToJSONTyped","CostingModel","instanceOfCostingModel","CostingModelFromJSON","CostingModelFromJSONTyped","CostingModelToJSON","CostingModelToJSONTyped","DirectionsOptionsDirectionsTypeEnum","instanceOfDirectionsOptions","DirectionsOptionsFromJSON","DirectionsOptionsFromJSONTyped","DirectionsOptionsToJSON","DirectionsOptionsToJSONTyped","instanceOfEdgeSign","EdgeSignFromJSON","EdgeSignFromJSONTyped","EdgeSignToJSON","EdgeSignToJSONTyped","EdgeUse","instanceOfEdgeUse","EdgeUseFromJSON","EdgeUseFromJSONTyped","EdgeUseToJSON","EdgeUseToJSONTyped","Traversability","instanceOfTraversability","TraversabilityFromJSON","TraversabilityFromJSONTyped","TraversabilityToJSON","TraversabilityToJSONTyped","RoadClass","instanceOfRoadClass","RoadClassFromJSON","RoadClassFromJSONTyped","RoadClassToJSON","RoadClassToJSONTyped","instanceOfIntersectingEdge","IntersectingEdgeFromJSON","IntersectingEdgeFromJSONTyped","IntersectingEdgeToJSON","IntersectingEdgeToJSONTyped","NodeType","instanceOfNodeType","NodeTypeFromJSON","NodeTypeFromJSONTyped","NodeTypeToJSON","NodeTypeToJSONTyped","instanceOfEndNode","EndNodeFromJSON","EndNodeFromJSONTyped","EndNodeToJSON","EndNodeToJSONTyped","ExtendedDirectionsOptionsFormatEnum","instanceOfExtendedDirectionsOptions","ExtendedDirectionsOptionsFromJSON","ExtendedDirectionsOptionsFromJSONTyped","ExtendedDirectionsOptionsToJSON","ExtendedDirectionsOptionsToJSONTyped","instanceOfPoint","PointFromJSON","PointFromJSONTyped","PointToJSON","PointToJSONTyped","MatchType","instanceOfMatchType","MatchTypeFromJSON","MatchTypeFromJSONTyped","MatchTypeToJSON","MatchTypeToJSONTyped","instanceOfSourceAttribution","SourceAttributionFromJSON","SourceAttributionFromJSONTyped","SourceAttributionToJSON","SourceAttributionToJSONTyped","Precision","instanceOfPrecision","PrecisionFromJSON","PrecisionFromJSONTyped","PrecisionToJSON","PrecisionToJSONTyped","instanceOfFeaturePropertiesV2Properties","FeaturePropertiesV2PropertiesFromJSON","FeaturePropertiesV2PropertiesFromJSONTyped","FeaturePropertiesV2PropertiesToJSON","FeaturePropertiesV2PropertiesToJSONTyped","instanceOfFeaturePropertiesV2","FeaturePropertiesV2FromJSON","FeaturePropertiesV2FromJSONTyped","FeaturePropertiesV2ToJSON","FeaturePropertiesV2ToJSONTyped","instanceOfGeoAttributes","GeoAttributesFromJSON","GeoAttributesFromJSONTyped","GeoAttributesToJSON","GeoAttributesToJSONTyped","GeoJSONGeometryBaseTypeEnum","instanceOfGeoJSONGeometryBase","GeoJSONGeometryBaseFromJSON","GeoJSONGeometryBaseFromJSONTyped","GeoJSONGeometryBaseToJSON","GeoJSONGeometryBaseToJSONTyped","instanceOfGeocodingMeta","GeocodingMetaFromJSON","GeocodingMetaFromJSONTyped","GeocodingMetaToJSON","GeocodingMetaToJSONTyped","instanceOfGeocodeResponseEnvelopePropertiesV2","GeocodeResponseEnvelopePropertiesV2FromJSON","GeocodeResponseEnvelopePropertiesV2FromJSONTyped","GeocodeResponseEnvelopePropertiesV2ToJSON","GeocodeResponseEnvelopePropertiesV2ToJSONTyped","HeightRequestShapeFormatEnum","instanceOfHeightRequest","HeightRequestFromJSON","HeightRequestFromJSONTyped","HeightRequestToJSON","HeightRequestToJSONTyped","instanceOfHeightResponse","HeightResponseFromJSON","HeightResponseFromJSONTyped","HeightResponseToJSON","HeightResponseToJSONTyped","HighwayClassificationSurfaceEnum","HighwayClassificationUseEnum","HighwayClassificationClassificationEnum","instanceOfHighwayClassification","HighwayClassificationFromJSON","HighwayClassificationFromJSONTyped","HighwayClassificationToJSON","HighwayClassificationToJSONTyped","IsochroneCostingModel","instanceOfIsochroneCostingModel","IsochroneCostingModelFromJSON","IsochroneCostingModelFromJSONTyped","IsochroneCostingModelToJSON","IsochroneCostingModelToJSONTyped","IsochronePropertiesMetricEnum","instanceOfIsochroneProperties","IsochronePropertiesFromJSON","IsochronePropertiesFromJSONTyped","IsochronePropertiesToJSON","IsochronePropertiesToJSONTyped","IsochroneFeatureTypeEnum","instanceOfIsochroneFeature","IsochroneFeatureFromJSON","IsochroneFeatureFromJSONTyped","IsochroneFeatureToJSON","IsochroneFeatureToJSONTyped","instanceOfIsochroneRequest","IsochroneRequestFromJSON","IsochroneRequestFromJSONTyped","IsochroneRequestToJSON","IsochroneRequestToJSONTyped","IsochroneResponseTypeEnum","instanceOfIsochroneResponse","IsochroneResponseFromJSON","IsochroneResponseFromJSONTyped","IsochroneResponseToJSON","IsochroneResponseToJSONTyped","LayerId","instanceOfLayerId","LayerIdFromJSON","LayerIdFromJSONTyped","LayerIdToJSON","LayerIdToJSONTyped","SpeedsTypeEnum","instanceOfSpeeds","SpeedsFromJSON","SpeedsFromJSONTyped","SpeedsToJSON","SpeedsToJSONTyped","instanceOfNodeId","NodeIdFromJSON","NodeIdFromJSONTyped","NodeIdToJSON","NodeIdToJSONTyped","instanceOfRestrictions","RestrictionsFromJSON","RestrictionsFromJSONTyped","RestrictionsToJSON","RestrictionsToJSONTyped","LocateDetailedEdgeSacScaleEnum","LocateDetailedEdgeCycleLaneEnum","instanceOfLocateDetailedEdge","LocateDetailedEdgeFromJSON","LocateDetailedEdgeFromJSONTyped","LocateDetailedEdgeToJSON","LocateDetailedEdgeToJSONTyped","instanceOfLocateEdgeInfo","LocateEdgeInfoFromJSON","LocateEdgeInfoFromJSONTyped","LocateEdgeInfoToJSON","LocateEdgeInfoToJSONTyped","LocateEdgeSideOfStreetEnum","instanceOfLocateEdge","LocateEdgeFromJSON","LocateEdgeFromJSONTyped","LocateEdgeToJSON","LocateEdgeToJSONTyped","LocateNodeIntersectionTypeEnum","instanceOfLocateNode","LocateNodeFromJSON","LocateNodeFromJSONTyped","LocateNodeToJSON","LocateNodeToJSONTyped","instanceOfLocateObject","LocateObjectFromJSON","LocateObjectFromJSONTyped","LocateObjectToJSON","LocateObjectToJSONTyped","instanceOfManeuverSignElement","ManeuverSignElementFromJSON","ManeuverSignElementFromJSONTyped","ManeuverSignElementToJSON","ManeuverSignElementToJSONTyped","instanceOfManeuverSign","ManeuverSignFromJSON","ManeuverSignFromJSONTyped","ManeuverSignToJSON","ManeuverSignToJSONTyped","instanceOfMapMatchTraceOptions","MapMatchTraceOptionsFromJSON","MapMatchTraceOptionsFromJSONTyped","MapMatchTraceOptionsToJSON","MapMatchTraceOptionsToJSONTyped","MapMatchRequestShapeMatchEnum","MapMatchRequestDirectionsTypeEnum","MapMatchRequestFormatEnum","instanceOfMapMatchRequest","MapMatchRequestFromJSON","MapMatchRequestFromJSONTyped","MapMatchRequestToJSON","MapMatchRequestToJSONTyped","RoutingResponseWaypointTypeEnum","instanceOfRoutingResponseWaypoint","RoutingResponseWaypointFromJSON","RoutingResponseWaypointFromJSONTyped","RoutingResponseWaypointToJSON","RoutingResponseWaypointToJSONTyped","instanceOfRouteSummary","RouteSummaryFromJSON","RouteSummaryFromJSONTyped","RouteSummaryToJSON","RouteSummaryToJSONTyped","RoutingLongUnits","instanceOfRoutingLongUnits","RoutingLongUnitsFromJSON","RoutingLongUnitsFromJSONTyped","RoutingLongUnitsToJSON","RoutingLongUnitsToJSONTyped","TravelMode","instanceOfTravelMode","TravelModeFromJSON","TravelModeFromJSONTyped","TravelModeToJSON","TravelModeToJSONTyped","RouteManeuverTravelTypeEnum","RouteManeuverBssManeuverTypeEnum","instanceOfRouteManeuver","RouteManeuverFromJSON","RouteManeuverFromJSONTyped","RouteManeuverToJSON","RouteManeuverToJSONTyped","instanceOfRouteLeg","RouteLegFromJSON","RouteLegFromJSONTyped","RouteLegToJSON","RouteLegToJSONTyped","instanceOfRouteTrip","RouteTripFromJSON","RouteTripFromJSONTyped","RouteTripToJSON","RouteTripToJSONTyped","instanceOfRouteResponseAlternatesInner","RouteResponseAlternatesInnerFromJSON","RouteResponseAlternatesInnerFromJSONTyped","RouteResponseAlternatesInnerToJSON","RouteResponseAlternatesInnerToJSONTyped","instanceOfMapMatchRouteResponse","MapMatchRouteResponseFromJSON","MapMatchRouteResponseFromJSONTyped","MapMatchRouteResponseToJSON","MapMatchRouteResponseToJSONTyped","MatchedPointTypeEnum","instanceOfMatchedPoint","MatchedPointFromJSON","MatchedPointFromJSONTyped","MatchedPointToJSON","MatchedPointToJSONTyped","MatrixCostingModel","instanceOfMatrixCostingModel","MatrixCostingModelFromJSON","MatrixCostingModelFromJSONTyped","MatrixCostingModelToJSON","MatrixCostingModelToJSONTyped","instanceOfMatrixDistance","MatrixDistanceFromJSON","MatrixDistanceFromJSONTyped","MatrixDistanceToJSON","MatrixDistanceToJSONTyped","instanceOfMatrixWaypoint","MatrixWaypointFromJSON","MatrixWaypointFromJSONTyped","MatrixWaypointToJSON","MatrixWaypointToJSONTyped","MatrixRequestDirectionsTypeEnum","instanceOfMatrixRequest","MatrixRequestFromJSON","MatrixRequestFromJSONTyped","MatrixRequestToJSON","MatrixRequestToJSONTyped","instanceOfWarning","WarningFromJSON","WarningFromJSONTyped","WarningToJSON","WarningToJSONTyped","instanceOfMatrixResponse","MatrixResponseFromJSON","MatrixResponseFromJSONTyped","MatrixResponseToJSON","MatrixResponseToJSONTyped","NearestRoadsRequestDirectionsTypeEnum","instanceOfNearestRoadsRequest","NearestRoadsRequestFromJSON","NearestRoadsRequestFromJSONTyped","NearestRoadsRequestToJSON","NearestRoadsRequestToJSONTyped","OptimizedRouteRequestDirectionsTypeEnum","OptimizedRouteRequestFormatEnum","instanceOfOptimizedRouteRequest","OptimizedRouteRequestFromJSON","OptimizedRouteRequestFromJSONTyped","OptimizedRouteRequestToJSON","OptimizedRouteRequestToJSONTyped","instanceOfOsrmAdmin","OsrmAdminFromJSON","OsrmAdminFromJSONTyped","OsrmAdminToJSON","OsrmAdminToJSONTyped","OsrmSpeedLimitUnitEnum","instanceOfOsrmSpeedLimit","OsrmSpeedLimitFromJSON","OsrmSpeedLimitFromJSONTyped","OsrmSpeedLimitToJSON","OsrmSpeedLimitToJSONTyped","instanceOfOsrmAnnotation","OsrmAnnotationFromJSON","OsrmAnnotationFromJSONTyped","OsrmAnnotationToJSON","OsrmAnnotationToJSONTyped","OsrmBannerComponentTypeEnum","instanceOfOsrmBannerComponent","OsrmBannerComponentFromJSON","OsrmBannerComponentFromJSONTyped","OsrmBannerComponentToJSON","OsrmBannerComponentToJSONTyped","OsrmGuidanceModifier","instanceOfOsrmGuidanceModifier","OsrmGuidanceModifierFromJSON","OsrmGuidanceModifierFromJSONTyped","OsrmGuidanceModifierToJSON","OsrmGuidanceModifierToJSONTyped","OsrmBannerContentTypeEnum","instanceOfOsrmBannerContent","OsrmBannerContentFromJSON","OsrmBannerContentFromJSONTyped","OsrmBannerContentToJSON","OsrmBannerContentToJSONTyped","instanceOfOsrmBannerInstruction","OsrmBannerInstructionFromJSON","OsrmBannerInstructionFromJSONTyped","OsrmBannerInstructionToJSON","OsrmBannerInstructionToJSONTyped","OsrmBaseApiResponseCodeEnum","instanceOfOsrmBaseApiResponse","OsrmBaseApiResponseFromJSON","OsrmBaseApiResponseFromJSONTyped","OsrmBaseApiResponseToJSON","OsrmBaseApiResponseToJSONTyped","OsrmLaneIndicationsEnum","instanceOfOsrmLane","OsrmLaneFromJSON","OsrmLaneFromJSONTyped","OsrmLaneToJSON","OsrmLaneToJSONTyped","OsrmIntersectionClassesEnum","instanceOfOsrmIntersection","OsrmIntersectionFromJSON","OsrmIntersectionFromJSONTyped","OsrmIntersectionToJSON","OsrmIntersectionToJSONTyped","instanceOfOsrmViaWaypoint","OsrmViaWaypointFromJSON","OsrmViaWaypointFromJSONTyped","OsrmViaWaypointToJSON","OsrmViaWaypointToJSONTyped","OsrmStepManeuverTypeEnum","instanceOfOsrmStepManeuver","OsrmStepManeuverFromJSON","OsrmStepManeuverFromJSONTyped","OsrmStepManeuverToJSON","OsrmStepManeuverToJSONTyped","instanceOfOsrmVoiceInstruction","OsrmVoiceInstructionFromJSON","OsrmVoiceInstructionFromJSONTyped","OsrmVoiceInstructionToJSON","OsrmVoiceInstructionToJSONTyped","OsrmRouteStepDrivingSideEnum","OsrmRouteStepSpeedLimitSignEnum","instanceOfOsrmRouteStep","OsrmRouteStepFromJSON","OsrmRouteStepFromJSONTyped","OsrmRouteStepToJSON","OsrmRouteStepToJSONTyped","instanceOfOsrmRouteLeg","OsrmRouteLegFromJSON","OsrmRouteLegFromJSONTyped","OsrmRouteLegToJSON","OsrmRouteLegToJSONTyped","instanceOfOsrmRoute","OsrmRouteFromJSON","OsrmRouteFromJSONTyped","OsrmRouteToJSON","OsrmRouteToJSONTyped","instanceOfOsrmWaypoint","OsrmWaypointFromJSON","OsrmWaypointFromJSONTyped","OsrmWaypointToJSON","OsrmWaypointToJSONTyped","OsrmRouteResponseCodeEnum","instanceOfOsrmRouteResponse","OsrmRouteResponseFromJSON","OsrmRouteResponseFromJSONTyped","OsrmRouteResponseToJSON","OsrmRouteResponseToJSONTyped","instanceOfPropertiesV2","PropertiesV2FromJSON","PropertiesV2FromJSONTyped","PropertiesV2ToJSON","PropertiesV2ToJSONTyped","instanceOfRouteResponse","RouteResponseFromJSON","RouteResponseFromJSONTyped","RouteResponseToJSON","RouteResponseToJSONTyped","Route200ResponseFromJSON","Route200ResponseFromJSONTyped","Route200ResponseToJSON","Route200ResponseToJSONTyped","instanceOfRoutingWaypointAllOfSearchFilter","RoutingWaypointAllOfSearchFilterFromJSON","RoutingWaypointAllOfSearchFilterFromJSONTyped","RoutingWaypointAllOfSearchFilterToJSON","RoutingWaypointAllOfSearchFilterToJSONTyped","RoutingWaypointTypeEnum","RoutingWaypointPreferredSideEnum","instanceOfRoutingWaypoint","RoutingWaypointFromJSON","RoutingWaypointFromJSONTyped","RoutingWaypointToJSON","RoutingWaypointToJSONTyped","RouteRequestDirectionsTypeEnum","RouteRequestFormatEnum","instanceOfRouteRequest","RouteRequestFromJSON","RouteRequestFromJSONTyped","RouteRequestToJSON","RouteRequestToJSONTyped","SimpleRoutingWaypointTypeEnum","instanceOfSimpleRoutingWaypoint","SimpleRoutingWaypointFromJSON","SimpleRoutingWaypointFromJSONTyped","SimpleRoutingWaypointToJSON","SimpleRoutingWaypointToJSONTyped","SourceId","instanceOfSourceId","SourceIdFromJSON","SourceIdFromJSONTyped","SourceIdToJSON","SourceIdToJSONTyped","TraceAttributeKey","instanceOfTraceAttributeKey","TraceAttributeKeyFromJSON","TraceAttributeKeyFromJSONTyped","TraceAttributeKeyToJSON","TraceAttributeKeyToJSONTyped","TraceAttributeFilterOptionsActionEnum","instanceOfTraceAttributeFilterOptions","TraceAttributeFilterOptionsFromJSON","TraceAttributeFilterOptionsFromJSONTyped","TraceAttributeFilterOptionsToJSON","TraceAttributeFilterOptionsToJSONTyped","TraceEdgeSurfaceEnum","TraceEdgeVehicleTypeEnum","TraceEdgePedestrianTypeEnum","TraceEdgeBicycleTypeEnum","TraceEdgeTransitTypeEnum","TraceEdgeCycleLaneEnum","TraceEdgeSidewalkEnum","instanceOfTraceEdge","TraceEdgeFromJSON","TraceEdgeFromJSONTyped","TraceEdgeToJSON","TraceEdgeToJSONTyped","instanceOfTraceAttributesBaseResponse","TraceAttributesBaseResponseFromJSON","TraceAttributesBaseResponseFromJSONTyped","TraceAttributesBaseResponseToJSON","TraceAttributesBaseResponseToJSONTyped","TraceAttributesRequestShapeMatchEnum","TraceAttributesRequestDirectionsTypeEnum","instanceOfTraceAttributesRequest","TraceAttributesRequestFromJSON","TraceAttributesRequestFromJSONTyped","TraceAttributesRequestToJSON","TraceAttributesRequestToJSONTyped","instanceOfTraceAttributesResponse","TraceAttributesResponseFromJSON","TraceAttributesResponseFromJSONTyped","TraceAttributesResponseToJSON","TraceAttributesResponseToJSONTyped","instanceOfTzResponse","TzResponseFromJSON","TzResponseFromJSONTyped","TzResponseToJSON","TzResponseToJSONTyped","GeospatialApi","runtime.BaseAPI","requestParameters","queryParameters","headerParameters","runtime.JSONApiResponse","runtime.RequiredError","RoutingApi","runtime.COLLECTION_FORMATS","GeocodingApi","GeneratedApi","overridesKey","oldestKey"],"mappings":"qOAca,MAAAA,EAAY,6BAA6B,QAAQ,OAAQ,EAAE,EAqBjE,MAAMC,EAAc,CACzB,YAAoBC,EAAyC,GAAI,CAA7C,KAAA,cAAAA,CAAA,CAEpB,IAAI,OAAOA,EAA8B,CACvC,KAAK,cAAgBA,CAAA,CAGvB,IAAI,UAAmB,CACrB,OAAO,KAAK,cAAc,UAAY,KAClC,KAAK,cAAc,SACnBF,CAAA,CAGN,IAAI,UAAiC,CACnC,OAAO,KAAK,cAAc,QAAA,CAG5B,IAAI,YAA2B,CACtB,OAAA,KAAK,cAAc,YAAc,CAAC,CAAA,CAG3C,IAAI,sBAAsD,CACjD,OAAA,KAAK,cAAc,sBAAwBG,EAAA,CAGpD,IAAI,UAA+B,CACjC,OAAO,KAAK,cAAc,QAAA,CAG5B,IAAI,UAA+B,CACjC,OAAO,KAAK,cAAc,QAAA,CAG5B,IAAI,QAAmE,CAC/D,MAAAC,EAAS,KAAK,cAAc,OAClC,GAAIA,EACF,OAAO,OAAOA,GAAW,WAAaA,EAAS,IAAMA,CAEhD,CAGT,IAAI,aAEU,CACN,MAAAC,EAAc,KAAK,cAAc,YACvC,GAAIA,EACF,OAAO,OAAOA,GAAgB,WAC1BA,EACA,SAAYA,CAEX,CAGT,IAAI,SAAmC,CACrC,OAAO,KAAK,cAAc,OAAA,CAG5B,IAAI,aAA8C,CAChD,OAAO,KAAK,cAAc,WAAA,CAE9B,CAEa,MAAAC,GAAgB,IAAIL,GAKpBM,GAAN,MAAMA,EAAQ,CAOnB,YAAsBL,EAAgBI,GAAe,CAA/B,KAAA,cAAAJ,EAwHd,KAAA,SAAW,MAAOM,EAAaC,IAAsB,CACvD,IAAAC,EAAc,CAAE,IAAAF,EAAK,KAAAC,CAAK,EACnB,UAAAE,KAAc,KAAK,WACxBA,EAAW,MAEVD,EAAA,MAAMC,EAAW,IAAI,CACpB,MAAO,KAAK,SACZ,GAAGD,CACJ,CAAA,GAAMA,GAGb,IAAIE,EACA,GAAA,CACSA,EAAA,MAAO,KAAK,cAAc,UAAY,OAC/CF,EAAY,IACZA,EAAY,IACd,QACOG,EAAG,CACC,UAAAF,KAAc,KAAK,WACxBA,EAAW,UAEVC,EAAA,MAAMD,EAAW,QAAQ,CACxB,MAAO,KAAK,SACZ,IAAKD,EAAY,IACjB,KAAMA,EAAY,KAClB,MAAOG,EACP,SAAUD,EAAWA,EAAS,QAAU,MACzC,CAAA,GAAMA,GAGb,GAAIA,IAAa,OACf,MAAIC,aAAa,MACT,IAAIC,GACRD,EACA,gFACF,EAEMA,CAEV,CAES,UAAAF,KAAc,KAAK,WACxBA,EAAW,OAEVC,EAAA,MAAMD,EAAW,KAAK,CACrB,MAAO,KAAK,SACZ,IAAKD,EAAY,IACjB,KAAMA,EAAY,KAClB,SAAUE,EAAS,MAAM,CAC1B,CAAA,GAAMA,GAGN,OAAAA,CACT,EA5KE,KAAK,WAAaV,EAAc,UAAA,CAGlC,kBAA8Ca,EAA2B,CACjE,MAAAC,EAAO,KAAK,MAAS,EAC3B,OAAAA,EAAK,WAAaA,EAAK,WAAW,OAAO,GAAGD,CAAW,EAChDC,CAAA,CAGT,qBAEKC,EACH,CACA,MAAMF,EAAcE,EAAe,IAAKC,IAAS,CAAE,IAAAA,GAAM,EAClD,OAAA,KAAK,eAAkB,GAAGH,CAAW,CAAA,CAG9C,sBAEKI,EACH,CACA,MAAMJ,EAAcI,EAAgB,IAAKC,IAAU,CAAE,KAAAA,GAAO,EACrD,OAAA,KAAK,eAAkB,GAAGL,CAAW,CAAA,CAapC,WAAWM,EAA0C,CAC7D,OAAKA,EAGEd,GAAQ,UAAU,KAAKc,CAAI,EAFzB,EAEyB,CAGpC,MAAgB,QACdC,EACAC,EACmB,CACb,KAAA,CAAE,IAAAf,EAAK,KAAAC,CAAK,EAAI,MAAM,KAAK,kBAAkBa,EAASC,CAAa,EACnEX,EAAW,MAAM,KAAK,SAASJ,EAAKC,CAAI,EAC9C,GAAIG,GAAYA,EAAS,QAAU,KAAOA,EAAS,OAAS,IACnD,OAAAA,EAEH,MAAA,IAAIY,GAAcZ,EAAU,iCAAiC,CAAA,CAGrE,MAAc,kBACZU,EACAC,EACA,CACA,IAAIf,EAAM,KAAK,cAAc,SAAWc,EAAQ,KAE9CA,EAAQ,QAAU,QAClB,OAAO,KAAKA,EAAQ,KAAK,EAAE,SAAW,IAKtCd,GAAO,IAAM,KAAK,cAAc,qBAAqBc,EAAQ,KAAK,GAGpE,MAAMG,EAAU,OAAO,OACrB,CAAC,EACD,KAAK,cAAc,QACnBH,EAAQ,OACV,EACO,OAAA,KAAKG,CAAO,EAAE,QAASC,IAC5BD,EAAQC,EAAG,IAAM,OAAY,OAAOD,EAAQC,EAAG,EAAI,CAAA,CACrD,EAEA,MAAMC,EACJ,OAAOJ,GAAkB,WACrBA,EACA,SAAYA,EAEZK,EAAa,CACjB,OAAQN,EAAQ,OAChB,QAAAG,EACA,KAAMH,EAAQ,KACd,YAAa,KAAK,cAAc,WAClC,EAEMO,EAA8B,CAClC,GAAGD,EACH,GAAI,MAAMD,EAAe,CACvB,KAAMC,EACN,QAAAN,CACD,CAAA,CACH,EAEI,IAAAQ,GAEFC,GAAWF,EAAe,IAAI,GAC9BA,EAAe,gBAAgB,iBAC/BG,GAAOH,EAAe,IAAI,EAE1BC,GAAOD,EAAe,KACb,KAAK,WAAWJ,EAAQ,cAAc,CAAC,EACzCK,GAAA,KAAK,UAAUD,EAAe,IAAI,EAEzCC,GAAOD,EAAe,KAGxB,MAAMpB,GAAoB,CACxB,GAAGoB,EACH,KAAAC,EACF,EAEO,MAAA,CAAE,IAAAtB,EAAK,KAAAC,EAAK,CAAA,CA8Db,OAAqC,CAC3C,MAAMwB,EAAc,KAAK,YACnBjB,EAAO,IAAIiB,EAAY,KAAK,aAAa,EAC1C,OAAAjB,EAAA,WAAa,KAAK,WAAW,MAAM,EACjCA,CAAA,CAEX,EA/LET,GAAwB,UAAY,IAAI,OACtC,+DACA,GACF,EAJK,IAAM2B,EAAN3B,GAkMP,SAASyB,GAAOG,EAA2B,CAClC,OAAA,OAAO,KAAS,KAAeA,aAAiB,IACzD,CAEA,SAASJ,GAAWI,EAA+B,CAC1C,OAAA,OAAO,SAAa,KAAeA,aAAiB,QAC7D,CAEO,MAAMX,WAAsB,KAAM,CAEvC,YACSZ,EACPwB,EACA,CACA,MAAMA,CAAG,EAHF,KAAA,SAAAxB,EAFT,KAAS,KAAwB,eAAA,CAOnC,CAEO,MAAME,WAAmB,KAAM,CAEpC,YACSuB,EACPD,EACA,CACA,MAAMA,CAAG,EAHF,KAAA,MAAAC,EAFT,KAAS,KAAqB,YAAA,CAOhC,CAEO,MAAMC,UAAsB,KAAM,CAEvC,YACSC,EACPH,EACA,CACA,MAAMA,CAAG,EAHF,KAAA,MAAAG,EAFT,KAAS,KAAwB,eAAA,CAOnC,CAEO,MAAMC,EAAqB,CAChC,IAAK,IACL,IAAK,IACL,IAAK,IACL,MAAO,GACT,EAuDgB,SAAArC,GAAYsC,EAAmBC,EAAiB,GAAY,CACnE,OAAA,OAAO,KAAKD,CAAM,EACtB,IAAKf,GAAQiB,GAAqBjB,EAAKe,EAAOf,CAAG,EAAGgB,CAAM,CAAC,EAC3D,OAAQE,GAASA,EAAK,OAAS,CAAC,EAChC,KAAK,GAAG,CACb,CAEA,SAASD,GACPjB,EACAS,EASAU,EAAoB,GACZ,CACR,MAAMC,EAAUD,GAAaA,EAAU,OAAS,IAAInB,CAAG,IAAMA,GAC7D,GAAIS,aAAiB,MAAO,CAC1B,MAAMY,EAAaZ,EAChB,IAAKa,GAAgB,mBAAmB,OAAOA,CAAW,CAAC,CAAC,EAC5D,KAAK,IAAI,mBAAmBF,CAAO,CAAC,GAAG,EAC1C,MAAO,GAAG,mBAAmBA,CAAO,CAAC,IAAIC,CAAU,EAAA,CAErD,GAAIZ,aAAiB,IAAK,CAClB,MAAAc,EAAe,MAAM,KAAKd,CAAK,EAC9B,OAAAQ,GAAqBjB,EAAKuB,EAAcJ,CAAS,CAAA,CAE1D,OAAIV,aAAiB,KACZ,GAAG,mBAAmBW,CAAO,CAAC,IAAI,mBAAmBX,EAAM,YAAa,CAAA,CAAC,GAE9EA,aAAiB,OACZhC,GAAYgC,EAAoBW,CAAO,EAEzC,GAAG,mBAAmBA,CAAO,CAAC,IAAI,mBAAmB,OAAOX,CAAK,CAAC,CAAC,EAC5E,CAEgB,SAAAe,GAAOC,EAAWzB,EAAa,CACvC,MAAAS,EAAQgB,EAAKzB,CAAG,EACf,OAAAS,GAAU,IACnB,CAEgB,SAAAiB,GAAUC,EAAWC,EAAwB,CAC3D,MAAMC,EAAiC,CAAC,EACxC,UAAW7B,KAAO,OAAO,KAAK2B,CAAI,EAChCE,EAAO7B,CAAG,EAAI4B,EAAGD,EAAK3B,CAAG,CAAC,EAErB,OAAA6B,CACT,CAEO,SAASC,GAAeC,EAA8B,CAC3D,UAAWC,KAAWD,EAChB,GAA0BC,EAAQ,cAAlC,sBACK,MAAA,GAGJ,MAAA,EACT,CA0CO,MAAMC,CAAmB,CAC9B,YACSC,EACCC,EAAuCC,GAAmBA,EAClE,CAFO,KAAA,IAAAF,EACC,KAAA,YAAAC,CAAA,CAGV,MAAM,OAAoB,CACxB,OAAO,KAAK,YAAY,MAAM,KAAK,IAAI,MAAM,CAAA,CAEjD,CAEO,MAAME,EAAgB,CAC3B,YAAmBH,EAAe,CAAf,KAAA,IAAAA,CAAA,CAEnB,MAAM,OAAuB,CACpB,CAEX,CAEO,MAAMI,EAAgB,CAC3B,YAAmBJ,EAAe,CAAf,KAAA,IAAAA,CAAA,CAEnB,MAAM,OAAuB,CACpB,OAAA,MAAM,KAAK,IAAI,KAAK,CAAA,CAE/B,CAEO,MAAMK,EAAgB,CAC3B,YAAmBL,EAAe,CAAf,KAAA,IAAAA,CAAA,CAEnB,MAAM,OAAyB,CACtB,OAAA,MAAM,KAAK,IAAI,KAAK,CAAA,CAE/B,CC/aO,SAASM,GAAiB/B,EAAgC,CACxD,MAAA,EACT,CAEO,SAASgC,GAAehB,EAAmB,CACzC,OAAAiB,GAAoBjB,CAAW,CACxC,CAEgB,SAAAiB,GACdjB,EACAkB,EACQ,CACR,OAAIlB,GAAQ,KACHA,EAEF,CACL,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,WAAYA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WAC1D,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,IAAKA,EAAK,KAAU,KAAO,OAAYA,EAAK,IAC5C,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,UAAWA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACxD,WAAYA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WAC1D,IAAKA,EAAK,KAAU,KAAO,OAAYA,EAAK,IAC5C,IAAKA,EAAK,KAAU,KAAO,OAAYA,EAAK,IAC5C,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,WAAYA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WAC1D,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,KAClD,CACF,CAEO,SAASmB,GAAanB,EAAmB,CACvC,OAAAoB,GAAkBpB,EAAM,EAAK,CACtC,CAEgB,SAAAoB,GACdpC,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,UAAWA,EAAM,SACjB,WAAYA,EAAM,WAClB,KAAMA,EAAM,KACZ,IAAKA,EAAM,IACX,MAAOA,EAAM,MACb,UAAWA,EAAM,UACjB,WAAYA,EAAM,WAClB,IAAKA,EAAM,IACX,IAAKA,EAAM,IACX,QAASA,EAAM,QACf,WAAYA,EAAM,WAClB,MAAOA,EAAM,KACf,CACF,CCrHO,SAASqC,GACdrC,EAC6B,CACtB,MAAA,EACT,CAEO,SAASsC,GAA2BtB,EAA+B,CACjE,OAAAuB,GAAgCvB,CAAW,CACpD,CAEgB,SAAAuB,GACdvB,EACAkB,EACoB,CACpB,OAAIlB,GAAQ,KACHA,EAEF,CACL,IAAKA,EAAK,KAAU,KAAO,OAAYA,EAAK,IAC5C,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,OACtD,CACF,CAEO,SAASwB,GAAyBxB,EAA+B,CAC/D,OAAAyB,GAA8BzB,EAAM,EAAK,CAClD,CAEgB,SAAAyB,GACdzC,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,IAAKA,EAAM,IACX,QAASA,EAAM,OACjB,CACF,CC2EO,SAAS0C,GACd1C,EACkC,CAC3B,MAAA,EACT,CAEO,SAAS2C,GACd3B,EACyB,CAClB,OAAA4B,GAAqC5B,CAAW,CACzD,CAEgB,SAAA4B,GACd5B,EACAkB,EACyB,CACzB,OAAIlB,GAAQ,KACHA,EAEF,CACL,oBACEA,EAAK,uBAA4B,KAC7B,OACAA,EAAK,sBACX,QAASA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACrD,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACzD,OAAQA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACnD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,cACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,aACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,OAAQA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACnD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,MAAOA,EAAK,QAAa,KAAO,OAAYA,EAAK,OACjD,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,eACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,WAAYA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAC5D,gBACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,kBACEA,EAAK,qBAA0B,KAC3B,OACAA,EAAK,oBACX,cACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,cACtD,CACF,CAEO,SAAS6B,GACd7B,EACyB,CAClB,OAAA8B,GAAmC9B,EAAM,EAAK,CACvD,CAEgB,SAAA8B,GACd9C,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,sBAAuBA,EAAM,oBAC7B,SAAUA,EAAM,QAChB,WAAYA,EAAM,UAClB,QAASA,EAAM,OACf,UAAWA,EAAM,SACjB,iBAAkBA,EAAM,cACxB,eAAgBA,EAAM,aACtB,YAAaA,EAAM,WACnB,aAAcA,EAAM,YACpB,QAASA,EAAM,OACf,UAAWA,EAAM,SACjB,UAAWA,EAAM,SACjB,OAAQA,EAAM,MACd,eAAgBA,EAAM,cACtB,iBAAkBA,EAAM,eACxB,aAAcA,EAAM,WACpB,iBAAkBA,EAAM,gBACxB,oBAAqBA,EAAM,kBAC3B,iBAAkBA,EAAM,cACxB,YAAaA,EAAM,WACnB,eAAgBA,EAAM,aACxB,CACF,CCzJO,SAAS+C,GACd/C,EACgC,CACzB,MAAA,EACT,CAEO,SAASgD,GACdhC,EACuB,CAChB,OAAAiC,GAAmCjC,CAAW,CACvD,CAEgB,SAAAiC,GACdjC,EACAkB,EACuB,CACvB,OAAIlB,GAAQ,KACHA,EAEF,CACL,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,aACEA,EAAK,eAAoB,KAAO,OAAYA,EAAK,cACnD,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,WAAYA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WAC1D,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,UAAWA,EAAK,WAAgB,KAAO,OAAYA,EAAK,SAC1D,CACF,CAEO,SAASkC,GAA4BlC,EAAkC,CACrE,OAAAmC,GAAiCnC,EAAM,EAAK,CACrD,CAEgB,SAAAmC,GACdnD,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,MAAOA,EAAM,MACb,KAAMA,EAAM,KACZ,KAAMA,EAAM,KACZ,cAAeA,EAAM,aACrB,SAAUA,EAAM,SAChB,MAAOA,EAAM,MACb,QAASA,EAAM,QACf,WAAYA,EAAM,WAClB,SAAUA,EAAM,SAChB,UAAWA,EAAM,SACnB,CACF,CCxHO,SAASoD,GACdpD,EAC2B,CAC3B,MAAI,IAAE,gBAAiBA,IAAUA,EAAM,cAAmB,OAG5D,CAEO,SAASqD,GAAyBrC,EAA6B,CAC7D,OAAAsC,GAA8BtC,CAAW,CAClD,CAEgB,SAAAsC,GACdtC,EACAkB,EACkB,CAClB,OAAIlB,GAAQ,KACHA,EAEF,CACL,YAAaA,EAAK,YACpB,CACF,CAEO,SAASuC,GAAuBvC,EAA6B,CAC3D,OAAAwC,GAA4BxC,EAAM,EAAK,CAChD,CAEgB,SAAAwC,GACdxD,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,aAAcA,EAAM,WACtB,CACF,CCQO,SAASyD,GAAqBzD,EAAoC,CAChE,MAAA,EACT,CAEO,SAAS0D,GAAmB1C,EAAuB,CACjD,OAAA2C,GAAwB3C,CAAW,CAC5C,CAEgB,SAAA2C,GACd3C,EACAkB,EACY,CACZ,OAAIlB,GAAQ,KACHA,EAEF,CACL,WACEA,EAAK,YAAiB,KAClB,OACAsB,GAA2BtB,EAAK,UAAa,EACnD,SACEA,EAAK,UAAe,KAChB,OACAqC,GAAyBrC,EAAK,QAAW,EAC/C,IACEA,EAAK,KAAU,KACX,OACAgC,GAA8BhC,EAAK,GAAM,EAC/C,wBACEA,EAAK,0BAA+B,KAChC,OACA2B,GAAgC3B,EAAK,wBAA2B,CACxE,CACF,CAEO,SAAS4C,GAAiB5C,EAAuB,CAC/C,OAAA6C,GAAsB7C,EAAM,EAAK,CAC1C,CAEgB,SAAA6C,GACd7D,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,WAAYwC,GAAyBxC,EAAM,UAAa,EACxD,SAAUuD,GAAuBvD,EAAM,QAAW,EAClD,IAAKkD,GAA4BlD,EAAM,GAAM,EAC7C,yBAA0B6C,GACxB7C,EAAM,uBAAyB,CAEnC,CACF,CC3EO,SAAS8D,GACd9D,EAC8B,CACvB,MAAA,EACT,CAEO,SAAS+D,GAA4B/C,EAAgC,CACnE,OAAAgD,GAAiChD,CAAW,CACrD,CAEgB,SAAAgD,GACdhD,EACAkB,EACqB,CACrB,OAAIlB,GAAQ,KACHA,EAEF,CACL,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,IAChD,CACF,CAEO,SAASiD,GAA0BjD,EAAgC,CACjE,OAAAkD,GAA+BlD,EAAM,EAAK,CACnD,CAEgB,SAAAkD,GACdlE,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,aAAcA,EAAM,YACpB,OAAQA,EAAM,OACd,YAAaA,EAAM,WACnB,OAAQA,EAAM,OACd,KAAMA,EAAM,IACd,CACF,CCvDO,SAASmE,GAAsBnE,EAAqC,CAClE,MAAA,EACT,CAEO,SAASoE,GAAoBpD,EAAwB,CACnD,OAAAqD,GAAyBrD,CAAW,CAC7C,CAEgB,SAAAqD,GACdrD,EACAkB,EACa,CACb,OAAIlB,GAAQ,KACHA,EAEF,CACL,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACzD,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,UAC3D,CACF,CAEO,SAASsD,GAAkBtD,EAAwB,CACjD,OAAAuD,GAAuBvD,EAAM,EAAK,CAC3C,CAEgB,SAAAuD,GACdvE,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,aAAcA,EAAM,YACpB,aAAcA,EAAM,YACpB,WAAYA,EAAM,UAClB,WAAYA,EAAM,SACpB,CACF,CC3CO,SAASwE,GACdxE,EACyB,CAClB,MAAA,EACT,CAEO,SAASyE,GAAuBzD,EAA2B,CACzD,OAAA0D,GAA4B1D,CAAW,CAChD,CAEgB,SAAA0D,GACd1D,EACAkB,EACgB,CAChB,OAAIlB,GAAQ,KACHA,EAEF,CACL,SAAUA,EAAK,YAAY,GAAK,KAAO,OAAYA,EAAK,YAAY,EACpE,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,SAAUA,EAAK,YAAY,GAAK,KAAO,OAAYA,EAAK,YAAY,EACpE,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,KAClD,CACF,CAEO,SAAS2D,GAAqB3D,EAA2B,CACvD,OAAA4D,GAA0B5D,EAAM,EAAK,CAC9C,CAEgB,SAAA4D,GACd5E,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,aAAcA,EAAM,SACpB,QAASA,EAAM,QACf,aAAcA,EAAM,SACpB,MAAOA,EAAM,KACf,CACF,CCvDO,MAAM6E,GAA8B,CACzC,QAAS,UACT,QAAS,SACX,EAOaC,GAAkC,CAC7C,qBAAsB,yBACtB,0BAA2B,+BAC3B,oBAAqB,wBACrB,sBAAuB,yBACzB,EAOO,SAASC,GACd/E,EAC4B,CACrB,MAAA,EACT,CAEO,SAASgF,EAA0BhE,EAA8B,CAC/D,OAAAiE,GAA+BjE,CAAW,CACnD,CAEgB,SAAAiE,GACdjE,EACAkB,EACmB,CACnB,OAAIlB,GAAQ,KACHA,EAEF,CACL,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,WAAYA,EAAK,YAAiB,KAAO,OAAYA,EAAK,UAC5D,CACF,CAEO,SAASkE,EAAwBlE,EAA8B,CAC7D,OAAAmE,GAA6BnE,EAAM,EAAK,CACjD,CAEgB,SAAAmE,GACdnF,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,OAAQA,EAAM,OACd,WAAYA,EAAM,UACpB,CACF,CCyFO,SAASoF,GACdpF,EAC6B,CACtB,MAAA,EACT,CAEO,SAASqF,EAA2BrE,EAA+B,CACjE,OAAAsE,GAAgCtE,CAAW,CACpD,CAEgB,SAAAsE,GACdtE,EACAkB,EACoB,CACpB,OAAIlB,GAAQ,KACHA,EAEF,CACL,gBACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,oBACEA,EAAK,uBAA4B,KAC7B,OACAA,EAAK,sBACX,uBACEA,EAAK,0BAA+B,KAChC,OACAA,EAAK,yBACX,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,iBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,mBACEA,EAAK,qBAA0B,KAC3B,OACAA,EAAK,oBACX,+BACEA,EAAK,mCAAwC,KACzC,OACAA,EAAK,kCACX,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,cACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,iBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACzD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACzD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,YACpD,CACF,CAEO,SAASuE,EAAyBvE,EAA+B,CAC/D,OAAAwE,GAA8BxE,EAAM,EAAK,CAClD,CAEgB,SAAAwE,GACdxF,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,iBAAkBA,EAAM,gBACxB,UAAWA,EAAM,SACjB,aAAcA,EAAM,YACpB,sBAAuBA,EAAM,oBAC7B,yBAA0BA,EAAM,uBAChC,gBAAiBA,EAAM,eACvB,eAAgBA,EAAM,cACtB,mBAAoBA,EAAM,iBAC1B,UAAWA,EAAM,SACjB,oBAAqBA,EAAM,mBAC3B,kCAAmCA,EAAM,+BACzC,eAAgBA,EAAM,cACtB,OAAQA,EAAM,OACd,MAAOA,EAAM,MACb,gBAAiBA,EAAM,cACvB,mBAAoBA,EAAM,iBAC1B,WAAYA,EAAM,UAClB,aAAcA,EAAM,YACpB,UAAWA,EAAM,SACjB,WAAYA,EAAM,UAClB,UAAWA,EAAM,SACjB,SAAUA,EAAM,SAChB,gBAAiBA,EAAM,eACvB,aAAcA,EAAM,YACpB,aAAcA,EAAM,YACpB,YAAaA,EAAM,WACnB,aAAcA,EAAM,WACtB,CACF,CChNO,SAASyF,GACdzF,EAC6B,CACtB,MAAA,EACT,CAEO,SAAS0F,GAA2B1E,EAA+B,CACjE,OAAA2E,GAAgC3E,CAAW,CACpD,CAEgB,SAAA2E,GACd3E,EACAkB,EACoB,CACpB,OAAIlB,GAAQ,KACHA,EAEF,CACL,gBACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,oBACEA,EAAK,uBAA4B,KAC7B,OACAA,EAAK,sBACX,uBACEA,EAAK,0BAA+B,KAChC,OACAA,EAAK,yBACX,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,iBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,mBACEA,EAAK,qBAA0B,KAC3B,OACAA,EAAK,oBACX,+BACEA,EAAK,mCAAwC,KACzC,OACAA,EAAK,kCACX,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,cACtD,CACF,CAEO,SAAS4E,GAAyB5E,EAA+B,CAC/D,OAAA6E,GAA8B7E,EAAM,EAAK,CAClD,CAEgB,SAAA6E,GACd7F,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,iBAAkBA,EAAM,gBACxB,UAAWA,EAAM,SACjB,aAAcA,EAAM,YACpB,sBAAuBA,EAAM,oBAC7B,yBAA0BA,EAAM,uBAChC,gBAAiBA,EAAM,eACvB,eAAgBA,EAAM,cACtB,mBAAoBA,EAAM,iBAC1B,UAAWA,EAAM,SACjB,oBAAqBA,EAAM,mBAC3B,kCAAmCA,EAAM,+BACzC,eAAgBA,EAAM,aACxB,CACF,CCuBO,SAAS8F,GACd9F,EACqC,CAC9B,MAAA,EACT,CAEO,SAAS+F,GACd/E,EAC4B,CACrB,OAAAgF,GAAwChF,CAAW,CAC5D,CAEgB,SAAAgF,GACdhF,EACAkB,EAC4B,CAC5B,OAAIlB,GAAQ,KACHA,EAEF,CACL,gBACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,oBACEA,EAAK,uBAA4B,KAC7B,OACAA,EAAK,sBACX,uBACEA,EAAK,0BAA+B,KAChC,OACAA,EAAK,yBACX,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,iBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,mBACEA,EAAK,qBAA0B,KAC3B,OACAA,EAAK,oBACX,+BACEA,EAAK,mCAAwC,KACzC,OACAA,EAAK,kCACX,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,cACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,iBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACzD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACzD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,SACzD,CACF,CAEO,SAASiF,GACdjF,EAC4B,CACrB,OAAAkF,GAAsClF,EAAM,EAAK,CAC1D,CAEgB,SAAAkF,GACdlG,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,iBAAkBA,EAAM,gBACxB,UAAWA,EAAM,SACjB,aAAcA,EAAM,YACpB,sBAAuBA,EAAM,oBAC7B,yBAA0BA,EAAM,uBAChC,gBAAiBA,EAAM,eACvB,eAAgBA,EAAM,cACtB,mBAAoBA,EAAM,iBAC1B,UAAWA,EAAM,SACjB,oBAAqBA,EAAM,mBAC3B,kCAAmCA,EAAM,+BACzC,eAAgBA,EAAM,cACtB,OAAQA,EAAM,OACd,MAAOA,EAAM,MACb,gBAAiBA,EAAM,cACvB,mBAAoBA,EAAM,iBAC1B,WAAYA,EAAM,UAClB,aAAcA,EAAM,YACpB,UAAWA,EAAM,SACjB,WAAYA,EAAM,UAClB,UAAWA,EAAM,SACjB,SAAUA,EAAM,SAChB,gBAAiBA,EAAM,eACvB,aAAcA,EAAM,YACpB,aAAcA,EAAM,YACpB,YAAaA,EAAM,WACnB,aAAcA,EAAM,YACpB,YAAaA,EAAM,WACnB,UAAWA,EAAM,QACnB,CACF,CCpTO,MAAMmG,EAAiB,CAC5B,KAAM,OACN,MAAO,QACP,WAAY,YACd,EAIO,SAASC,GAAyBpG,EAAqB,CAC5D,UAAWT,KAAO4G,EAChB,GAAI,OAAO,UAAU,eAAe,KAAKA,EAAgB5G,CAAG,GACtD4G,EAAe5G,CAAkC,IAAMS,EAClD,MAAA,GAIN,MAAA,EACT,CAEO,SAASqG,GAAuBrF,EAA2B,CACzD,OAAAsF,GAA4BtF,CAAW,CAChD,CAEgB,SAAAsF,GACdtF,EACAkB,EACgB,CACT,OAAAlB,CACT,CAEO,SAASuF,GAAqBvG,EAAoC,CAChE,OAAAA,CACT,CAEgB,SAAAwG,GACdxG,EACAkC,EACgB,CACT,OAAAlC,CACT,CC+EO,SAASyG,GACdzG,EACmC,CAC5B,MAAA,EACT,CAEO,SAAS0G,GACd1F,EAC0B,CACnB,OAAA2F,GAAsC3F,CAAW,CAC1D,CAEgB,SAAA2F,GACd3F,EACAkB,EAC0B,CAC1B,OAAIlB,GAAQ,KACHA,EAEF,CACL,aACEA,EAAK,eAAoB,KAAO,OAAYA,EAAK,cACnD,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,iBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACzD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,OAAQA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACnD,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,oBACEA,EAAK,uBAA4B,KAC7B,OACAA,EAAK,sBACX,YACEA,EAAK,eAAoB,KAAO,OAAYA,EAAK,cACnD,eACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,KACEA,EAAK,MAAW,KAAO,OAAYqF,GAAuBrF,EAAK,IAAO,CAC1E,CACF,CAEO,SAAS4F,GACd5F,EAC0B,CACnB,OAAA6F,GAAoC7F,EAAM,EAAK,CACxD,CAEgB,SAAA6F,GACd7G,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,cAAeA,EAAM,aACrB,eAAgBA,EAAM,cACtB,gBAAiBA,EAAM,eACvB,aAAcA,EAAM,YACpB,gBAAiBA,EAAM,eACvB,aAAcA,EAAM,YACpB,UAAWA,EAAM,SACjB,mBAAoBA,EAAM,iBAC1B,WAAYA,EAAM,UAClB,UAAWA,EAAM,SACjB,QAASA,EAAM,OACf,gBAAiBA,EAAM,eACvB,eAAgBA,EAAM,cACtB,sBAAuBA,EAAM,oBAC7B,cAAeA,EAAM,YACrB,iBAAkBA,EAAM,eACxB,KAA2BA,EAAM,IACnC,CACF,CCdO,SAAS8G,GACd9G,EAC8B,CACvB,MAAA,EACT,CAEO,SAAS+G,GAA4B/F,EAAgC,CACnE,OAAAgG,GAAiChG,CAAW,CACrD,CAEgB,SAAAgG,GACdhG,EACAkB,EACqB,CACrB,OAAIlB,GAAQ,KACHA,EAEF,CACL,gBACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,oBACEA,EAAK,uBAA4B,KAC7B,OACAA,EAAK,sBACX,uBACEA,EAAK,0BAA+B,KAChC,OACAA,EAAK,yBACX,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,iBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,mBACEA,EAAK,qBAA0B,KAC3B,OACAA,EAAK,oBACX,+BACEA,EAAK,mCAAwC,KACzC,OACAA,EAAK,kCACX,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,cACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,iBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACzD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACzD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,MACpD,CACF,CAEO,SAASiG,GAA0BjG,EAAgC,CACjE,OAAAkG,GAA+BlG,EAAM,EAAK,CACnD,CAEgB,SAAAkG,GACdlH,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,iBAAkBA,EAAM,gBACxB,UAAWA,EAAM,SACjB,aAAcA,EAAM,YACpB,sBAAuBA,EAAM,oBAC7B,yBAA0BA,EAAM,uBAChC,gBAAiBA,EAAM,eACvB,eAAgBA,EAAM,cACtB,mBAAoBA,EAAM,iBAC1B,UAAWA,EAAM,SACjB,oBAAqBA,EAAM,mBAC3B,kCAAmCA,EAAM,+BACzC,eAAgBA,EAAM,cACtB,OAAQA,EAAM,OACd,MAAOA,EAAM,MACb,gBAAiBA,EAAM,cACvB,mBAAoBA,EAAM,iBAC1B,WAAYA,EAAM,UAClB,aAAcA,EAAM,YACpB,UAAWA,EAAM,SACjB,WAAYA,EAAM,UAClB,UAAWA,EAAM,SACjB,SAAUA,EAAM,SAChB,gBAAiBA,EAAM,eACvB,aAAcA,EAAM,YACpB,aAAcA,EAAM,YACpB,YAAaA,EAAM,WACnB,aAAcA,EAAM,YACpB,OAAQA,EAAM,OACd,OAAQA,EAAM,OACd,UAAWA,EAAM,SACjB,OAAQA,EAAM,MAChB,CACF,CChMO,MAAMmH,GAAuC,CAClD,KAAM,OACN,OAAQ,SACR,MAAO,QACP,SAAU,UACZ,EAOO,SAASC,GACdpH,EACgC,CACzB,MAAA,EACT,CAEO,SAASqH,GACdrG,EACuB,CAChB,OAAAsG,GAAmCtG,CAAW,CACvD,CAEgB,SAAAsG,GACdtG,EACAkB,EACuB,CACvB,OAAIlB,GAAQ,KACHA,EAEF,CACL,gBACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,oBACEA,EAAK,uBAA4B,KAC7B,OACAA,EAAK,sBACX,uBACEA,EAAK,0BAA+B,KAChC,OACAA,EAAK,yBACX,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,iBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,mBACEA,EAAK,qBAA0B,KAC3B,OACAA,EAAK,oBACX,+BACEA,EAAK,mCAAwC,KACzC,OACAA,EAAK,kCACX,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,aACEA,EAAK,eAAoB,KAAO,OAAYA,EAAK,cACnD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,iBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,cACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,iBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,kBACb,CACF,CAEO,SAASuG,GAA4BvG,EAAkC,CACrE,OAAAwG,GAAiCxG,EAAM,EAAK,CACrD,CAEgB,SAAAwG,GACdxH,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,iBAAkBA,EAAM,gBACxB,UAAWA,EAAM,SACjB,aAAcA,EAAM,YACpB,sBAAuBA,EAAM,oBAC7B,yBAA0BA,EAAM,uBAChC,gBAAiBA,EAAM,eACvB,eAAgBA,EAAM,cACtB,mBAAoBA,EAAM,iBAC1B,UAAWA,EAAM,SACjB,oBAAqBA,EAAM,mBAC3B,kCAAmCA,EAAM,+BACzC,eAAgBA,EAAM,cACtB,aAAcA,EAAM,YACpB,cAAeA,EAAM,aACrB,UAAWA,EAAM,SACjB,UAAWA,EAAM,SACjB,mBAAoBA,EAAM,iBAC1B,gBAAiBA,EAAM,cACvB,mBAAoBA,EAAM,gBAC5B,CACF,CChJO,MAAMyH,GAA+C,CAC1D,gBAAiB,oBACjB,SAAU,WACZ,EAOO,SAASC,GACd1H,EACwC,CACjC,MAAA,EACT,CAEO,SAAS2H,GACd3G,EAC+B,CACxB,OAAA4G,GAA2C5G,CAAW,CAC/D,CAEgB,SAAA4G,GACd5G,EACAkB,EAC+B,CAC/B,OAAIlB,GAAQ,KACHA,EAEF,CACL,gBACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,oBACEA,EAAK,uBAA4B,KAC7B,OACAA,EAAK,sBACX,uBACEA,EAAK,0BAA+B,KAChC,OACAA,EAAK,yBACX,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,iBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,mBACEA,EAAK,qBAA0B,KAC3B,OACAA,EAAK,oBACX,+BACEA,EAAK,mCAAwC,KACzC,OACAA,EAAK,kCACX,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,qBACEA,EAAK,yBAA8B,KAC/B,OACAA,EAAK,uBACb,CACF,CAEO,SAAS6G,GACd7G,EAC+B,CACxB,OAAA8G,GAAyC9G,EAAM,EAAK,CAC7D,CAEgB,SAAA8G,GACd9H,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,iBAAkBA,EAAM,gBACxB,UAAWA,EAAM,SACjB,aAAcA,EAAM,YACpB,sBAAuBA,EAAM,oBAC7B,yBAA0BA,EAAM,uBAChC,gBAAiBA,EAAM,eACvB,eAAgBA,EAAM,cACtB,mBAAoBA,EAAM,iBAC1B,UAAWA,EAAM,SACjB,oBAAqBA,EAAM,mBAC3B,kCAAmCA,EAAM,+BACzC,eAAgBA,EAAM,cACtB,aAAcA,EAAM,YACpB,UAAWA,EAAM,SACjB,wBAAyBA,EAAM,oBACjC,CACF,CC3BO,SAAS+H,GACd/H,EACmC,CAC5B,MAAA,EACT,CAEO,SAASgI,GACdhH,EAC0B,CACnB,OAAAiH,GAAsCjH,CAAW,CAC1D,CAEgB,SAAAiH,GACdjH,EACAkB,EAC0B,CAC1B,OAAIlB,GAAQ,KACHA,EAEF,CACL,gBACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,oBACEA,EAAK,uBAA4B,KAC7B,OACAA,EAAK,sBACX,uBACEA,EAAK,0BAA+B,KAChC,OACAA,EAAK,yBACX,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,iBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,mBACEA,EAAK,qBAA0B,KAC3B,OACAA,EAAK,oBACX,+BACEA,EAAK,mCAAwC,KACzC,OACAA,EAAK,kCACX,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,cACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,iBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACzD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACzD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,UAC3D,CACF,CAEO,SAASkH,GACdlH,EAC0B,CACnB,OAAAmH,GAAoCnH,EAAM,EAAK,CACxD,CAEgB,SAAAmH,GACdnI,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,iBAAkBA,EAAM,gBACxB,UAAWA,EAAM,SACjB,aAAcA,EAAM,YACpB,sBAAuBA,EAAM,oBAC7B,yBAA0BA,EAAM,uBAChC,gBAAiBA,EAAM,eACvB,eAAgBA,EAAM,cACtB,mBAAoBA,EAAM,iBAC1B,UAAWA,EAAM,SACjB,oBAAqBA,EAAM,mBAC3B,kCAAmCA,EAAM,+BACzC,eAAgBA,EAAM,cACtB,OAAQA,EAAM,OACd,MAAOA,EAAM,MACb,gBAAiBA,EAAM,cACvB,mBAAoBA,EAAM,iBAC1B,WAAYA,EAAM,UAClB,aAAcA,EAAM,YACpB,UAAWA,EAAM,SACjB,WAAYA,EAAM,UAClB,UAAWA,EAAM,SACjB,SAAUA,EAAM,SAChB,gBAAiBA,EAAM,eACvB,aAAcA,EAAM,YACpB,aAAcA,EAAM,YACpB,YAAaA,EAAM,WACnB,aAAcA,EAAM,YACpB,WAAYA,EAAM,SACpB,CACF,CC5LO,SAASoI,GACdpI,EACyB,CAClB,MAAA,EACT,CAEO,SAASqI,EAAuBrH,EAA2B,CACzD,OAAAsH,GAA4BtH,CAAW,CAChD,CAEgB,SAAAsH,GACdtH,EACAkB,EACgB,CAChB,OAAIlB,GAAQ,KACHA,EAEF,CACL,KACEA,EAAK,MAAW,KACZ,OACAqE,EAA2BrE,EAAK,IAAO,EAC7C,IACEA,EAAK,KAAU,KAAO,OAAYqE,EAA2BrE,EAAK,GAAM,EAC1E,KACEA,EAAK,MAAW,KACZ,OACAqE,EAA2BrE,EAAK,IAAO,EAC7C,MACEA,EAAK,OAAY,KACb,OACA+F,GAA4B/F,EAAK,KAAQ,EAC/C,QACEA,EAAK,SAAc,KACf,OACAqG,GAA8BrG,EAAK,OAAU,EACnD,aACEA,EAAK,eAAoB,KACrB,OACA+E,GAAmC/E,EAAK,aAAgB,EAC9D,WACEA,EAAK,YAAiB,KAClB,OACAgH,GAAiChH,EAAK,UAAa,EACzD,WACEA,EAAK,YAAiB,KAClB,OACA0F,GAAiC1F,EAAK,UAAa,EACzD,gBACEA,EAAK,mBAAwB,KACzB,OACA2G,GAAsC3G,EAAK,iBAAoB,CACvE,CACF,CAEO,SAASuH,EAAqBvH,EAA2B,CACvD,OAAAwH,GAA0BxH,EAAM,EAAK,CAC9C,CAEgB,SAAAwH,GACdxI,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,KAAMuF,EAAyBvF,EAAM,IAAO,EAC5C,IAAKuF,EAAyBvF,EAAM,GAAM,EAC1C,KAAMuF,EAAyBvF,EAAM,IAAO,EAC5C,MAAOiH,GAA0BjH,EAAM,KAAQ,EAC/C,QAASuH,GAA4BvH,EAAM,OAAU,EACrD,cAAeiG,GAAiCjG,EAAM,YAAe,EACrE,WAAYkI,GAA+BlI,EAAM,UAAa,EAC9D,WAAY4G,GAA+B5G,EAAM,UAAa,EAC9D,kBAAmB6H,GACjB7H,EAAM,eAAiB,CAE3B,CACF,CChMO,MAAMyI,EAAuB,CAClC,KAAM,OACN,IAAK,MACL,KAAM,OACN,MAAO,QACP,QAAS,UACT,UAAW,YACX,aAAc,gBACd,WAAY,aACZ,WAAY,aACZ,gBAAiB,mBACnB,EAIO,SAASC,GAA+B1I,EAAqB,CAClE,UAAWT,KAAOkJ,EAChB,GAAI,OAAO,UAAU,eAAe,KAAKA,EAAsBlJ,CAAG,GAE9DkJ,EAAqBlJ,CAAwC,IAAMS,EAE5D,MAAA,GAIN,MAAA,EACT,CAEO,SAAS2I,EAA6B3H,EAAiC,CACrE,OAAA4H,GAAkC5H,CAAW,CACtD,CAEgB,SAAA4H,GACd5H,EACAkB,EACsB,CACf,OAAAlB,CACT,CAEO,SAAS6H,GACd7I,EACK,CACE,OAAAA,CACT,CAEgB,SAAA8I,GACd9I,EACAkC,EACsB,CACf,OAAAlC,CACT,CClDO,MAAM+I,EAAe,CAC1B,GAAI,KACJ,GAAI,IACN,EAGO,SAASC,GAAuBhJ,EAAqB,CAC1D,UAAWT,KAAOwJ,EAChB,GAAI,OAAO,UAAU,eAAe,KAAKA,EAAcxJ,CAAG,GACpDwJ,EAAaxJ,CAAgC,IAAMS,EAC9C,MAAA,GAIN,MAAA,EACT,CAEO,SAASiJ,EAAqBjI,EAAyB,CACrD,OAAAkI,GAA0BlI,CAAW,CAC9C,CAEgB,SAAAkI,GACdlI,EACAkB,EACc,CACP,OAAAlB,CACT,CAEO,SAASmI,GAAmBnJ,EAAkC,CAC5D,OAAAA,CACT,CAEgB,SAAAoJ,GACdpJ,EACAkC,EACc,CACP,OAAAlC,CACT,CCrCO,MAAMqJ,EAAmB,CAC9B,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,YAAa,iBACb,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,QACN,KAAM,OACR,EAIO,SAASC,GAA2BtJ,EAAqB,CAC9D,UAAWT,KAAO8J,EAChB,GAAI,OAAO,UAAU,eAAe,KAAKA,EAAkB9J,CAAG,GACxD8J,EAAiB9J,CAAoC,IAAMS,EACtD,MAAA,GAIN,MAAA,EACT,CAEO,SAASuJ,EAAyBvI,EAA6B,CAC7D,OAAAwI,GAA8BxI,CAAW,CAClD,CAEgB,SAAAwI,GACdxI,EACAkB,EACkB,CACX,OAAAlB,CACT,CAEO,SAASyI,GAAuBzJ,EAAsC,CACpE,OAAAA,CACT,CAEgB,SAAA0J,GACd1J,EACAkC,EACkB,CACX,OAAAlC,CACT,CCjCO,MAAM2J,GAA2B,CACtC,MAAO,QACP,QAAS,UACT,IAAK,MACL,aAAc,eAChB,EAOO,SAASC,GACd5J,EAC2B,CAE3B,MADI,IAAE,QAASA,IAAUA,EAAM,MAAW,QACtC,EAAE,QAASA,IAAUA,EAAM,MAAW,OAE5C,CAEO,SAAS6J,EAAyB7I,EAA6B,CAC7D,OAAA8I,GAA8B9I,CAAW,CAClD,CAEgB,SAAA8I,GACd9I,EACAkB,EACkB,CAClB,OAAIlB,GAAQ,KACHA,EAEF,CACL,IAAKA,EAAK,IACV,IAAKA,EAAK,IACV,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,IAChD,CACF,CAEO,SAAS+I,EAAuB/I,EAA6B,CAC3D,OAAAgJ,GAA4BhJ,EAAM,EAAK,CAChD,CAEgB,SAAAgJ,GACdhK,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,IAAKA,EAAM,IACX,IAAKA,EAAM,IACX,KAAMA,EAAM,KACZ,KAAMA,EAAM,IACd,CACF,CCUO,MAAMiK,GAAqC,CAChD,KAAM,OACN,UAAW,YACX,aAAc,cAChB,EAOaC,GAAiC,CAC5C,SAAU,YACV,QAAS,WACT,WAAY,cACd,EAOO,SAASC,GACdnK,EAC2B,CAC3B,MAAI,IAAE,YAAaA,IAAUA,EAAM,UAAe,OAEpD,CAEO,SAASoK,GAAyBpJ,EAA6B,CAC7D,OAAAqJ,GAA8BrJ,CAAW,CAClD,CAEgB,SAAAqJ,GACdrJ,EACAkB,EACkB,CAClB,OAAIlB,GAAQ,KACHA,EAEF,CACL,MACEA,EAAK,OAAY,KAAO,OAAYiI,EAAqBjI,EAAK,KAAQ,EACxE,SACEA,EAAK,UAAe,KAChB,OACAuI,EAAyBvI,EAAK,QAAW,EAC/C,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,GAAIA,EAAK,IAAS,KAAO,OAAYA,EAAK,GAC1C,MACEA,EAAK,OAAY,KACb,OACCA,EAAK,MAAwB,IAAI6I,CAAwB,EAChE,gBACE7I,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,QAAS2H,EAA6B3H,EAAK,OAAU,EACrD,eACEA,EAAK,iBAAsB,KACvB,OACAqH,EAAuBrH,EAAK,eAAkB,EACpD,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,WAC7D,CACF,CAEO,SAASsJ,GAAuBtJ,EAA6B,CAC3D,OAAAuJ,GAA4BvJ,EAAM,EAAK,CAChD,CAEgB,SAAAuJ,GACdvK,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,MAA0BA,EAAM,MAChC,SAAiCA,EAAM,SACvC,gBAAiBA,EAAM,eACvB,GAAIA,EAAM,GACV,MACEA,EAAM,OAAY,KACd,OACCA,EAAM,MAAwB,IAAI+J,CAAsB,EAC/D,iBAAkB/J,EAAM,gBACxB,QAAoCA,EAAM,QAC1C,gBAAiBuI,EAAqBvI,EAAM,cAAiB,EAC7D,YAAaA,EAAM,UACrB,CACF,CC9JO,SAASwK,GAAsBxK,EAAqC,CAClE,MAAA,EACT,CAEO,SAASyK,GAAoBzJ,EAAwB,CACnD,OAAA0J,GAAyB1J,CAAW,CAC7C,CAEgB,SAAA0J,GACd1J,EACAkB,EACa,CACb,OAAIlB,GAAQ,KACHA,EAEF,CACL,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,QACxD,CACF,CAEO,SAAS2J,GAAkB3J,EAAwB,CACjD,OAAA4J,GAAuB5J,EAAM,EAAK,CAC3C,CAEgB,SAAA4J,GACd5K,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,SAAUA,EAAM,SAChB,MAAOA,EAAM,MACb,SAAUA,EAAM,SAChB,SAAUA,EAAM,QAClB,CACF,CCzEO,MAAM6K,EAAkB,CAC7B,cAAe,gBACf,cAAe,gBACf,YAAa,cACb,SAAU,WACV,WAAY,YACd,EAIO,SAASC,GAA0B9K,EAAqB,CAC7D,UAAWT,KAAOsL,EAChB,GAAI,OAAO,UAAU,eAAe,KAAKA,EAAiBtL,CAAG,GACvDsL,EAAgBtL,CAAmC,IAAMS,EACpD,MAAA,GAIN,MAAA,EACT,CAEO,SAAS+K,GAAwB/J,EAA4B,CAC3D,OAAAgK,GAA6BhK,CAAW,CACjD,CAEgB,SAAAgK,GACdhK,EACAkB,EACiB,CACV,OAAAlB,CACT,CAEO,SAASiK,GAAsBjL,EAAqC,CAClE,OAAAA,CACT,CAEgB,SAAAkL,GACdlL,EACAkC,EACiB,CACV,OAAAlC,CACT,CCvBO,MAAMmL,EAAiB,CAC5B,MAAO,QACP,QAAS,UACT,OAAQ,SACR,QAAS,UACT,YAAa,cACb,OAAQ,SACR,YAAa,cACb,OAAQ,SACR,SAAU,WACV,WAAY,aACZ,QAAS,UACT,cAAe,gBACf,WAAY,aACZ,OAAQ,SACR,WAAY,aACZ,UAAW,YACX,WAAY,aACZ,SAAU,WACV,OAAQ,SACR,UAAW,YACX,MAAO,OACT,EAIO,SAASC,GAAyBpL,EAAqB,CAC5D,UAAWT,KAAO4L,EAChB,GAAI,OAAO,UAAU,eAAe,KAAKA,EAAgB5L,CAAG,GACtD4L,EAAe5L,CAAkC,IAAMS,EAClD,MAAA,GAIN,MAAA,EACT,CAEO,SAASqL,GAAuBrK,EAA2B,CACzD,OAAAsK,GAA4BtK,CAAW,CAChD,CAEgB,SAAAsK,GACdtK,EACAkB,EACgB,CACT,OAAAlB,CACT,CAEO,SAASuK,GAAqBvL,EAAoC,CAChE,OAAAA,CACT,CAEgB,SAAAwL,GACdxL,EACAkC,EACgB,CACT,OAAAlC,CACT,CC4CO,SAASyL,GAAsBzL,EAAqC,CACzE,MAAO,SAAUA,CACnB,CAEO,SAAS0L,GAAoB1K,EAAwB,CACnD,OAAA2K,GAAyB3K,CAAW,CAC7C,CAEgB,SAAA2K,GACd3K,EACAkB,EACa,CACb,OAAIlB,GAAQ,KACHA,EAEF,CACL,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,cACEA,EAAK,iBAAiB,GAAK,KAAO,OAAYA,EAAK,iBAAiB,EACtE,cACEA,EAAK,iBAAiB,GAAK,KAAO,OAAYA,EAAK,iBAAiB,EACtE,mBACEA,EAAK,uBAAuB,GAAK,KAC7B,OACAA,EAAK,uBAAuB,EAClC,mBACEA,EAAK,uBAAuB,GAAK,KAC7B,OACAA,EAAK,uBAAuB,EAClC,mBACEA,EAAK,uBAAuB,GAAK,KAC7B,OACAA,EAAK,uBAAuB,EAClC,mBACEA,EAAK,uBAAuB,GAAK,KAC7B,OACAA,EAAK,uBAAuB,EAClC,kBACEA,EAAK,qBAAqB,GAAK,KAC3B,OACAA,EAAK,qBAAqB,EAChC,kBACEA,EAAK,qBAAqB,GAAK,KAC3B,OACAA,EAAK,qBAAqB,EAChC,qBACEA,EAAK,wBAAwB,GAAK,KAC9B,OACAA,EAAK,wBAAwB,EACnC,gBACEA,EAAK,kBAAkB,GAAK,KAAO,OAAYA,EAAK,kBAAkB,EACxE,YACEA,EAAK,cAAc,GAAK,KAAO,OAAYA,EAAK,cAAc,EAChE,OACEA,EAAK,QAAa,KACd,OACCA,EAAK,OAAyB,IAAIqK,EAAsB,EAC/D,QACErK,EAAK,SAAc,KACf,OACCA,EAAK,QAA0B,IAAI+J,EAAuB,EACjE,KAAM/J,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,IAChD,CACF,CAEO,SAAS4K,GAAkB5K,EAAwB,CACjD,OAAA6K,GAAuB7K,EAAM,EAAK,CAC3C,CAEgB,SAAA6K,GACd7L,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,KAAMA,EAAM,KACZ,kBAAmBA,EAAM,cACzB,kBAAmBA,EAAM,cACzB,wBAAyBA,EAAM,mBAC/B,wBAAyBA,EAAM,mBAC/B,wBAAyBA,EAAM,mBAC/B,wBAAyBA,EAAM,mBAC/B,sBAAuBA,EAAM,kBAC7B,sBAAuBA,EAAM,kBAC7B,yBAA0BA,EAAM,qBAChC,mBAAoBA,EAAM,gBAC1B,eAAgBA,EAAM,YACtB,OACEA,EAAM,QAAa,KACf,OACCA,EAAM,OAAyB,IAAIuL,EAAoB,EAC9D,QACEvL,EAAM,SAAc,KAChB,OACCA,EAAM,QAA0B,IAAIiL,EAAqB,EAChE,KAAMjL,EAAM,KACZ,KAAMA,EAAM,IACd,CACF,CC5DO,SAAS8L,GACd9L,EACgC,CACzB,MAAA,EACT,CAEO,SAAS+L,GACd/K,EACuB,CAChB,OAAAgL,GAAmChL,CAAW,CACvD,CAEgB,SAAAgL,GACdhL,EACAkB,EACuB,CACvB,OAAIlB,GAAQ,KACHA,EAEF,CACL,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,cACEA,EAAK,eAAoB,KAAO,OAAYA,EAAK,cACnD,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,WAAYA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WAC1D,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,cACEA,EAAK,iBAAiB,GAAK,KAAO,OAAYA,EAAK,iBAAiB,EACtE,cACEA,EAAK,iBAAiB,GAAK,KAAO,OAAYA,EAAK,iBAAiB,EACtE,mBACEA,EAAK,uBAAuB,GAAK,KAC7B,OACAA,EAAK,uBAAuB,EAClC,mBACEA,EAAK,uBAAuB,GAAK,KAC7B,OACAA,EAAK,uBAAuB,EAClC,mBACEA,EAAK,uBAAuB,GAAK,KAC7B,OACAA,EAAK,uBAAuB,EAClC,mBACEA,EAAK,uBAAuB,GAAK,KAC7B,OACAA,EAAK,uBAAuB,EAClC,kBACEA,EAAK,qBAAqB,GAAK,KAC3B,OACAA,EAAK,qBAAqB,EAChC,kBACEA,EAAK,qBAAqB,GAAK,KAC3B,OACAA,EAAK,qBAAqB,EAChC,qBACEA,EAAK,wBAAwB,GAAK,KAC9B,OACAA,EAAK,wBAAwB,EACnC,gBACEA,EAAK,kBAAkB,GAAK,KAAO,OAAYA,EAAK,kBAAkB,EACxE,YACEA,EAAK,cAAc,GAAK,KAAO,OAAYA,EAAK,cAAc,EAChE,OACEA,EAAK,QAAa,KACd,OACCA,EAAK,OAAyB,IAAIqK,EAAsB,EAC/D,QACErK,EAAK,SAAc,KACf,OACCA,EAAK,QAA0B,IAAI+J,EAAuB,EACjE,KAAM/J,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,IAChD,CACF,CAEO,SAASiL,GAA4BjL,EAAkC,CACrE,OAAAkL,GAAiClL,EAAM,EAAK,CACrD,CAEgB,SAAAkL,GACdlM,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,QAASA,EAAM,QACf,cAAeA,EAAM,cACrB,QAASA,EAAM,QACf,SAAUA,EAAM,SAChB,OAAQA,EAAM,OACd,OAAQA,EAAM,OACd,WAAYA,EAAM,WAClB,QAASA,EAAM,QACf,kBAAmBA,EAAM,cACzB,kBAAmBA,EAAM,cACzB,wBAAyBA,EAAM,mBAC/B,wBAAyBA,EAAM,mBAC/B,wBAAyBA,EAAM,mBAC/B,wBAAyBA,EAAM,mBAC/B,sBAAuBA,EAAM,kBAC7B,sBAAuBA,EAAM,kBAC7B,yBAA0BA,EAAM,qBAChC,mBAAoBA,EAAM,gBAC1B,eAAgBA,EAAM,YACtB,OACEA,EAAM,QAAa,KACf,OACCA,EAAM,OAAyB,IAAIuL,EAAoB,EAC9D,QACEvL,EAAM,SAAc,KAChB,OACCA,EAAM,QAA0B,IAAIiL,EAAqB,EAChE,KAAMjL,EAAM,KACZ,KAAMA,EAAM,IACd,CACF,CCxQO,SAASmM,GAAyBnL,EAA6B,CAC7D,OAAAoL,GAA8BpL,CAAW,CAClD,CAEgB,SAAAoL,GACdpL,EACAkB,EACkB,CAId,OAHAlB,GAAQ,MAGR,OAAOA,GAAS,SACXA,EAELyK,GAAsBzK,CAAI,EACrB2K,GAAyB3K,CAAU,EAGnCgL,GAAmChL,CAAU,CAIxD,CAEO,SAASqL,GAAuBrL,EAAgB,CAC9C,OAAAsL,GAA4BtL,EAAM,EAAK,CAChD,CAEgB,SAAAsL,GACdtM,EACAkC,EAA+B,GAC1B,CAID,OAHAlC,GAAS,MAGT,OAAOA,GAAU,SACZA,EAELyL,GAAsBzL,CAAK,EACtB4L,GAAkB5L,CAAoB,EAGtCiM,GAA4BjM,CAA8B,CAIrE,CCpCO,MAAMuM,GAA0B,CACrC,SAAU,aACV,mBAAoB,uBACtB,EAOO,SAASC,GAAsBxM,EAAqC,CAClE,MAAA,EACT,CAEO,SAASyM,GAAoBzL,EAAwB,CACnD,OAAA0L,GAAyB1L,CAAW,CAC7C,CAEgB,SAAA0L,GACd1L,EACAkB,EACa,CACb,OAAIlB,GAAQ,KACHA,EAEF,CACL,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,MACEA,EAAK,OAAY,KACb,OACAmL,GAAyBnL,EAAK,KAAQ,CAC9C,CACF,CAEO,SAAS2L,GAAkB3L,EAAwB,CACjD,OAAA4L,GAAuB5L,EAAM,EAAK,CAC3C,CAEgB,SAAA4L,GACd5M,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,SAAUA,EAAM,SAChB,MAAOqM,GAAuBrM,EAAM,KAAQ,CAC9C,CACF,CC9CO,SAAS6M,GACd7M,EAC0B,CACnB,MAAA,EACT,CAEO,SAAS8M,GAAwB9L,EAA4B,CAC3D,OAAA+L,GAA6B/L,CAAW,CACjD,CAEgB,SAAA+L,GACd/L,EACAkB,EACiB,CACjB,OAAIlB,GAAQ,KACHA,EAEF,CACL,YAAaA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC5D,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,MACpD,CACF,CAEO,SAASgM,GAAsBhM,EAA4B,CACzD,OAAAiM,GAA2BjM,EAAM,EAAK,CAC/C,CAEgB,SAAAiM,GACdjN,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,YAAaA,EAAM,YACnB,MAAOA,EAAM,MACb,SAAUA,EAAM,SAChB,OAAQA,EAAM,MAChB,CACF,CCvDO,MAAMkN,GAAuB,CAClC,MAAO,QACP,WAAY,aACZ,WAAY,aACZ,gBAAiB,kBACjB,QAAS,UACT,aAAc,cAChB,EAOO,SAASC,GAAuBnN,EAAsC,CAE3E,MADI,IAAE,SAAUA,IAAUA,EAAM,OAAY,QACxC,EAAE,gBAAiBA,IAAUA,EAAM,cAAmB,OAG5D,CAEO,SAASoN,GAAqBpM,EAAyB,CACrD,OAAAqM,GAA0BrM,CAAW,CAC9C,CAEgB,SAAAqM,GACdrM,EACAkB,EACc,CACd,OAAIlB,GAAQ,KACHA,EAEF,CACL,KAAMA,EAAK,KACX,YAAaA,EAAK,WACpB,CACF,CAEO,SAASsM,GAAmBtM,EAAyB,CACnD,OAAAuM,GAAwBvM,EAAM,EAAK,CAC5C,CAEgB,SAAAuM,GACdvN,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,KAAMA,EAAM,KACZ,YAAaA,EAAM,WACrB,CACF,CCzCO,SAASwN,GACdxN,EACgD,CACzC,MAAA,EACT,CAEO,SAASyN,GACdzM,EACuC,CAChC,OAAA0M,GAAmD1M,CAAW,CACvE,CAEgB,SAAA0M,GACd1M,EACAkB,EACuC,CACvC,OAAIlB,GAAQ,KACHA,EAEF,CACL,GAAGA,EACH,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,UAAWA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACxD,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,KAClD,CACF,CAEO,SAAS2M,GACd3M,EACuC,CAChC,OAAA4M,GAAiD5M,EAAM,EAAK,CACrE,CAEgB,SAAA4M,GACd5N,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,GAAGA,EACH,QAASA,EAAM,QACf,UAAWA,EAAM,UACjB,SAAUA,EAAM,SAChB,MAAOA,EAAM,KACf,CACF,CC3DO,SAAS6N,GACd7N,EAC6C,CACtC,MAAA,EACT,CAEO,SAAS8N,GACd9M,EACoC,CAC7B,OAAA+M,GAAgD/M,CAAW,CACpE,CAEgB,SAAA+M,GACd/M,EACAkB,EACoC,CACpC,OAAIlB,GAAQ,KACHA,EAEF,CACL,GAAGA,EACH,IACEA,EAAK,KAAU,KACX,OACAyM,GAA8CzM,EAAK,GAAM,CACjE,CACF,CAEO,SAASgN,GACdhN,EACoC,CAC7B,OAAAiN,GAA8CjN,EAAM,EAAK,CAClE,CAEgB,SAAAiN,GACdjO,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,GAAGA,EACH,IAAK2N,GAA4C3N,EAAM,GAAM,CAC/D,CACF,CC8IO,MAAMkO,GAAyC,CACpD,MAAO,QACP,SAAU,UACZ,EAOaC,GAA0C,CACrD,MAAO,QACP,aAAc,eACd,SAAU,UACZ,EAOO,SAASC,GACdpO,EACqC,CAC9B,MAAA,EACT,CAEO,SAASqO,GACdrN,EAC4B,CACrB,OAAAsN,GAAwCtN,CAAW,CAC5D,CAEgB,SAAAsN,GACdtN,EACAkB,EAC4B,CAC5B,OAAIlB,GAAQ,KACHA,EAEF,CACL,GAAGA,EACH,IAAKA,EAAK,KAAU,KAAO,OAAYA,EAAK,IAC5C,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,SACEA,EAAK,UAAe,KAChB,OACA8M,GAA2C9M,EAAK,QAAW,EACjE,UAAWA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACxD,aACEA,EAAK,eAAoB,KAAO,OAAYA,EAAK,cACnD,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,cACEA,EAAK,eAAoB,KAAO,OAAYA,EAAK,cACnD,iBACEA,EAAK,mBAAwB,KAAO,OAAYA,EAAK,kBACvD,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,WAAYA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WAC1D,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,YAAaA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC5D,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACzD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,QAASA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACrD,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACzD,WAAYA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WAC1D,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACzD,WAAYA,EAAK,YAAiB,KAAO,OAAYA,EAAK,UAC5D,CACF,CAEO,SAASuN,GACdvN,EAC4B,CACrB,OAAAwN,GAAsCxN,EAAM,EAAK,CAC1D,CAEgB,SAAAwN,GACdxO,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,GAAGA,EACH,IAAKA,EAAM,IACX,UAAWA,EAAM,SACjB,MAAOA,EAAM,MACb,MAAOA,EAAM,MACb,OAAQA,EAAM,OACd,KAAMA,EAAM,KACZ,SAAUA,EAAM,SAChB,SAAUgO,GAAyChO,EAAM,QAAW,EACpE,UAAWA,EAAM,UACjB,cAAeA,EAAM,aACrB,QAASA,EAAM,QACf,UAAWA,EAAM,SACjB,aAAcA,EAAM,YACpB,YAAaA,EAAM,WACnB,cAAeA,EAAM,cACrB,kBAAmBA,EAAM,iBACzB,QAASA,EAAM,QACf,YAAaA,EAAM,WACnB,WAAYA,EAAM,WAClB,OAAQA,EAAM,OACd,YAAaA,EAAM,YACnB,SAAUA,EAAM,SAChB,aAAcA,EAAM,YACpB,OAAQA,EAAM,OACd,WAAYA,EAAM,UAClB,OAAQA,EAAM,OACd,SAAUA,EAAM,QAChB,WAAYA,EAAM,UAClB,WAAYA,EAAM,WAClB,eAAgBA,EAAM,cACtB,WAAYA,EAAM,UAClB,WAAYA,EAAM,UACpB,CACF,CC3SO,MAAMyO,GAAkC,CAC7C,QAAS,SACX,EAOO,SAASC,GACd1O,EACkC,CAElC,MADI,IAAE,SAAUA,IAAUA,EAAM,OAAY,QACxC,EAAE,aAAcA,IAAUA,EAAM,WAAgB,OAEtD,CAEO,SAAS2O,GACd3N,EACyB,CAClB,OAAA4N,GAAqC5N,CAAW,CACzD,CAEgB,SAAA4N,GACd5N,EACAkB,EACyB,CACzB,OAAIlB,GAAQ,KACHA,EAEF,CACL,KAAMA,EAAK,KACX,SAAUoM,GAAqBpM,EAAK,QAAW,EAC/C,WACEA,EAAK,YAAiB,KAClB,OACAqN,GAAmCrN,EAAK,UAAa,EAC3D,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,IAChD,CACF,CAEO,SAAS6N,GACd7N,EACyB,CAClB,OAAA8N,GAAmC9N,EAAM,EAAK,CACvD,CAEgB,SAAA8N,GACd9O,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,KAAMA,EAAM,KACZ,SAAUsN,GAAmBtN,EAAM,QAAW,EAC9C,WAAYuO,GAAiCvO,EAAM,UAAa,EAChE,KAAMA,EAAM,IACd,CACF,CCnEO,SAAS+O,GACd/O,EAC0B,CAE1B,MADI,IAAE,cAAeA,IAAUA,EAAM,YAAiB,QAClD,EAAE,aAAcA,IAAUA,EAAM,WAAgB,OAEtD,CAEO,SAASgP,EAAwBhO,EAA4B,CAC3D,OAAAiO,GAA6BjO,CAAW,CACjD,CAEgB,SAAAiO,GACdjO,EACAkB,EACiB,CACjB,OAAIlB,GAAQ,KACHA,EAEF,CACL,UAAW8L,GAAwB9L,EAAK,SAAY,EACpD,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,SAAWA,EAAK,SAA2B,IACzC2N,EAAA,CAEJ,CACF,CAEO,SAASO,GAAsBlO,EAA4B,CACzD,OAAAmO,GAA2BnO,EAAM,EAAK,CAC/C,CAEgB,SAAAmO,GACdnP,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,UAAWgN,GAAsBhN,EAAM,SAAY,EACnD,KAAMA,EAAM,KACZ,SAAWA,EAAM,SAA2B,IAC1C6O,EAAA,CAEJ,CACF,CCtDO,SAASO,GACdpP,EAC6B,CAC7B,MAAI,IAAE,WAAYA,IAAUA,EAAM,SAAc,OAElD,CAEO,SAASqP,GAA2BrO,EAA+B,CACjE,OAAAsO,GAAgCtO,CAAW,CACpD,CAEgB,SAAAsO,GACdtO,EACAkB,EACoB,CACpB,OAAIlB,GAAQ,KACHA,EAEF,CACL,OAAQA,EAAK,OACb,SACEA,EAAK,UAAe,KAChB,OACAgO,EAAwBhO,EAAK,QAAW,EAC9C,IAAKA,EAAK,KAAU,KAAO,OAAYA,EAAK,GAC9C,CACF,CAEO,SAASuO,GAAyBvO,EAA+B,CAC/D,OAAAwO,GAA8BxO,EAAM,EAAK,CAClD,CAEgB,SAAAwO,GACdxP,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,OAAQA,EAAM,OACd,SAAUkP,GAAsBlP,EAAM,QAAW,EACjD,IAAKA,EAAM,GACb,CACF,CCrDO,SAASyP,GACdzP,EAC8B,CAE9B,MADI,IAAE,QAASA,IAAUA,EAAM,MAAW,QACtC,EAAE,SAAUA,IAAUA,EAAM,OAAY,OAE9C,CAEO,SAAS0P,EAA4B1O,EAAgC,CACnE,OAAA2O,GAAiC3O,CAAW,CACrD,CAEgB,SAAA2O,GACd3O,EACAkB,EACqB,CACrB,OAAIlB,GAAQ,KACHA,EAEF,CACL,aACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,IAAKA,EAAK,IACV,KAAMA,EAAK,IACb,CACF,CAEO,SAAS4O,EAA0B5O,EAAgC,CACjE,OAAA6O,GAA+B7O,EAAM,EAAK,CACnD,CAEgB,SAAA6O,GACd7P,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,aAAcA,EAAM,aACpB,IAAKA,EAAM,IACX,KAAMA,EAAM,IACd,CACF,CCwBO,SAAS8P,GAAqB9P,EAAoC,CAChE,MAAA,EACT,CAEO,SAAS+P,GAAmB/O,EAAuB,CACjD,OAAAgP,GAAwBhP,CAAW,CAC5C,CAEgB,SAAAgP,GACdhP,EACAkB,EACY,CACZ,OAAIlB,GAAQ,KACHA,EAEF,CACL,QACEA,EAAK,SAAc,KACf,OACA0O,EAA4B1O,EAAK,OAAU,EACjD,UACEA,EAAK,WAAgB,KACjB,OACA0O,EAA4B1O,EAAK,SAAY,EACnD,QACEA,EAAK,SAAc,KACf,OACA0O,EAA4B1O,EAAK,OAAU,EACjD,OACEA,EAAK,QAAa,KACd,OACA0O,EAA4B1O,EAAK,MAAS,EAChD,WACEA,EAAK,YAAiB,KAClB,OACA0O,EAA4B1O,EAAK,UAAa,EACpD,WACEA,EAAK,YAAiB,KAClB,OACA0O,EAA4B1O,EAAK,UAAa,EACpD,SACEA,EAAK,UAAe,KAChB,OACA0O,EAA4B1O,EAAK,QAAW,EAClD,YACEA,EAAK,aAAkB,KACnB,OACA0O,EAA4B1O,EAAK,WAAc,EACrD,YACEA,EAAK,aAAkB,KACnB,OACA0O,EAA4B1O,EAAK,WAAc,EACrD,WACEA,EAAK,YAAiB,KAClB,OACA0O,EAA4B1O,EAAK,UAAa,EACpD,cACEA,EAAK,eAAoB,KACrB,OACA0O,EAA4B1O,EAAK,aAAgB,EACvD,MACEA,EAAK,OAAY,KACb,OACA0O,EAA4B1O,EAAK,KAAQ,EAC/C,OACEA,EAAK,QAAa,KACd,OACA0O,EAA4B1O,EAAK,MAAS,CAClD,CACF,CAEO,SAASiP,GAAiBjP,EAAuB,CAC/C,OAAAkP,GAAsBlP,EAAM,EAAK,CAC1C,CAEgB,SAAAkP,GACdlQ,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,QAAS4P,EAA0B5P,EAAM,OAAU,EACnD,UAAW4P,EAA0B5P,EAAM,SAAY,EACvD,QAAS4P,EAA0B5P,EAAM,OAAU,EACnD,OAAQ4P,EAA0B5P,EAAM,MAAS,EACjD,WAAY4P,EAA0B5P,EAAM,UAAa,EACzD,WAAY4P,EAA0B5P,EAAM,UAAa,EACzD,SAAU4P,EAA0B5P,EAAM,QAAW,EACrD,YAAa4P,EAA0B5P,EAAM,WAAc,EAC3D,YAAa4P,EAA0B5P,EAAM,WAAc,EAC3D,WAAY4P,EAA0B5P,EAAM,UAAa,EACzD,cAAe4P,EAA0B5P,EAAM,aAAgB,EAC/D,MAAO4P,EAA0B5P,EAAM,KAAQ,EAC/C,OAAQ4P,EAA0B5P,EAAM,MAAS,CACnD,CACF,CCzJO,SAASmQ,GAAkBnQ,EAAiC,CACjE,MAAI,IAAE,gBAAiBA,IAAUA,EAAM,cAAmB,OAG5D,CAEO,SAASoQ,GAAgBpP,EAAoB,CAC3C,OAAAqP,GAAqBrP,CAAW,CACzC,CAEgB,SAAAqP,GACdrP,EACAkB,EACS,CACT,OAAIlB,GAAQ,KACHA,EAEF,CACL,UAAWA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC1D,UAAWA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC1D,YAAa+O,GAAmB/O,EAAK,WAAc,CACrD,CACF,CAEO,SAASsP,GAActP,EAAoB,CACzC,OAAAuP,GAAmBvP,EAAM,EAAK,CACvC,CAEgB,SAAAuP,GACdvQ,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,YAAaA,EAAM,UACnB,YAAaA,EAAM,UACnB,YAAaiQ,GAAiBjQ,EAAM,WAAc,CACpD,CACF,CCtDO,SAASwQ,GAAkBxQ,EAAiC,CAC1D,MAAA,EACT,CAEO,SAASyQ,GAAgBzP,EAAoB,CAC3C,OAAA0P,GAAqB1P,CAAW,CACzC,CAEgB,SAAA0P,GACd1P,EACAkB,EACS,CACT,OAAIlB,GAAQ,KACHA,EAEF,CACL,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,KAClD,CACF,CAEO,SAAS2P,GAAc3P,EAAoB,CACzC,OAAA4P,GAAmB5P,EAAM,EAAK,CACvC,CAEgB,SAAA4P,GACd5Q,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,KAAMA,EAAM,KACZ,SAAUA,EAAM,SAChB,MAAOA,EAAM,KACf,CACF,CC7CO,SAAS6Q,GAAqB7Q,EAAoC,CAEvE,MADI,IAAE,QAASA,IAAUA,EAAM,MAAW,QACtC,EAAE,QAASA,IAAUA,EAAM,MAAW,OAE5C,CAEO,SAAS8Q,EAAmB9P,EAAuB,CACjD,OAAA+P,GAAwB/P,CAAW,CAC5C,CAEgB,SAAA+P,GACd/P,EACAkB,EACY,CACZ,OAAIlB,GAAQ,KACHA,EAEF,CACL,IAAKA,EAAK,IACV,IAAKA,EAAK,GACZ,CACF,CAEO,SAASgQ,EAAiBhQ,EAAuB,CAC/C,OAAAiQ,GAAsBjQ,EAAM,EAAK,CAC1C,CAEgB,SAAAiQ,GACdjR,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,IAAKA,EAAM,IACX,IAAKA,EAAM,GACb,CACF,CC1DO,MAAMkR,EAAe,CAC1B,KAAM,OACN,IAAK,MACL,KAAM,OACN,MAAO,QACP,QAAS,UACT,UAAW,YACX,aAAc,gBACd,WAAY,aACZ,WAAY,aACZ,gBAAiB,mBACnB,EAGO,SAASC,GAAuBnR,EAAqB,CAC1D,UAAWT,KAAO2R,EAChB,GAAI,OAAO,UAAU,eAAe,KAAKA,EAAc3R,CAAG,GACpD2R,EAAa3R,CAAgC,IAAMS,EAC9C,MAAA,GAIN,MAAA,EACT,CAEO,SAASoR,GAAqBpQ,EAAyB,CACrD,OAAAqQ,GAA0BrQ,CAAW,CAC9C,CAEgB,SAAAqQ,GACdrQ,EACAkB,EACc,CACP,OAAAlB,CACT,CAEO,SAASsQ,GAAmBtR,EAAkC,CAC5D,OAAAA,CACT,CAEgB,SAAAuR,GACdvR,EACAkC,EACc,CACP,OAAAlC,CACT,CCLO,MAAMwR,GAAsC,CACjD,KAAM,OACN,UAAW,YACX,aAAc,cAChB,EAOO,SAASC,GACdzR,EAC4B,CACrB,MAAA,EACT,CAEO,SAAS0R,GAA0B1Q,EAA8B,CAC/D,OAAA2Q,GAA+B3Q,CAAW,CACnD,CAEgB,SAAA2Q,GACd3Q,EACAkB,EACmB,CACnB,OAAIlB,GAAQ,KACHA,EAEF,CACL,MACEA,EAAK,OAAY,KAAO,OAAYiI,EAAqBjI,EAAK,KAAQ,EACxE,SACEA,EAAK,UAAe,KAChB,OACAuI,EAAyBvI,EAAK,QAAW,EAC/C,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,eACvD,CACF,CAEO,SAAS4Q,GAAwB5Q,EAA8B,CAC7D,OAAA6Q,GAA6B7Q,EAAM,EAAK,CACjD,CAEgB,SAAA6Q,GACd7R,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,MAA0BA,EAAM,MAChC,SAAiCA,EAAM,SACvC,gBAAiBA,EAAM,cACzB,CACF,CClEO,SAAS8R,GAAmB9R,EAAkC,CAC5D,MAAA,EACT,CAEO,SAAS+R,GAAiB/Q,EAAqB,CAC7C,OAAAgR,GAAsBhR,CAAW,CAC1C,CAEgB,SAAAgR,GACdhR,EACAkB,EACU,CACV,OAAIlB,GAAQ,KACHA,EAEF,CACL,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,SACzD,CACF,CAEO,SAASiR,GAAejR,EAAqB,CAC3C,OAAAkR,GAAoBlR,EAAM,EAAK,CACxC,CAEgB,SAAAkR,GACdlS,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,YAAaA,EAAM,WACnB,YAAaA,EAAM,WACnB,YAAaA,EAAM,WACnB,UAAWA,EAAM,QACnB,CACF,CCzEO,MAAMmS,EAAU,CACrB,KAAM,OACN,KAAM,OACN,YAAa,eACb,MAAO,QACP,SAAU,WACV,MAAO,QACP,aAAc,gBACd,gBAAiB,mBACjB,aAAc,gBACd,SAAU,WACV,aAAc,gBACd,YAAa,eACb,SAAU,WACV,aAAc,gBACd,SAAU,WACV,QAAS,UACT,MAAO,QACP,KAAM,OACN,WAAY,aACZ,mBAAoB,sBACpB,UAAW,YACX,SAAU,YACV,YAAa,eACb,MAAO,QACP,MAAO,QACP,UAAW,aACX,KAAM,OACN,IAAK,MACL,iBAAkB,oBAClB,mBAAoB,sBACpB,kBAAmB,oBACrB,EAGO,SAASC,GAAkBpS,EAAqB,CACrD,UAAWT,KAAO4S,EAChB,GAAI,OAAO,UAAU,eAAe,KAAKA,EAAS5S,CAAG,GAC/C4S,EAAQ5S,CAA2B,IAAMS,EACpC,MAAA,GAIN,MAAA,EACT,CAEO,SAASqS,GAAgBrR,EAAoB,CAC3C,OAAAsR,GAAqBtR,CAAW,CACzC,CAEgB,SAAAsR,GACdtR,EACAkB,EACS,CACF,OAAAlB,CACT,CAEO,SAASuR,GAAcvS,EAA6B,CAClD,OAAAA,CACT,CAEgB,SAAAwS,GACdxS,EACAkC,EACS,CACF,OAAAlC,CACT,CClEO,MAAMyS,EAAiB,CAC5B,QAAS,UACT,SAAU,WACV,KAAM,MACR,EAIO,SAASC,GAAyB1S,EAAqB,CAC5D,UAAWT,KAAOkT,EAChB,GAAI,OAAO,UAAU,eAAe,KAAKA,EAAgBlT,CAAG,GACtDkT,EAAelT,CAAkC,IAAMS,EAClD,MAAA,GAIN,MAAA,EACT,CAEO,SAAS2S,EAAuB3R,EAA2B,CACzD,OAAA4R,GAA4B5R,CAAW,CAChD,CAEgB,SAAA4R,GACd5R,EACAkB,EACgB,CACT,OAAAlB,CACT,CAEO,SAAS6R,GAAqB7S,EAAoC,CAChE,OAAAA,CACT,CAEgB,SAAA8S,GACd9S,EACAkC,EACgB,CACT,OAAAlC,CACT,CCvCO,MAAM+S,EAAY,CACvB,SAAU,WACV,MAAO,QACP,QAAS,UACT,UAAW,YACX,SAAU,WACV,aAAc,eACd,YAAa,cACb,aAAc,eAChB,EAGO,SAASC,GAAoBhT,EAAqB,CACvD,UAAWT,KAAOwT,EAChB,GAAI,OAAO,UAAU,eAAe,KAAKA,EAAWxT,CAAG,GACjDwT,EAAUxT,CAA6B,IAAMS,EACxC,MAAA,GAIN,MAAA,EACT,CAEO,SAASiT,EAAkBjS,EAAsB,CAC/C,OAAAkS,GAAuBlS,CAAW,CAC3C,CAEgB,SAAAkS,GACdlS,EACAkB,EACW,CACJ,OAAAlB,CACT,CAEO,SAASmS,GAAgBnT,EAA+B,CACtD,OAAAA,CACT,CAEgB,SAAAoT,GACdpT,EACAkC,EACW,CACJ,OAAAlC,CACT,CCmCO,SAASqT,GACdrT,EAC2B,CACpB,MAAA,EACT,CAEO,SAASsT,GAAyBtS,EAA6B,CAC7D,OAAAuS,GAA8BvS,CAAW,CAClD,CAEgB,SAAAuS,GACdvS,EACAkB,EACkB,CAClB,OAAIlB,GAAQ,KACHA,EAEF,CACL,aACEA,EAAK,eAAoB,KAAO,OAAYA,EAAK,cACnD,wBACEA,EAAK,4BAAiC,KAClC,OACAA,EAAK,2BACX,sBACEA,EAAK,0BAA+B,KAChC,OACAA,EAAK,yBACX,aACEA,EAAK,cAAmB,KACpB,OACA2R,EAAuB3R,EAAK,YAAe,EACjD,YACEA,EAAK,aAAkB,KACnB,OACA2R,EAAuB3R,EAAK,WAAc,EAChD,YACEA,EAAK,aAAkB,KACnB,OACA2R,EAAuB3R,EAAK,WAAc,EAChD,IAAKA,EAAK,KAAU,KAAO,OAAYqR,GAAgBrR,EAAK,GAAM,EAClE,UACEA,EAAK,YAAiB,KAClB,OACAiS,EAAkBjS,EAAK,UAAa,CAC5C,CACF,CAEO,SAASwS,GAAuBxS,EAA6B,CAC3D,OAAAyS,GAA4BzS,EAAM,EAAK,CAChD,CAEgB,SAAAyS,GACdzT,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,cAAeA,EAAM,aACrB,2BAA4BA,EAAM,wBAClC,yBAA0BA,EAAM,sBAChC,aAAmCA,EAAM,aACzC,YAAkCA,EAAM,YACxC,YAAkCA,EAAM,YACxC,IAAmBA,EAAM,IACzB,WAA4BA,EAAM,SACpC,CACF,CCpJO,MAAM0T,EAAW,CACtB,mBAAoB,sBACpB,KAAM,OACN,QAAS,UACT,UAAW,aACX,oBAAqB,yBACrB,UAAW,aACX,QAAS,UACT,iBAAkB,qBAClB,cAAe,gBACjB,EAGO,SAASC,GAAmB3T,EAAqB,CACtD,UAAWT,KAAOmU,EAChB,GAAI,OAAO,UAAU,eAAe,KAAKA,EAAUnU,CAAG,GAChDmU,EAASnU,CAA4B,IAAMS,EACtC,MAAA,GAIN,MAAA,EACT,CAEO,SAAS4T,GAAiB5S,EAAqB,CAC7C,OAAA6S,GAAsB7S,CAAW,CAC1C,CAEgB,SAAA6S,GACd7S,EACAkB,EACU,CACH,OAAAlB,CACT,CAEO,SAAS8S,GAAe9T,EAA8B,CACpD,OAAAA,CACT,CAEgB,SAAA+T,GACd/T,EACAkC,EACU,CACH,OAAAlC,CACT,CCeO,SAASgU,GAAkBhU,EAAiC,CAC1D,MAAA,EACT,CAEO,SAASiU,GAAgBjT,EAAoB,CAC3C,OAAAkT,GAAqBlT,CAAW,CACzC,CAEgB,SAAAkT,GACdlT,EACAkB,EACS,CACT,OAAIlB,GAAQ,KACHA,EAEF,CACL,kBACEA,EAAK,oBAAyB,KAC1B,OACCA,EAAK,mBAAqC,IACzCsS,EACF,EACN,YACEtS,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,KAAMA,EAAK,MAAW,KAAO,OAAY4S,GAAiB5S,EAAK,IAAO,EACtE,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,SACzD,CACF,CAEO,SAASmT,GAAcnT,EAAoB,CACzC,OAAAoT,GAAmBpT,EAAM,EAAK,CACvC,CAEgB,SAAAoT,GACdpU,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,mBACEA,EAAM,mBAAwB,KAC1B,OACCA,EAAM,kBAAoC,IACzCwT,EACF,EACN,aAAcxT,EAAM,YACpB,YAAaA,EAAM,WACnB,KAAqBA,EAAM,KAC3B,KAAMA,EAAM,KACZ,UAAWA,EAAM,QACnB,CACF,CC3EO,MAAMqU,GAAsC,CACjD,KAAM,OACN,KAAM,MACR,EAOO,SAASC,GACdtU,EACoC,CAC7B,MAAA,EACT,CAEO,SAASuU,GACdvT,EAC2B,CACpB,OAAAwT,GAAuCxT,CAAW,CAC3D,CAEgB,SAAAwT,GACdxT,EACAkB,EAC2B,CAC3B,OAAIlB,GAAQ,KACHA,EAEF,CACL,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,mBACEA,EAAK,qBAA0B,KAC3B,OACAA,EAAK,oBACX,kBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,QACEA,EAAK,SAAc,KACf,OACAgE,EAA0BhE,EAAK,OAAU,CACjD,CACF,CAEO,SAASyT,GACdzT,EAC2B,CACpB,OAAA0T,GAAqC1T,EAAM,EAAK,CACzD,CAEgB,SAAA0T,GACd1U,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,OAAQA,EAAM,OACd,oBAAqBA,EAAM,mBAC3B,mBAAoBA,EAAM,kBAC1B,QAASkF,EAAwBlF,EAAM,OAAU,CACnD,CACF,CCtFO,SAAS2U,GAAgB3U,EAA+B,CAG7D,MAFI,IAAE,gBAAiBA,IAAUA,EAAM,cAAmB,QAEtD,EAAE,SAAUA,IAAUA,EAAM,OAAY,OAE9C,CAEO,SAAS4U,GAAc5T,EAAkB,CACvC,OAAA6T,GAAmB7T,CAAW,CACvC,CAEgB,SAAA6T,GACd7T,EACAkB,EACO,CACP,OAAIlB,GAAQ,KACHA,EAEF,CACL,YAAaA,EAAK,YAClB,KAAMA,EAAK,IACb,CACF,CAEO,SAAS8T,GAAY9T,EAAkB,CACrC,OAAA+T,GAAiB/T,EAAM,EAAK,CACrC,CAEgB,SAAA+T,GACd/U,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,YAAaA,EAAM,YACnB,KAAMA,EAAM,IACd,CACF,CC5DO,MAAMgV,EAAY,CACvB,MAAO,QACP,aAAc,eACd,SAAU,UACZ,EAGO,SAASC,GAAoBjV,EAAqB,CACvD,UAAWT,KAAOyV,EAChB,GAAI,OAAO,UAAU,eAAe,KAAKA,EAAWzV,CAAG,GACjDyV,EAAUzV,CAA6B,IAAMS,EACxC,MAAA,GAIN,MAAA,EACT,CAEO,SAASkV,GAAkBlU,EAAsB,CAC/C,OAAAmU,GAAuBnU,CAAW,CAC3C,CAEgB,SAAAmU,GACdnU,EACAkB,EACW,CACJ,OAAAlB,CACT,CAEO,SAASoU,GAAgBpV,EAA+B,CACtD,OAAAA,CACT,CAEgB,SAAAqV,GACdrV,EACAkC,EACW,CACJ,OAAAlC,CACT,CCZO,SAASsV,GACdtV,EAC4B,CAE5B,MADI,IAAE,WAAYA,IAAUA,EAAM,SAAc,QAC5C,EAAE,aAAcA,IAAUA,EAAM,WAAgB,OAEtD,CAEO,SAASuV,GAA0BvU,EAA8B,CAC/D,OAAAwU,GAA+BxU,CAAW,CACnD,CAEgB,SAAAwU,GACdxU,EACAkB,EACmB,CACnB,OAAIlB,GAAQ,KACHA,EAEF,CACL,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,OAAQA,EAAK,OACb,SAAUA,EAAK,SACjB,CACF,CAEO,SAASyU,GAAwBzU,EAA8B,CAC7D,OAAA0U,GAA6B1U,EAAM,EAAK,CACjD,CAEgB,SAAA0U,GACd1V,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,UAAWA,EAAM,SACjB,OAAQA,EAAM,OACd,UAAWA,EAAM,QACnB,CACF,CCrEO,MAAM2V,EAAY,CACvB,MAAO,QACP,SAAU,UACZ,EAGO,SAASC,GAAoB5V,EAAqB,CACvD,UAAWT,KAAOoW,EAChB,GAAI,OAAO,UAAU,eAAe,KAAKA,EAAWpW,CAAG,GACjDoW,EAAUpW,CAA6B,IAAMS,EACxC,MAAA,GAIN,MAAA,EACT,CAEO,SAAS6V,GAAkB7U,EAAsB,CAC/C,OAAA8U,GAAuB9U,CAAW,CAC3C,CAEgB,SAAA8U,GACd9U,EACAkB,EACW,CACJ,OAAAlB,CACT,CAEO,SAAS+U,GAAgB/V,EAA+B,CACtD,OAAAA,CACT,CAEgB,SAAAgW,GACdhW,EACAkC,EACW,CACJ,OAAAlC,CACT,CCiHO,SAASiW,GACdjW,EACwC,CAIxC,MAHI,IAAE,QAASA,IAAUA,EAAM,MAAW,QACtC,EAAE,UAAWA,IAAUA,EAAM,QAAa,QAC1C,EAAE,SAAUA,IAAUA,EAAM,OAAY,QACxC,EAAE,cAAeA,IAAUA,EAAM,YAAiB,OAExD,CAEO,SAASkW,GACdlV,EAC+B,CACxB,OAAAmV,GAA2CnV,CAAW,CAC/D,CAEgB,SAAAmV,GACdnV,EACAkB,EAC+B,CAC/B,OAAIlB,GAAQ,KACHA,EAEF,CACL,SACEA,EAAK,UAAe,KAChB,OACA0C,GAAmB1C,EAAK,QAAW,EACzC,kBACEA,EAAK,oBAAyB,KAC1B,OACA+C,GAA4B/C,EAAK,kBAAqB,EAC5D,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,WAAYA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WAC1D,QACEA,EAAK,SAAc,KAAO,OAAYoP,GAAgBpP,EAAK,OAAU,EACvE,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,qBACEA,EAAK,wBAA6B,KAC9B,OACAA,EAAK,uBACX,sBACEA,EAAK,yBAA8B,KAC/B,OACAA,EAAK,wBACX,IAAKA,EAAK,IACV,MAAOA,EAAK,MACZ,UACEA,EAAK,YAAiB,KAClB,OACAkU,GAAkBlU,EAAK,UAAa,EAC1C,KAAMA,EAAK,KACX,UAAW6U,GAAkB7U,EAAK,SAAY,EAC9C,QACEA,EAAK,SAAc,KACf,OACCA,EAAK,QAA0B,IAAIuU,EAAyB,CACrE,CACF,CAEO,SAASa,GACdpV,EAC+B,CACxB,OAAAqV,GAAyCrV,EAAM,EAAK,CAC7D,CAEgB,SAAAqV,GACdrW,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,SAAU4D,GAAiB5D,EAAM,QAAW,EAC5C,mBAAoBiE,GAA0BjE,EAAM,iBAAoB,EACxE,gBAAiBA,EAAM,eACvB,WAAYA,EAAM,WAClB,QAASsQ,GAActQ,EAAM,OAAU,EACvC,SAAUA,EAAM,SAChB,uBAAwBA,EAAM,qBAC9B,wBAAyBA,EAAM,sBAC/B,IAAKA,EAAM,IACX,MAAOA,EAAM,MACb,WAA4BA,EAAM,UAClC,KAAMA,EAAM,KACZ,UAA2BA,EAAM,UACjC,QACEA,EAAM,SAAc,KAChB,OACCA,EAAM,QAA0B,IAAIyV,EAAuB,CACpE,CACF,CCrMO,SAASa,GACdtW,EAC8B,CAC9B,MAAI,IAAE,eAAgBA,IAAUA,EAAM,aAAkB,OAG1D,CAEO,SAASuW,GAA4BvV,EAAgC,CACnE,OAAAwV,GAAiCxV,CAAW,CACrD,CAEgB,SAAAwV,GACdxV,EACAkB,EACqB,CACrB,OAAIlB,GAAQ,KACHA,EAEF,CACL,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,SACEA,EAAK,UAAe,KAAO,OAAY4T,GAAc5T,EAAK,QAAW,EACvE,WAAYkV,GAAsClV,EAAK,UAAa,EACpE,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,IAChD,CACF,CAEO,SAASyV,GAA0BzV,EAAgC,CACjE,OAAA0V,GAA+B1V,EAAM,EAAK,CACnD,CAEgB,SAAA0V,GACd1W,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,KAAMA,EAAM,KACZ,SAAU8U,GAAY9U,EAAM,QAAW,EACvC,WAAYoW,GAAoCpW,EAAM,UAAa,EACnE,KAAMA,EAAM,IACd,CACF,CCvDO,SAAS2W,GAAwB3W,EAAuC,CACtE,MAAA,EACT,CAEO,SAAS4W,GAAsB5V,EAA0B,CACvD,OAAA6V,GAA2B7V,CAAW,CAC/C,CAEgB,SAAA6V,GACd7V,EACAkB,EACe,CACf,OAAIlB,GAAQ,KACHA,EAEF,CACL,UAAWA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACxD,aACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,WAAYA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAC5D,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,MACpD,CACF,CAEO,SAAS8V,GAAoB9V,EAA0B,CACrD,OAAA+V,GAAyB/V,EAAM,EAAK,CAC7C,CAEgB,SAAA+V,GACd/W,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,UAAWA,EAAM,UACjB,eAAgBA,EAAM,aACtB,aAAcA,EAAM,WACpB,eAAgBA,EAAM,cACtB,OAAQA,EAAM,MAChB,CACF,CCrEO,MAAMgX,GAA8B,CACzC,MAAO,QACP,WAAY,aACZ,WAAY,aACZ,gBAAiB,kBACjB,QAAS,UACT,aAAc,cAChB,EAOO,SAASC,GACdjX,EAC8B,CAC9B,MAAI,IAAE,SAAUA,IAAUA,EAAM,OAAY,OAE9C,CAEO,SAASkX,GAA4BlW,EAAgC,CACnE,OAAAmW,GAAiCnW,CAAW,CACrD,CAEgB,SAAAmW,GACdnW,EACAkB,EACqB,CACrB,OAAIlB,GAAQ,KACHA,EAEF,CACL,KAAMA,EAAK,IACb,CACF,CAEO,SAASoW,GAA0BpW,EAAgC,CACjE,OAAAqW,GAA+BrW,EAAM,EAAK,CACnD,CAEgB,SAAAqW,GACdrX,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,KAAMA,EAAM,IACd,CACF,CCrCO,SAASsX,GAAwBtX,EAAuC,CAC7E,MAAI,IAAE,gBAAiBA,IAAUA,EAAM,cAAmB,OAG5D,CAEO,SAASuX,GAAsBvW,EAA0B,CACvD,OAAAwW,GAA2BxW,CAAW,CAC/C,CAEgB,SAAAwW,GACdxW,EACAkB,EACe,CACf,OAAIlB,GAAQ,KACHA,EAEF,CACL,YAAaA,EAAK,YAClB,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,KAClD,CACF,CAEO,SAASyW,GAAoBzW,EAA0B,CACrD,OAAA0W,GAAyB1W,EAAM,EAAK,CAC7C,CAEgB,SAAA0W,GACd1X,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,YAAaA,EAAM,YACnB,MAAOA,EAAM,MACb,MAAOA,EAAM,KACf,CACF,CChBO,SAAS2X,GACd3X,EAC8C,CAG9C,MAFI,IAAE,aAAcA,IAAUA,EAAM,WAAgB,QAChD,EAAE,cAAeA,IAAUA,EAAM,YAAiB,QAClD,EAAE,SAAUA,IAAUA,EAAM,OAAY,OAE9C,CAEO,SAAS4X,EACd5W,EACqC,CAC9B,OAAA6W,GAAiD7W,CAAW,CACrE,CAEgB,SAAA6W,GACd7W,EACAkB,EACqC,CACrC,OAAIlB,GAAQ,KACHA,EAEF,CACL,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,SAAWA,EAAK,SAA2B,IAAIuV,EAA2B,EAC1E,UAAWgB,GAAsBvW,EAAK,SAAY,EAClD,KAAMA,EAAK,IACb,CACF,CAEO,SAAS8W,GACd9W,EACqC,CAC9B,OAAA+W,GAA+C/W,EAAM,EAAK,CACnE,CAEgB,SAAA+W,GACd/X,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,KAAMA,EAAM,KACZ,SAAWA,EAAM,SAA2B,IAAIyW,EAAyB,EACzE,UAAWgB,GAAoBzX,EAAM,SAAY,EACjD,KAAMA,EAAM,IACd,CACF,CC9CO,MAAMgY,GAA+B,CAC1C,UAAW,YACX,UAAW,WACb,EAOO,SAASC,GAAwBjY,EAAuC,CACtE,MAAA,EACT,CAEO,SAASkY,GAAsBlX,EAA0B,CACvD,OAAAmX,GAA2BnX,CAAW,CAC/C,CAEgB,SAAAmX,GACdnX,EACAkB,EACe,CACf,OAAIlB,GAAQ,KACHA,EAEF,CACL,GAAIA,EAAK,IAAS,KAAO,OAAYA,EAAK,GAC1C,MACEA,EAAK,OAAY,KACb,OACCA,EAAK,MAAwB,IAAI8P,CAAkB,EAC1D,gBACE9P,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,gBACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,iBACEA,EAAK,mBAAwB,KAAO,OAAYA,EAAK,iBACzD,CACF,CAEO,SAASoX,GAAoBpX,EAA0B,CACrD,OAAAqX,GAAyBrX,EAAM,EAAK,CAC7C,CAEgB,SAAAqX,GACdrY,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,GAAIA,EAAM,GACV,MACEA,EAAM,OAAY,KACd,OACCA,EAAM,MAAwB,IAAIgR,CAAgB,EACzD,iBAAkBhR,EAAM,gBACxB,aAAcA,EAAM,YACpB,MAAOA,EAAM,MACb,iBAAkBA,EAAM,gBACxB,kBAAmBA,EAAM,gBAC3B,CACF,CC/EO,SAASsY,GACdtY,EACyB,CAClB,MAAA,EACT,CAEO,SAASuY,GAAuBvX,EAA2B,CACzD,OAAAwX,GAA4BxX,CAAW,CAChD,CAEgB,SAAAwX,GACdxX,EACAkB,EACgB,CAChB,OAAIlB,GAAQ,KACHA,EAEF,CACL,GAAIA,EAAK,IAAS,KAAO,OAAYA,EAAK,GAC1C,MACEA,EAAK,OAAY,KACb,OACCA,EAAK,MAAwB,IAAI8P,CAAkB,EAC1D,gBACE9P,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,YACpD,CACF,CAEO,SAASyX,GAAqBzX,EAA2B,CACvD,OAAA0X,GAA0B1X,EAAM,EAAK,CAC9C,CAEgB,SAAA0X,GACd1Y,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,GAAIA,EAAM,GACV,MACEA,EAAM,OAAY,KACd,OACCA,EAAM,MAAwB,IAAIgR,CAAgB,EACzD,iBAAkBhR,EAAM,gBACxB,OAAQA,EAAM,OACd,aAAcA,EAAM,WACtB,CACF,CC7DO,MAAM2Y,GAAmC,CAC9C,YAAa,eACb,MAAO,QACP,WAAY,cACZ,UAAW,YACX,KAAM,OACN,OAAQ,SACR,KAAM,OACN,WAAY,YACd,EAOaC,GAA+B,CAC1C,KAAM,OACN,KAAM,OACN,YAAa,eACb,MAAO,QACP,SAAU,WACV,MAAO,QACP,aAAc,gBACd,gBAAiB,mBACjB,aAAc,gBACd,SAAU,WACV,aAAc,gBACd,YAAa,eACb,SAAU,WACV,aAAc,gBACd,SAAU,WACV,QAAS,UACT,SAAU,WACV,MAAO,QACP,UAAW,YACX,KAAM,OACN,WAAY,aACZ,UAAW,YACX,mBAAoB,sBACpB,SAAU,YACV,YAAa,eACb,MAAO,QACP,KAAM,OACN,MAAO,QACP,UAAW,aACX,IAAK,MACL,iBAAkB,oBAClB,oBAAqB,uBACrB,kBAAmB,qBACnB,aAAc,cAChB,EAOaC,GAA0C,CACrD,SAAU,WACV,MAAO,QACP,QAAS,UACT,UAAW,YACX,SAAU,WACV,aAAc,eACd,YAAa,cACb,aAAc,eAChB,EAOO,SAASC,GACd9Y,EACgC,CACzB,MAAA,EACT,CAEO,SAAS+Y,GACd/X,EACuB,CAChB,OAAAgY,GAAmChY,CAAW,CACvD,CAEgB,SAAAgY,GACdhY,EACAkB,EACuB,CACvB,OAAIlB,GAAQ,KACHA,EAEF,CACL,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,IAAKA,EAAK,KAAU,KAAO,OAAYA,EAAK,IAC5C,eACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,cACtD,CACF,CAEO,SAASiY,GAA4BjY,EAAkC,CACrE,OAAAkY,GAAiClY,EAAM,EAAK,CACrD,CAEgB,SAAAkY,GACdlZ,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,SAAUA,EAAM,SAChB,KAAMA,EAAM,KACZ,QAASA,EAAM,QACf,IAAKA,EAAM,IACX,eAAgBA,EAAM,cACxB,CACF,CChKO,MAAMmZ,EAAwB,CACnC,KAAM,OACN,IAAK,MACL,KAAM,OACN,MAAO,QACP,QAAS,UACT,UAAW,YACX,aAAc,gBACd,WAAY,aACZ,WAAY,aACZ,gBAAiB,mBACnB,EAIO,SAASC,GAAgCpZ,EAAqB,CACnE,UAAWT,KAAO4Z,EAChB,GAAI,OAAO,UAAU,eAAe,KAAKA,EAAuB5Z,CAAG,GAE/D4Z,EAAsB5Z,CAAyC,IAC/DS,EAEO,MAAA,GAIN,MAAA,EACT,CAEO,SAASqZ,GACdrY,EACuB,CAChB,OAAAsY,GAAmCtY,CAAW,CACvD,CAEgB,SAAAsY,GACdtY,EACAkB,EACuB,CAChB,OAAAlB,CACT,CAEO,SAASuY,GACdvZ,EACK,CACE,OAAAA,CACT,CAEgB,SAAAwZ,GACdxZ,EACAkC,EACuB,CAChB,OAAAlC,CACT,CCHO,MAAMyZ,GAAgC,CAC3C,KAAM,OACN,SAAU,UACZ,EAOO,SAASC,GACd1Z,EAC8B,CACvB,MAAA,EACT,CAEO,SAAS2Z,GAA4B3Y,EAAgC,CACnE,OAAA4Y,GAAiC5Y,CAAW,CACrD,CAEgB,SAAA4Y,GACd5Y,EACAkB,EACqB,CACrB,OAAIlB,GAAQ,KACHA,EAEF,CACL,UAAWA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACxD,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,YAAaA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC5D,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,MACpD,CACF,CAEO,SAAS6Y,GAA0B7Y,EAAgC,CACjE,OAAA8Y,GAA+B9Y,EAAM,EAAK,CACnD,CAEgB,SAAA8Y,GACd9Z,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,UAAWA,EAAM,UACjB,QAASA,EAAM,QACf,KAAMA,EAAM,KACZ,YAAaA,EAAM,YACnB,MAAOA,EAAM,MACb,QAASA,EAAM,QACf,OAAQA,EAAM,MAChB,CACF,CC3EO,MAAM+Z,GAA2B,CACtC,QAAS,SACX,EAOO,SAASC,GACdha,EAC2B,CACpB,MAAA,EACT,CAEO,SAASia,GAAyBjZ,EAA6B,CAC7D,OAAAkZ,GAA8BlZ,CAAW,CAClD,CAEgB,SAAAkZ,GACdlZ,EACAkB,EACkB,CAClB,OAAIlB,GAAQ,KACHA,EAEF,CACL,WACEA,EAAK,YAAiB,KAClB,OACA2Y,GAA4B3Y,EAAK,UAAa,EACpD,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,IAChD,CACF,CAEO,SAASmZ,GAAuBnZ,EAA6B,CAC3D,OAAAoZ,GAA4BpZ,EAAM,EAAK,CAChD,CAEgB,SAAAoZ,GACdpa,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,WAAY6Z,GAA0B7Z,EAAM,UAAa,EACzD,SAAUA,EAAM,SAChB,KAAMA,EAAM,IACd,CACF,CCIO,SAASqa,GACdra,EAC2B,CAG3B,MAFI,IAAE,cAAeA,IAAUA,EAAM,YAAiB,QAClD,EAAE,YAAaA,IAAUA,EAAM,UAAe,QAC9C,EAAE,aAAcA,IAAUA,EAAM,WAAgB,OAEtD,CAEO,SAASsa,GAAyBtZ,EAA6B,CAC7D,OAAAuZ,GAA8BvZ,CAAW,CAClD,CAEgB,SAAAuZ,GACdvZ,EACAkB,EACkB,CAClB,OAAIlB,GAAQ,KACHA,EAEF,CACL,GAAIA,EAAK,IAAS,KAAO,OAAYA,EAAK,GAC1C,UAAYA,EAAK,UAA4B,IAAI8P,CAAkB,EACnE,QAASuI,GAA8BrY,EAAK,OAAU,EACtD,eACEA,EAAK,iBAAsB,KACvB,OACAqH,EAAuBrH,EAAK,eAAkB,EACpD,SAAWA,EAAK,SAA2B,IAAIyP,EAAe,EAC9D,SAAUzP,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,WAAYA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WAC1D,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,cACtD,CACF,CAEO,SAASwZ,GAAuBxZ,EAA6B,CAC3D,OAAAyZ,GAA4BzZ,EAAM,EAAK,CAChD,CAEgB,SAAAyZ,GACdza,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,GAAIA,EAAM,GACV,UAAYA,EAAM,UAA4B,IAAIgR,CAAgB,EAClE,QAAqChR,EAAM,QAC3C,gBAAiBuI,EAAqBvI,EAAM,cAAiB,EAC7D,SAAWA,EAAM,SAA2B,IAAI2Q,EAAa,EAC7D,SAAU3Q,EAAM,SAChB,QAASA,EAAM,QACf,WAAYA,EAAM,WAClB,eAAgBA,EAAM,aACxB,CACF,CCrHO,MAAM0a,GAA4B,CACvC,kBAAmB,mBACrB,EAOO,SAASC,GACd3a,EAC4B,CAE5B,MADI,IAAE,aAAcA,IAAUA,EAAM,WAAgB,QAChD,EAAE,SAAUA,IAAUA,EAAM,OAAY,OAE9C,CAEO,SAAS4a,GAA0B5Z,EAA8B,CAC/D,OAAA6Z,GAA+B7Z,CAAW,CACnD,CAEgB,SAAA6Z,GACd7Z,EACAkB,EACmB,CACnB,OAAIlB,GAAQ,KACHA,EAEF,CACL,GAAIA,EAAK,IAAS,KAAO,OAAYA,EAAK,GAC1C,SAAWA,EAAK,SAA2B,IAAIiZ,EAAwB,EACvE,KAAMjZ,EAAK,IACb,CACF,CAEO,SAAS8Z,GAAwB9Z,EAA8B,CAC7D,OAAA+Z,GAA6B/Z,EAAM,EAAK,CACjD,CAEgB,SAAA+Z,GACd/a,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,GAAIA,EAAM,GACV,SAAWA,EAAM,SAA2B,IAAIma,EAAsB,EACtE,KAAMna,EAAM,IACd,CACF,CCtFO,MAAMgb,EAAU,CACrB,IAAK,MACL,QAAS,UACT,OAAQ,SACR,QAAS,UACT,YAAa,cACb,OAAQ,SACR,YAAa,cACb,OAAQ,SACR,SAAU,WACV,WAAY,aACZ,QAAS,UACT,cAAe,gBACf,WAAY,aACZ,WAAY,aACZ,UAAW,YACX,WAAY,aACZ,SAAU,WACV,OAAQ,SACR,UAAW,YACX,MAAO,QACP,OAAQ,QACV,EAGO,SAASC,GAAkBjb,EAAqB,CACrD,UAAWT,KAAOyb,EAChB,GAAI,OAAO,UAAU,eAAe,KAAKA,EAASzb,CAAG,GAC/Cyb,EAAQzb,CAA2B,IAAMS,EACpC,MAAA,GAIN,MAAA,EACT,CAEO,SAASkb,GAAgBla,EAAoB,CAC3C,OAAAma,GAAqBna,CAAW,CACzC,CAEgB,SAAAma,GACdna,EACAkB,EACS,CACF,OAAAlB,CACT,CAEO,SAASoa,GAAcpb,EAA6B,CAClD,OAAAA,CACT,CAEgB,SAAAqb,GACdrb,EACAkC,EACS,CACF,OAAAlC,CACT,CClBO,MAAMsb,GAAiB,CAC5B,WAAY,aACZ,OAAQ,QACV,EAOO,SAASC,GAAiBvb,EAAgC,CACxD,MAAA,EACT,CAEO,SAASwb,GAAexa,EAAmB,CACzC,OAAAya,GAAoBza,CAAW,CACxC,CAEgB,SAAAya,GACdza,EACAkB,EACQ,CACR,OAAIlB,GAAQ,KACHA,EAEF,CACL,UAAWA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACxD,gBACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,SAAUA,EAAK,SAAc,KAAO,OAAYA,EAAK,OACvD,CACF,CAEO,SAAS0a,GAAa1a,EAAmB,CACvC,OAAA2a,GAAkB3a,EAAM,EAAK,CACtC,CAEgB,SAAA2a,GACd3b,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,UAAWA,EAAM,UACjB,iBAAkBA,EAAM,gBACxB,UAAWA,EAAM,SACjB,KAAMA,EAAM,KACZ,QAASA,EAAM,QACjB,CACF,CC5DO,SAAS4b,GAAiB5b,EAAgC,CACxD,MAAA,EACT,CAEO,SAAS6b,EAAe7a,EAAmB,CACzC,OAAA8a,GAAoB9a,CAAW,CACxC,CAEgB,SAAA8a,GACd9a,EACAkB,EACQ,CACR,OAAIlB,GAAQ,KACHA,EAEF,CACL,GAAIA,EAAK,IAAS,KAAO,OAAYA,EAAK,GAC1C,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,OAAQA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACnD,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,KAClD,CACF,CAEO,SAAS+a,EAAa/a,EAAmB,CACvC,OAAAgb,GAAkBhb,EAAM,EAAK,CACtC,CAEgB,SAAAgb,GACdhc,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,GAAIA,EAAM,GACV,MAAOA,EAAM,MACb,QAASA,EAAM,OACf,MAAOA,EAAM,KACf,CACF,CCOO,SAASic,GAAuBjc,EAAsC,CACpE,MAAA,EACT,CAEO,SAASkc,EAAqBlb,EAAyB,CACrD,OAAAmb,GAA0Bnb,CAAW,CAC9C,CAEgB,SAAAmb,GACdnb,EACAkB,EACc,CACd,OAAIlB,GAAQ,KACHA,EAEF,CACL,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,WAAYA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WAC1D,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,IAAKA,EAAK,KAAU,KAAO,OAAYA,EAAK,IAC5C,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,UAAWA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACxD,WAAYA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WAC1D,IAAKA,EAAK,KAAU,KAAO,OAAYA,EAAK,IAC5C,IAAKA,EAAK,KAAU,KAAO,OAAYA,EAAK,IAC5C,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,WAAYA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WAC1D,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,KAClD,CACF,CAEO,SAASob,EAAmBpb,EAAyB,CACnD,OAAAqb,GAAwBrb,EAAM,EAAK,CAC5C,CAEgB,SAAAqb,GACdrc,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,UAAWA,EAAM,SACjB,WAAYA,EAAM,WAClB,KAAMA,EAAM,KACZ,IAAKA,EAAM,IACX,MAAOA,EAAM,MACb,UAAWA,EAAM,UACjB,WAAYA,EAAM,WAClB,IAAKA,EAAM,IACX,IAAKA,EAAM,IACX,QAASA,EAAM,QACf,WAAYA,EAAM,WAClB,MAAOA,EAAM,KACf,CACF,CCiFO,MAAMsc,GAAiC,CAC5C,KAAM,OACN,OAAQ,SACR,eAAgB,kBAChB,wBAAyB,4BACzB,aAAc,gBACd,sBAAuB,0BACvB,sBAAuB,yBACzB,EAOaC,GAAkC,CAC7C,KAAM,OACN,OAAQ,SACR,UAAW,YACX,UAAW,WACb,EAOO,SAASC,GACdxc,EAC6B,CACtB,MAAA,EACT,CAEO,SAASyc,GAA2Bzb,EAA+B,CACjE,OAAA0b,GAAgC1b,CAAW,CACpD,CAEgB,SAAA0b,GACd1b,EACAkB,EACoB,CACpB,OAAIlB,GAAQ,KACHA,EAEF,CACL,aACEA,EAAK,eAAoB,KAAO,OAAYA,EAAK,cACnD,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACzD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACzD,QAASA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACrD,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,QACEA,EAAK,UAAe,KAAO,OAAY6a,EAAe7a,EAAK,QAAW,EACxE,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,OAAQA,EAAK,QAAa,KAAO,OAAYwa,GAAexa,EAAK,MAAS,EAC1E,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,kBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,gBACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,cACEA,EAAK,gBAAqB,KACtB,OACA4V,GAAsB5V,EAAK,cAAiB,EAClD,iBACEA,EAAK,mBAAwB,KACzB,OACAkb,EAAqBlb,EAAK,iBAAoB,EACpD,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACzD,eACEA,EAAK,iBAAsB,KACvB,OACAkb,EAAqBlb,EAAK,eAAkB,EAClD,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,gBACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,yBACEA,EAAK,6BAAkC,KACnC,OACAA,EAAK,4BACX,QAASA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACrD,OACEA,EAAK,QAAa,KAAO,OAAYkb,EAAqBlb,EAAK,MAAS,EAC1E,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,eACEA,EAAK,gBAAqB,KACtB,OACA+X,GAA8B/X,EAAK,cAAiB,EAC1D,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,MACpD,CACF,CAEO,SAAS2b,GAAyB3b,EAA+B,CAC/D,OAAA4b,GAA8B5b,EAAM,EAAK,CAClD,CAEgB,SAAA4b,GACd5c,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,cAAeA,EAAM,aACrB,eAAgBA,EAAM,cACtB,WAAYA,EAAM,UAClB,UAAWA,EAAM,SACjB,UAAWA,EAAM,SACjB,WAAYA,EAAM,UAClB,SAAUA,EAAM,QAChB,QAASA,EAAM,QACf,SAAU+b,EAAa/b,EAAM,OAAU,EACvC,YAAaA,EAAM,WACnB,OAAQ0b,GAAa1b,EAAM,MAAS,EACpC,aAAcA,EAAM,YACpB,YAAaA,EAAM,WACnB,eAAgBA,EAAM,cACtB,mBAAoBA,EAAM,kBAC1B,iBAAkBA,EAAM,gBACxB,eAAgB8W,GAAoB9W,EAAM,aAAgB,EAC1D,kBAAmBoc,EAAmBpc,EAAM,gBAAmB,EAC/D,WAAYA,EAAM,UAClB,gBAAiBoc,EAAmBpc,EAAM,cAAiB,EAC3D,SAAUA,EAAM,SAChB,iBAAkBA,EAAM,gBACxB,4BAA6BA,EAAM,yBACnC,SAAUA,EAAM,QAChB,OAAQoc,EAAmBpc,EAAM,MAAS,EAC1C,OAAQA,EAAM,OACd,eAAgBiZ,GAA4BjZ,EAAM,cAAiB,EACnE,KAAMA,EAAM,KACZ,OAAQA,EAAM,MAChB,CACF,CC9TO,SAAS6c,GACd7c,EACyB,CAEzB,MADI,IAAE,UAAWA,IAAUA,EAAM,QAAa,QAC1C,EAAE,UAAWA,IAAUA,EAAM,QAAa,OAEhD,CAEO,SAAS8c,GAAuB9b,EAA2B,CACzD,OAAA+b,GAA4B/b,CAAW,CAChD,CAEgB,SAAA+b,GACd/b,EACAkB,EACgB,CAChB,OAAIlB,GAAQ,KACHA,EAEF,CACL,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,MAAOA,EAAK,MACZ,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,YACEA,EAAK,cAAmB,KACpB,OACAyJ,GAAoBzJ,EAAK,YAAe,EAC9C,MAAOA,EAAK,MACd,CACF,CAEO,SAASgc,GAAqBhc,EAA2B,CACvD,OAAAic,GAA0Bjc,EAAM,EAAK,CAC9C,CAEgB,SAAAic,GACdjd,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,eAAgBA,EAAM,cACtB,MAAOA,EAAM,MACb,MAAOA,EAAM,MACb,aAAc2K,GAAkB3K,EAAM,WAAc,EACpD,OAAQA,EAAM,KAChB,CACF,CCuBO,MAAMkd,GAA6B,CACxC,KAAM,OACN,MAAO,QACP,QAAS,SACX,EAOO,SAASC,GAAqBnd,EAAoC,CAOvE,MANI,IAAE,kBAAmBA,IAAUA,EAAM,gBAAqB,QAE1D,EAAE,kBAAmBA,IAAUA,EAAM,gBAAqB,QAE1D,EAAE,iBAAkBA,IAAUA,EAAM,eAAoB,QAExD,EAAE,iBAAkBA,IAAUA,EAAM,eAAoB,OAG9D,CAEO,SAASod,GAAmBpc,EAAuB,CACjD,OAAAqc,GAAwBrc,CAAW,CAC5C,CAEgB,SAAAqc,GACdrc,EACAkB,EACY,CACZ,OAAIlB,GAAQ,KACHA,EAEF,CACL,OACEA,EAAK,SAAc,KAAO,OAAY6a,EAAe7a,EAAK,OAAU,EACtE,MAAOA,EAAK,QAAa,KAAO,OAAYA,EAAK,OACjD,cAAeA,EAAK,eACpB,cAAeA,EAAK,eACpB,aAAcA,EAAK,cACnB,aAAcA,EAAK,eACnB,gBACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,aACEA,EAAK,eAAoB,KAAO,OAAYA,EAAK,cACnD,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,gBACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,SACEA,EAAK,WAAgB,KACjB,OACA8b,GAAuB9b,EAAK,SAAY,EAC9C,KACEA,EAAK,MAAW,KACZ,OACAyb,GAA2Bzb,EAAK,IAAO,EAC7C,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,QACxD,CACF,CAEO,SAASsc,GAAiBtc,EAAuB,CAC/C,OAAAuc,GAAsBvc,EAAM,EAAK,CAC1C,CAEgB,SAAAuc,GACdvd,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,QAAS+b,EAAa/b,EAAM,MAAS,EACrC,OAAQA,EAAM,MACd,eAAgBA,EAAM,cACtB,eAAgBA,EAAM,cACtB,cAAeA,EAAM,aACrB,eAAgBA,EAAM,aACtB,iBAAkBA,EAAM,gBACxB,eAAgBA,EAAM,cACtB,QAASA,EAAM,QACf,cAAeA,EAAM,aACrB,SAAUA,EAAM,SAChB,iBAAkBA,EAAM,gBACxB,UAAWgd,GAAqBhd,EAAM,QAAW,EACjD,KAAM2c,GAAyB3c,EAAM,IAAO,EAC5C,SAAUA,EAAM,QAClB,CACF,CCxGO,MAAMwd,GAAiC,CAC5C,QAAS,UACT,MAAO,QACP,QAAS,WACT,KAAM,MACR,EAOO,SAASC,GAAqBzd,EAAoC,CAEvE,MADI,IAAE,QAASA,IAAUA,EAAM,MAAW,QACtC,EAAE,QAASA,IAAUA,EAAM,MAAW,OAE5C,CAEO,SAAS0d,GAAmB1c,EAAuB,CACjD,OAAA2c,GAAwB3c,CAAW,CAC5C,CAEgB,SAAA2c,GACd3c,EACAkB,EACY,CACZ,OAAIlB,GAAQ,KACHA,EAEF,CACL,IAAKA,EAAK,IACV,IAAKA,EAAK,IACV,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,KAAMA,EAAK,MAAW,KAAO,OAAY4S,GAAiB5S,EAAK,IAAO,EACtE,OACEA,EAAK,SAAc,KAAO,OAAY6a,EAAe7a,EAAK,OAAU,EACtE,OAAQA,EAAK,QAAa,KAAO,OAAYgB,GAAehB,EAAK,MAAS,EAC1E,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACzD,eACEA,EAAK,gBAAqB,KACtB,OACAyD,GAAuBzD,EAAK,cAAiB,EACnD,iBACEA,EAAK,mBAAwB,KAAO,OAAYA,EAAK,kBACvD,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,eACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,WAC7D,CACF,CAEO,SAAS4c,GAAiB5c,EAAuB,CAC/C,OAAA6c,GAAsB7c,EAAM,EAAK,CAC1C,CAEgB,SAAA6c,GACd7d,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,IAAKA,EAAM,IACX,IAAKA,EAAM,IACX,eAAgBA,EAAM,cACtB,KAAqBA,EAAM,KAC3B,QAAS+b,EAAa/b,EAAM,MAAS,EACrC,OAAQmC,GAAanC,EAAM,MAAS,EACpC,WAAYA,EAAM,UAClB,eAAgB2E,GAAqB3E,EAAM,cAAiB,EAC5D,kBAAmBA,EAAM,iBACzB,QAASA,EAAM,QACf,iBAAkBA,EAAM,eACxB,YAAaA,EAAM,UACrB,CACF,CCtIO,SAAS8d,GAAuB9d,EAAsC,CACpE,MAAA,EACT,CAEO,SAAS+d,GAAqB/c,EAAyB,CACrD,OAAAgd,GAA0Bhd,CAAW,CAC9C,CAEgB,SAAAgd,GACdhd,EACAkB,EACc,CACd,OAAIlB,GAAQ,KACHA,EAEF,CACL,GAAIA,EAAK,IAAS,KAAO,OAAYA,EAAK,GAC1C,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,MACEA,EAAK,OAAY,KACb,OACCA,EAAK,MAAwB,IAAI0c,EAAkB,EAC1D,MACE1c,EAAK,OAAY,KACb,OACCA,EAAK,MAAwB,IAAIoc,EAAkB,CAC5D,CACF,CAEO,SAASa,GAAmBjd,EAAyB,CACnD,OAAAkd,GAAwBld,EAAM,EAAK,CAC5C,CAEgB,SAAAkd,GACdle,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,GAAIA,EAAM,GACV,UAAWA,EAAM,SACjB,UAAWA,EAAM,SACjB,MACEA,EAAM,OAAY,KACd,OACCA,EAAM,MAAwB,IAAI4d,EAAgB,EACzD,MACE5d,EAAM,OAAY,KACd,OACCA,EAAM,MAAwB,IAAIsd,EAAgB,CAC3D,CACF,CClFO,SAASa,GACdne,EAC8B,CAC9B,MAAI,IAAE,SAAUA,IAAUA,EAAM,OAAY,OAE9C,CAEO,SAASoe,EAA4Bpd,EAAgC,CACnE,OAAAqd,GAAiCrd,CAAW,CACrD,CAEgB,SAAAqd,GACdrd,EACAkB,EACqB,CACrB,OAAIlB,GAAQ,KACHA,EAEF,CACL,KAAMA,EAAK,KACX,cACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,iBACEA,EAAK,mBAAwB,KAAO,OAAYA,EAAK,iBACzD,CACF,CAEO,SAASsd,EAA0Btd,EAAgC,CACjE,OAAAud,GAA+Bvd,EAAM,EAAK,CACnD,CAEgB,SAAAud,GACdve,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,KAAMA,EAAM,KACZ,gBAAiBA,EAAM,cACvB,kBAAmBA,EAAM,gBAC3B,CACF,CC9BO,SAASwe,GAAuBxe,EAAsC,CACpE,MAAA,EACT,CAEO,SAASye,GAAqBzd,EAAyB,CACrD,OAAA0d,GAA0B1d,CAAW,CAC9C,CAEgB,SAAA0d,GACd1d,EACAkB,EACc,CACd,OAAIlB,GAAQ,KACHA,EAEF,CACL,mBACEA,EAAK,sBAA2B,KAC5B,OACCA,EAAK,qBAAuC,IAC3Cod,CACF,EACN,mBACEpd,EAAK,sBAA2B,KAC5B,OACCA,EAAK,qBAAuC,IAC3Cod,CACF,EACN,mBACEpd,EAAK,sBAA2B,KAC5B,OACCA,EAAK,qBAAuC,IAC3Cod,CACF,EACN,iBACEpd,EAAK,oBAAyB,KAC1B,OACCA,EAAK,mBAAqC,IACzCod,CAAA,CAEV,CACF,CAEO,SAASO,GAAmB3d,EAAyB,CACnD,OAAA4d,GAAwB5d,EAAM,EAAK,CAC5C,CAEgB,SAAA4d,GACd5e,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,qBACEA,EAAM,oBAAyB,KAC3B,OACCA,EAAM,mBAAqC,IAC1Cse,CACF,EACN,qBACEte,EAAM,oBAAyB,KAC3B,OACCA,EAAM,mBAAqC,IAC1Cse,CACF,EACN,qBACEte,EAAM,oBAAyB,KAC3B,OACCA,EAAM,mBAAqC,IAC1Cse,CACF,EACN,mBACEte,EAAM,kBAAuB,KACzB,OACCA,EAAM,iBAAmC,IACxCse,CAAA,CAEV,CACF,CCnFO,SAASO,GACd7e,EAC+B,CACxB,MAAA,EACT,CAEO,SAAS8e,GAA6B9d,EAAiC,CACrE,OAAA+d,GAAkC/d,CAAW,CACtD,CAEgB,SAAA+d,GACd/d,EACAkB,EACsB,CACtB,OAAIlB,GAAQ,KACHA,EAEF,CACL,aACEA,EAAK,eAAoB,KAAO,OAAYA,EAAK,cACnD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,iBACEA,EAAK,mBAAwB,KAAO,OAAYA,EAAK,kBACvD,sBACEA,EAAK,wBAA6B,KAC9B,OACAA,EAAK,uBACX,kBACEA,EAAK,qBAA0B,KAC3B,OACAA,EAAK,mBACb,CACF,CAEO,SAASge,GAA2Bhe,EAAiC,CACnE,OAAAie,GAAgCje,EAAM,EAAK,CACpD,CAEgB,SAAAie,GACdjf,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,cAAeA,EAAM,aACrB,aAAcA,EAAM,YACpB,kBAAmBA,EAAM,iBACzB,uBAAwBA,EAAM,sBAC9B,oBAAqBA,EAAM,iBAC7B,CACF,CCmFO,MAAMkf,GAAgC,CAC3C,SAAU,YACV,QAAS,WACT,WAAY,cACd,EAOaC,GAAoC,CAC/C,KAAM,OACN,UAAW,YACX,aAAc,cAChB,EAOaC,GAA4B,CACvC,KAAM,OACN,KAAM,MACR,EAOO,SAASC,GACdrf,EAC0B,CAC1B,MAAI,IAAE,YAAaA,IAAUA,EAAM,UAAe,OAEpD,CAEO,SAASsf,GAAwBte,EAA4B,CAC3D,OAAAue,GAA6Bve,CAAW,CACjD,CAEgB,SAAAue,GACdve,EACAkB,EACiB,CACjB,OAAIlB,GAAQ,KACHA,EAEF,CACL,GAAIA,EAAK,IAAS,KAAO,OAAYA,EAAK,GAC1C,MACEA,EAAK,OAAY,KACb,OACCA,EAAK,MAAwB,IAAI6I,CAAwB,EAChE,gBACE7I,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,QAAS2H,EAA6B3H,EAAK,OAAU,EACrD,eACEA,EAAK,iBAAsB,KACvB,OACAqH,EAAuBrH,EAAK,eAAkB,EACpD,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,MACEA,EAAK,OAAY,KAAO,OAAYiI,EAAqBjI,EAAK,KAAQ,EACxE,SACEA,EAAK,UAAe,KAChB,OACAuI,EAAyBvI,EAAK,QAAW,EAC/C,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,mBACEA,EAAK,qBAA0B,KAC3B,OACAA,EAAK,oBACX,kBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,QACEA,EAAK,SAAc,KACf,OACAgE,EAA0BhE,EAAK,OAAU,EAC/C,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACzD,UAAWA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACxD,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,aACEA,EAAK,eAAoB,KACrB,OACA8d,GAA6B9d,EAAK,aAAgB,EACxD,iBACEA,EAAK,mBAAwB,KAAO,OAAYA,EAAK,kBACvD,kBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,kBACb,CACF,CAEO,SAASwe,GAAsBxe,EAA4B,CACzD,OAAAye,GAA2Bze,EAAM,EAAK,CAC/C,CAEgB,SAAAye,GACdzf,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,GAAIA,EAAM,GACV,MACEA,EAAM,OAAY,KACd,OACCA,EAAM,MAAwB,IAAI+J,CAAsB,EAC/D,iBAAkB/J,EAAM,gBACxB,QAAoCA,EAAM,QAC1C,gBAAiBuI,EAAqBvI,EAAM,cAAiB,EAC7D,YAAaA,EAAM,WACnB,MAA0BA,EAAM,MAChC,SAAiCA,EAAM,SACvC,gBAAiBA,EAAM,eACvB,OAAQA,EAAM,OACd,oBAAqBA,EAAM,mBAC3B,mBAAoBA,EAAM,kBAC1B,QAASkF,EAAwBlF,EAAM,OAAU,EACjD,WAAYA,EAAM,UAClB,UAAWA,EAAM,UACjB,eAAgBA,EAAM,cACtB,cAAegf,GAA2Bhf,EAAM,YAAe,EAC/D,kBAAmBA,EAAM,iBACzB,mBAAoBA,EAAM,iBAC5B,CACF,CCzRO,MAAM0f,GAAkC,CAC7C,MAAO,QACP,QAAS,UACT,IAAK,MACL,aAAc,eAChB,EAOO,SAASC,GACd3f,EACkC,CAElC,MADI,IAAE,QAASA,IAAUA,EAAM,MAAW,QACtC,EAAE,QAASA,IAAUA,EAAM,MAAW,OAE5C,CAEO,SAAS4f,GACd5e,EACyB,CAClB,OAAA6e,GAAqC7e,CAAW,CACzD,CAEgB,SAAA6e,GACd7e,EACAkB,EACyB,CACzB,OAAIlB,GAAQ,KACHA,EAEF,CACL,IAAKA,EAAK,IACV,IAAKA,EAAK,IACV,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,cACtD,CACF,CAEO,SAAS8e,GACd9e,EACyB,CAClB,OAAA+e,GAAmC/e,EAAM,EAAK,CACvD,CAEgB,SAAA+e,GACd/f,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,IAAKA,EAAM,IACX,IAAKA,EAAM,IACX,KAAMA,EAAM,KACZ,eAAgBA,EAAM,aACxB,CACF,CClDO,SAASggB,GAAuBhgB,EAAsC,CAM3E,MALI,IAAE,SAAUA,IAAUA,EAAM,OAAY,QACxC,EAAE,WAAYA,IAAUA,EAAM,SAAc,QAC5C,EAAE,WAAYA,IAAUA,EAAM,SAAc,QAC5C,EAAE,WAAYA,IAAUA,EAAM,SAAc,QAC5C,EAAE,WAAYA,IAAUA,EAAM,SAAc,QAC5C,EAAE,WAAYA,IAAUA,EAAM,SAAc,OAElD,CAEO,SAASigB,GAAqBjf,EAAyB,CACrD,OAAAkf,GAA0Blf,CAAW,CAC9C,CAEgB,SAAAkf,GACdlf,EACAkB,EACc,CACd,OAAIlB,GAAQ,KACHA,EAEF,CACL,KAAMA,EAAK,KACX,OAAQA,EAAK,OACb,OAAQA,EAAK,QACb,OAAQA,EAAK,QACb,OAAQA,EAAK,QACb,OAAQA,EAAK,OACf,CACF,CAEO,SAASmf,GAAmBnf,EAAyB,CACnD,OAAAof,GAAwBpf,EAAM,EAAK,CAC5C,CAEgB,SAAAof,GACdpgB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,KAAMA,EAAM,KACZ,OAAQA,EAAM,OACd,QAASA,EAAM,OACf,QAASA,EAAM,OACf,QAASA,EAAM,OACf,QAASA,EAAM,MACjB,CACF,CC/FO,MAAMqgB,GAAmB,CAC9B,MAAO,QACP,WAAY,YACd,EAIO,SAASC,GAA2BtgB,EAAqB,CAC9D,UAAWT,KAAO8gB,GAChB,GAAI,OAAO,UAAU,eAAe,KAAKA,GAAkB9gB,CAAG,GACxD8gB,GAAiB9gB,CAAoC,IAAMS,EACtD,MAAA,GAIN,MAAA,EACT,CAEO,SAASugB,GAAyBvf,EAA6B,CAC7D,OAAAwf,GAA8Bxf,CAAW,CAClD,CAEgB,SAAAwf,GACdxf,EACAkB,EACkB,CACX,OAAAlB,CACT,CAEO,SAASyf,GAAuBzgB,EAAsC,CACpE,OAAAA,CACT,CAEgB,SAAA0gB,GACd1gB,EACAkC,EACkB,CACX,OAAAlC,CACT,CCtCO,MAAM2gB,GAAa,CACxB,MAAO,QACP,WAAY,aACZ,QAAS,UACT,QAAS,SACX,EAGO,SAASC,GAAqB5gB,EAAqB,CACxD,UAAWT,KAAOohB,GAChB,GAAI,OAAO,UAAU,eAAe,KAAKA,GAAYphB,CAAG,GAClDohB,GAAWphB,CAA8B,IAAMS,EAC1C,MAAA,GAIN,MAAA,EACT,CAEO,SAAS6gB,GAAmB7f,EAAuB,CACjD,OAAA8f,GAAwB9f,CAAW,CAC5C,CAEgB,SAAA8f,GACd9f,EACAkB,EACY,CACL,OAAAlB,CACT,CAEO,SAAS+f,GAAiB/gB,EAAgC,CACxD,OAAAA,CACT,CAEgB,SAAAghB,GACdhhB,EACAkC,EACY,CACL,OAAAlC,CACT,CCuLO,MAAMihB,GAA8B,CACzC,IAAK,MACL,WAAY,aACZ,IAAK,MACL,eAAgB,kBAChB,aAAc,gBACd,KAAM,OACN,WAAY,aACZ,OAAQ,SACR,KAAM,OACN,MAAO,QACP,OAAQ,SACR,SAAU,WACV,KAAM,OACN,MAAO,QACP,KAAM,OACN,MAAO,QACP,SAAU,YACV,QAAS,UACT,UAAW,YACX,SAAU,YACV,gBAAiB,mBACnB,EAOaC,GAAmC,CAC9C,WAAY,aACZ,oBAAqB,sBACrB,sBAAuB,uBACzB,EAOO,SAASC,GAAwBnhB,EAAuC,CAY7E,MAXI,IAAE,SAAUA,IAAUA,EAAM,OAAY,QACxC,EAAE,gBAAiBA,IAAUA,EAAM,cAAmB,QAEtD,EAAE,SAAUA,IAAUA,EAAM,OAAY,QACxC,EAAE,WAAYA,IAAUA,EAAM,SAAc,QAC5C,EAAE,oBAAqBA,IAAUA,EAAM,kBAAuB,QAE9D,EAAE,kBAAmBA,IAAUA,EAAM,gBAAqB,QAE1D,EAAE,eAAgBA,IAAUA,EAAM,aAAkB,QAEpD,EAAE,eAAgBA,IAAUA,EAAM,aAAkB,OAG1D,CAEO,SAASohB,GAAsBpgB,EAA0B,CACvD,OAAAqgB,GAA2BrgB,CAAW,CAC/C,CAEgB,SAAAqgB,GACdrgB,EACAkB,EACe,CACf,OAAIlB,GAAQ,KACHA,EAEF,CACL,KAAMA,EAAK,KACX,YAAaA,EAAK,YAClB,iCACEA,EAAK,qCAA0C,KAC3C,OACAA,EAAK,oCACX,+BACEA,EAAK,mCAAwC,KACzC,OACAA,EAAK,kCACX,gCACEA,EAAK,oCAAyC,KAC1C,OACAA,EAAK,mCACX,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,iBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,KAAMA,EAAK,KACX,OAAQA,EAAK,OACb,gBAAiBA,EAAK,kBACtB,cAAeA,EAAK,gBACpB,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,KAAMA,EAAK,MAAW,KAAO,OAAYyd,GAAqBzd,EAAK,IAAO,EAC1E,oBACEA,EAAK,uBAA4B,KAC7B,OACAA,EAAK,sBACX,kBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,wBACEA,EAAK,2BAAgC,KACjC,OACAA,EAAK,0BACX,kBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,wBACEA,EAAK,2BAAgC,KACjC,OACAA,EAAK,0BACX,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,eACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,WAAY6f,GAAmB7f,EAAK,WAAc,EAClD,WAAYA,EAAK,YACjB,gBACEA,EAAK,mBAAwB,KAAO,OAAYA,EAAK,iBACzD,CACF,CAEO,SAASsgB,GAAoBtgB,EAA0B,CACrD,OAAAugB,GAAyBvgB,EAAM,EAAK,CAC7C,CAEgB,SAAAugB,GACdvhB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,KAAMA,EAAM,KACZ,YAAaA,EAAM,YACnB,oCACEA,EAAM,iCACR,kCAAmCA,EAAM,+BACzC,mCACEA,EAAM,gCACR,aAAcA,EAAM,YACpB,mBAAoBA,EAAM,iBAC1B,KAAMA,EAAM,KACZ,OAAQA,EAAM,OACd,kBAAmBA,EAAM,gBACzB,gBAAiBA,EAAM,cACvB,KAAMA,EAAM,KACZ,MAAOA,EAAM,MACb,KAAMA,EAAM,KACZ,MAAOA,EAAM,MACb,KAAM2e,GAAmB3e,EAAM,IAAO,EACtC,sBAAuBA,EAAM,oBAC7B,mBAAoBA,EAAM,kBAC1B,0BAA2BA,EAAM,wBACjC,mBAAoBA,EAAM,kBAC1B,0BAA2BA,EAAM,wBACjC,aAAcA,EAAM,YACpB,iBAAkBA,EAAM,eACxB,YAA8BA,EAAM,WACpC,YAAaA,EAAM,WACnB,kBAAmBA,EAAM,eAC3B,CACF,CCpVO,SAASwhB,GAAmBxhB,EAAkC,CAEnE,MADI,IAAE,UAAWA,IAAUA,EAAM,QAAa,QAC1C,EAAE,YAAaA,IAAUA,EAAM,UAAe,OAEpD,CAEO,SAASyhB,GAAiBzgB,EAAqB,CAC7C,OAAA0gB,GAAsB1gB,CAAW,CAC1C,CAEgB,SAAA0gB,GACd1gB,EACAkB,EACU,CACV,OAAIlB,GAAQ,KACHA,EAEF,CACL,UACEA,EAAK,WAAgB,KACjB,OACCA,EAAK,UAA4B,IAAIogB,EAAqB,EACjE,MAAOpgB,EAAK,MACZ,QAASif,GAAqBjf,EAAK,OAAU,EAC7C,kBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,UAAWA,EAAK,WAAgB,KAAO,OAAYA,EAAK,SAC1D,CACF,CAEO,SAAS2gB,GAAe3gB,EAAqB,CAC3C,OAAA4gB,GAAoB5gB,EAAM,EAAK,CACxC,CAEgB,SAAA4gB,GACd5hB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,UACEA,EAAM,WAAgB,KAClB,OACCA,EAAM,UAA4B,IAAIshB,EAAmB,EAChE,MAAOthB,EAAM,MACb,QAASmgB,GAAmBngB,EAAM,OAAU,EAC5C,mBAAoBA,EAAM,kBAC1B,UAAWA,EAAM,SACnB,CACF,CCrBO,SAAS6hB,GAAoB7hB,EAAmC,CAQrE,MAPI,IAAE,WAAYA,IAAUA,EAAM,SAAc,QAC5C,EAAE,kBAAmBA,IAAUA,EAAM,gBAAqB,QAE1D,EAAE,UAAWA,IAAUA,EAAM,QAAa,QAC1C,EAAE,aAAcA,IAAUA,EAAM,WAAgB,QAChD,EAAE,cAAeA,IAAUA,EAAM,YAAiB,QAClD,EAAE,SAAUA,IAAUA,EAAM,OAAY,QACxC,EAAE,YAAaA,IAAUA,EAAM,UAAe,OAEpD,CAEO,SAAS8hB,GAAkB9gB,EAAsB,CAC/C,OAAA+gB,GAAuB/gB,CAAW,CAC3C,CAEgB,SAAA+gB,GACd/gB,EACAkB,EACW,CACX,OAAIlB,GAAQ,KACHA,EAEF,CACL,OAAQA,EAAK,OACb,cAAeA,EAAK,eACpB,MAAOuf,GAAyBvf,EAAK,KAAQ,EAC7C,SAAUuI,EAAyBvI,EAAK,QAAW,EACnD,UAAYA,EAAK,UAA4B,IAC3C4e,EACF,EACA,KAAO5e,EAAK,KAAuB,IAAIygB,EAAgB,EACvD,QAASxB,GAAqBjf,EAAK,OAAU,CAC/C,CACF,CAEO,SAASghB,GAAgBhhB,EAAsB,CAC7C,OAAAihB,GAAqBjhB,EAAM,EAAK,CACzC,CAEgB,SAAAihB,GACdjiB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,OAAQA,EAAM,OACd,eAAgBA,EAAM,cACtB,MAA8BA,EAAM,MACpC,SAAiCA,EAAM,SACvC,UAAYA,EAAM,UAA4B,IAC5C8f,EACF,EACA,KAAO9f,EAAM,KAAuB,IAAI2hB,EAAc,EACtD,QAASxB,GAAmBngB,EAAM,OAAU,CAC9C,CACF,CC3HO,SAASkiB,GACdliB,EACuC,CAChC,MAAA,EACT,CAEO,SAASmiB,GACdnhB,EAC8B,CACvB,OAAAohB,GAA0CphB,CAAW,CAC9D,CAEgB,SAAAohB,GACdphB,EACAkB,EAC8B,CAC9B,OAAIlB,GAAQ,KACHA,EAEF,CACL,KAAMA,EAAK,MAAW,KAAO,OAAY8gB,GAAkB9gB,EAAK,IAAO,CACzE,CACF,CAEO,SAASqhB,GACdrhB,EAC8B,CACvB,OAAAshB,GAAwCthB,EAAM,EAAK,CAC5D,CAEgB,SAAAshB,GACdtiB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,KAAMgiB,GAAgBhiB,EAAM,IAAO,CACrC,CACF,CChBO,SAASuiB,GACdviB,EACgC,CAChC,MAAI,IAAE,SAAUA,IAAUA,EAAM,OAAY,OAE9C,CAEO,SAASwiB,GACdxhB,EACuB,CAChB,OAAAyhB,GAAmCzhB,CAAW,CACvD,CAEgB,SAAAyhB,GACdzhB,EACAkB,EACuB,CACvB,OAAIlB,GAAQ,KACHA,EAEF,CACL,GAAIA,EAAK,IAAS,KAAO,OAAYA,EAAK,GAC1C,KAAM8gB,GAAkB9gB,EAAK,IAAO,EACpC,WACEA,EAAK,YAAiB,KAClB,OACCA,EAAK,WAA6B,IACjCmhB,EACF,EACN,iBACEnhB,EAAK,mBAAwB,KAAO,OAAYA,EAAK,iBACzD,CACF,CAEO,SAAS0hB,GAA4B1hB,EAAkC,CACrE,OAAA2hB,GAAiC3hB,EAAM,EAAK,CACrD,CAEgB,SAAA2hB,GACd3iB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,GAAIA,EAAM,GACV,KAAMgiB,GAAgBhiB,EAAM,IAAO,EACnC,WACEA,EAAM,YAAiB,KACnB,OACCA,EAAM,WAA6B,IAClCqiB,EACF,EACN,kBAAmBriB,EAAM,gBAC3B,CACF,CChDO,MAAM4iB,GAAuB,CAClC,UAAW,YACX,aAAc,eACd,QAAS,SACX,EAOO,SAASC,GAAuB7iB,EAAsC,CAG3E,MAFI,IAAE,QAASA,IAAUA,EAAM,MAAW,QACtC,EAAE,QAASA,IAAUA,EAAM,MAAW,QACtC,EAAE,SAAUA,IAAUA,EAAM,OAAY,OAE9C,CAEO,SAAS8iB,GAAqB9hB,EAAyB,CACrD,OAAA+hB,GAA0B/hB,CAAW,CAC9C,CAEgB,SAAA+hB,GACd/hB,EACAkB,EACc,CACd,OAAIlB,GAAQ,KACHA,EAEF,CACL,IAAKA,EAAK,IACV,IAAKA,EAAK,IACV,KAAMA,EAAK,KACX,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACzD,wBACEA,EAAK,2BAAgC,KACjC,OACAA,EAAK,0BACX,sBACEA,EAAK,yBAA8B,KAC/B,OACAA,EAAK,wBACX,kBACEA,EAAK,qBAA0B,KAC3B,OACAA,EAAK,oBACX,uBACEA,EAAK,2BAAgC,KACjC,OACAA,EAAK,yBACb,CACF,CAEO,SAASgiB,GAAmBhiB,EAAyB,CACnD,OAAAiiB,GAAwBjiB,EAAM,EAAK,CAC5C,CAEgB,SAAAiiB,GACdjjB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,IAAKA,EAAM,IACX,IAAKA,EAAM,IACX,KAAMA,EAAM,KACZ,WAAYA,EAAM,UAClB,0BAA2BA,EAAM,wBACjC,wBAAyBA,EAAM,sBAC/B,oBAAqBA,EAAM,kBAC3B,0BAA2BA,EAAM,sBACnC,CACF,CCnIO,MAAMkjB,GAAqB,CAChC,KAAM,OACN,IAAK,MACL,KAAM,OACN,MAAO,QACP,QAAS,UACT,UAAW,YACX,aAAc,gBACd,WAAY,aACZ,WAAY,aACZ,gBAAiB,mBACnB,EAIO,SAASC,GAA6BnjB,EAAqB,CAChE,UAAWT,KAAO2jB,GAChB,GAAI,OAAO,UAAU,eAAe,KAAKA,GAAoB3jB,CAAG,GAE5D2jB,GAAmB3jB,CAAsC,IAAMS,EAExD,MAAA,GAIN,MAAA,EACT,CAEO,SAASojB,GAA2BpiB,EAA+B,CACjE,OAAAqiB,GAAgCriB,CAAW,CACpD,CAEgB,SAAAqiB,GACdriB,EACAkB,EACoB,CACb,OAAAlB,CACT,CAEO,SAASsiB,GACdtjB,EACK,CACE,OAAAA,CACT,CAEgB,SAAAujB,GACdvjB,EACAkC,EACoB,CACb,OAAAlC,CACT,CChBO,SAASwjB,GACdxjB,EACyB,CAIzB,MAHI,IAAE,aAAcA,IAAUA,EAAM,WAAgB,QAChD,EAAE,SAAUA,IAAUA,EAAM,OAAY,QACxC,EAAE,cAAeA,IAAUA,EAAM,YAAiB,QAClD,EAAE,YAAaA,IAAUA,EAAM,UAAe,OAEpD,CAEO,SAASyjB,GAAuBziB,EAA2B,CACzD,OAAA0iB,GAA4B1iB,CAAW,CAChD,CAEgB,SAAA0iB,GACd1iB,EACAkB,EACgB,CAChB,OAAIlB,GAAQ,KACHA,EAEF,CACL,SAAUA,EAAK,SACf,KAAMA,EAAK,KACX,UAAWA,EAAK,WAChB,QAASA,EAAK,QAChB,CACF,CAEO,SAAS2iB,GAAqB3iB,EAA2B,CACvD,OAAA4iB,GAA0B5iB,EAAM,EAAK,CAC9C,CAEgB,SAAA4iB,GACd5jB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,SAAUA,EAAM,SAChB,KAAMA,EAAM,KACZ,WAAYA,EAAM,UAClB,SAAUA,EAAM,OAClB,CACF,CCvDO,SAAS6jB,GACd7jB,EACyB,CAEzB,MADI,IAAE,QAASA,IAAUA,EAAM,MAAW,QACtC,EAAE,QAASA,IAAUA,EAAM,MAAW,OAE5C,CAEO,SAAS8jB,GAAuB9iB,EAA2B,CACzD,OAAA+iB,GAA4B/iB,CAAW,CAChD,CAEgB,SAAA+iB,GACd/iB,EACAkB,EACgB,CAChB,OAAIlB,GAAQ,KACHA,EAEF,CACL,IAAKA,EAAK,IACV,IAAKA,EAAK,IACV,aACEA,EAAK,eAAoB,KAAO,OAAYA,EAAK,aACrD,CACF,CAEO,SAASgjB,GAAqBhjB,EAA2B,CACvD,OAAAijB,GAA0BjjB,EAAM,EAAK,CAC9C,CAEgB,SAAAijB,GACdjkB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,IAAKA,EAAM,IACX,IAAKA,EAAM,IACX,cAAeA,EAAM,YACvB,CACF,CC4BO,MAAMkkB,GAAkC,CAC7C,KAAM,OACN,UAAW,YACX,aAAc,cAChB,EAOO,SAASC,GAAwBnkB,EAAuC,CAG7E,MAFI,IAAE,YAAaA,IAAUA,EAAM,UAAe,QAC9C,EAAE,YAAaA,IAAUA,EAAM,UAAe,QAC9C,EAAE,YAAaA,IAAUA,EAAM,UAAe,OAEpD,CAEO,SAASokB,GAAsBpjB,EAA0B,CACvD,OAAAqjB,GAA2BrjB,CAAW,CAC/C,CAEgB,SAAAqjB,GACdrjB,EACAkB,EACe,CACf,OAAIlB,GAAQ,KACHA,EAEF,CACL,MACEA,EAAK,OAAY,KAAO,OAAYiI,EAAqBjI,EAAK,KAAQ,EACxE,SACEA,EAAK,UAAe,KAChB,OACAuI,EAAyBvI,EAAK,QAAW,EAC/C,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,GAAIA,EAAK,IAAS,KAAO,OAAYA,EAAK,GAC1C,QAAUA,EAAK,QAA0B,IAAI8iB,EAAsB,EACnE,QAAU9iB,EAAK,QAA0B,IAAI8iB,EAAsB,EACnE,QAASV,GAA2BpiB,EAAK,OAAU,EACnD,eACEA,EAAK,iBAAsB,KACvB,OACAqH,EAAuBrH,EAAK,eAAkB,EACpD,gBACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,gBACxD,CACF,CAEO,SAASsjB,GAAoBtjB,EAA0B,CACrD,OAAAujB,GAAyBvjB,EAAM,EAAK,CAC7C,CAEgB,SAAAujB,GACdvkB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,MAA0BA,EAAM,MAChC,SAAiCA,EAAM,SACvC,gBAAiBA,EAAM,eACvB,GAAIA,EAAM,GACV,QAAUA,EAAM,QAA0B,IAAIgkB,EAAoB,EAClE,QAAUhkB,EAAM,QAA0B,IAAIgkB,EAAoB,EAClE,QAAkChkB,EAAM,QACxC,gBAAiBuI,EAAqBvI,EAAM,cAAiB,EAC7D,iBAAkBA,EAAM,eAC1B,CACF,CCxJO,SAASwkB,GAAkBxkB,EAAiC,CAC1D,MAAA,EACT,CAEO,SAASykB,GAAgBzjB,EAAoB,CAC3C,OAAA0jB,GAAqB1jB,CAAW,CACzC,CAEgB,SAAA0jB,GACd1jB,EACAkB,EACS,CACT,OAAIlB,GAAQ,KACHA,EAEF,CACL,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,IAChD,CACF,CAEO,SAAS2jB,GAAc3jB,EAAoB,CACzC,OAAA4jB,GAAmB5jB,EAAM,EAAK,CACvC,CAEgB,SAAA4jB,GACd5kB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,KAAMA,EAAM,KACZ,KAAMA,EAAM,IACd,CACF,CCgBO,SAAS6kB,GACd7kB,EACyB,CAKzB,MAJI,IAAE,YAAaA,IAAUA,EAAM,UAAe,QAC9C,EAAE,YAAaA,IAAUA,EAAM,UAAe,QAC9C,EAAE,qBAAsBA,IAAUA,EAAM,mBAAwB,QAEhE,EAAE,UAAWA,IAAUA,EAAM,QAAa,OAEhD,CAEO,SAAS8kB,GAAuB9jB,EAA2B,CACzD,OAAA+jB,GAA4B/jB,CAAW,CAChD,CAEgB,SAAA+jB,GACd/jB,EACAkB,EACgB,CAChB,OAAIlB,GAAQ,KACHA,EAEF,CACL,GAAIA,EAAK,IAAS,KAAO,OAAYA,EAAK,GAC1C,QAAUA,EAAK,QAA0B,IAAI8P,CAAkB,EAC/D,QAAU9P,EAAK,QAA0B,IAAI8P,CAAkB,EAC/D,iBAAkB9P,EAAK,mBACvB,SACEA,EAAK,UAAe,KAChB,OACCA,EAAK,SAA2B,IAAIyjB,EAAe,EAC1D,MAAOlE,GAAyBvf,EAAK,KAAQ,CAC/C,CACF,CAEO,SAASgkB,GAAqBhkB,EAA2B,CACvD,OAAAikB,GAA0BjkB,EAAM,EAAK,CAC9C,CAEgB,SAAAikB,GACdjlB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,GAAIA,EAAM,GACV,QAAUA,EAAM,QAA0B,IAAIgR,CAAgB,EAC9D,QAAUhR,EAAM,QAA0B,IAAIgR,CAAgB,EAC9D,mBAAoBhR,EAAM,iBAC1B,SACEA,EAAM,UAAe,KACjB,OACCA,EAAM,SAA2B,IAAI2kB,EAAa,EACzD,MAA8B3kB,EAAM,KACtC,CACF,CC7CO,MAAMklB,GAAwC,CACnD,KAAM,OACN,UAAW,YACX,aAAc,cAChB,EAOO,SAASC,GACdnlB,EAC8B,CAC9B,MAAI,IAAE,cAAeA,IAAUA,EAAM,YAAiB,OAExD,CAEO,SAASolB,GAA4BpkB,EAAgC,CACnE,OAAAqkB,GAAiCrkB,CAAW,CACrD,CAEgB,SAAAqkB,GACdrkB,EACAkB,EACqB,CACrB,OAAIlB,GAAQ,KACHA,EAEF,CACL,MACEA,EAAK,OAAY,KAAO,OAAYiI,EAAqBjI,EAAK,KAAQ,EACxE,SACEA,EAAK,UAAe,KAChB,OACAuI,EAAyBvI,EAAK,QAAW,EAC/C,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,UAAYA,EAAK,UAA4B,IAAI8P,CAAkB,EACnE,QACE9P,EAAK,SAAc,KACf,OACAoQ,GAAqBpQ,EAAK,OAAU,EAC1C,eACEA,EAAK,iBAAsB,KACvB,OACAqH,EAAuBrH,EAAK,eAAkB,EACpD,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,OACtD,CACF,CAEO,SAASskB,GAA0BtkB,EAAgC,CACjE,OAAAukB,GAA+BvkB,EAAM,EAAK,CACnD,CAEgB,SAAAukB,GACdvlB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,MAA0BA,EAAM,MAChC,SAAiCA,EAAM,SACvC,gBAAiBA,EAAM,eACvB,UAAYA,EAAM,UAA4B,IAAIgR,CAAgB,EAClE,QAA4BhR,EAAM,QAClC,gBAAiBuI,EAAqBvI,EAAM,cAAiB,EAC7D,QAASA,EAAM,OACjB,CACF,CCjCO,MAAMwlB,GAA0C,CACrD,KAAM,OACN,UAAW,YACX,aAAc,cAChB,EAOaC,GAAkC,CAC7C,KAAM,OACN,KAAM,MACR,EAOO,SAASC,GACd1lB,EACgC,CAEhC,MADI,IAAE,cAAeA,IAAUA,EAAM,YAAiB,QAClD,EAAE,YAAaA,IAAUA,EAAM,UAAe,OAEpD,CAEO,SAAS2lB,GACd3kB,EACuB,CAChB,OAAA4kB,GAAmC5kB,CAAW,CACvD,CAEgB,SAAA4kB,GACd5kB,EACAkB,EACuB,CACvB,OAAIlB,GAAQ,KACHA,EAEF,CACL,MACEA,EAAK,OAAY,KAAO,OAAYiI,EAAqBjI,EAAK,KAAQ,EACxE,SACEA,EAAK,UAAe,KAChB,OACAuI,EAAyBvI,EAAK,QAAW,EAC/C,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,mBACEA,EAAK,qBAA0B,KAC3B,OACAA,EAAK,oBACX,kBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,QACEA,EAAK,SAAc,KACf,OACAgE,EAA0BhE,EAAK,OAAU,EAC/C,GAAIA,EAAK,IAAS,KAAO,OAAYA,EAAK,GAC1C,UAAYA,EAAK,UAA4B,IAAI8P,CAAkB,EACnE,QAASsS,GAA2BpiB,EAAK,OAAU,EACnD,eACEA,EAAK,iBAAsB,KACvB,OACAqH,EAAuBrH,EAAK,eAAkB,EACpD,kBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,kBACb,CACF,CAEO,SAAS6kB,GAA4B7kB,EAAkC,CACrE,OAAA8kB,GAAiC9kB,EAAM,EAAK,CACrD,CAEgB,SAAA8kB,GACd9lB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,MAA0BA,EAAM,MAChC,SAAiCA,EAAM,SACvC,gBAAiBA,EAAM,eACvB,OAAQA,EAAM,OACd,oBAAqBA,EAAM,mBAC3B,mBAAoBA,EAAM,kBAC1B,QAASkF,EAAwBlF,EAAM,OAAU,EACjD,GAAIA,EAAM,GACV,UAAYA,EAAM,UAA4B,IAAIgR,CAAgB,EAClE,QAAkChR,EAAM,QACxC,gBAAiBuI,EAAqBvI,EAAM,cAAiB,EAC7D,mBAAoBA,EAAM,iBAC5B,CACF,CCjNO,SAAS+lB,GAAoB/lB,EAAmC,CAC9D,MAAA,EACT,CAEO,SAASgmB,GAAkBhlB,EAAsB,CAC/C,OAAAilB,GAAuBjlB,CAAW,CAC3C,CAEgB,SAAAilB,GACdjlB,EACAkB,EACW,CACX,OAAIlB,GAAQ,KACHA,EAEF,CACL,SAAUA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACxD,eACEA,EAAK,mBAAwB,KAAO,OAAYA,EAAK,iBACzD,CACF,CAEO,SAASklB,GAAgBllB,EAAsB,CAC7C,OAAAmlB,GAAqBnlB,EAAM,EAAK,CACzC,CAEgB,SAAAmlB,GACdnmB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,WAAYA,EAAM,SAClB,kBAAmBA,EAAM,cAC3B,CACF,CC1BO,MAAMomB,GAAyB,CACpC,IAAK,OACL,IAAK,KACP,EAOO,SAASC,GACdrmB,EACyB,CAClB,MAAA,EACT,CAEO,SAASsmB,GAAuBtlB,EAA2B,CACzD,OAAAulB,GAA4BvlB,CAAW,CAChD,CAEgB,SAAAulB,GACdvlB,EACAkB,EACgB,CAChB,OAAIlB,GAAQ,KACHA,EAEF,CACL,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,IAChD,CACF,CAEO,SAASwlB,GAAqBxlB,EAA2B,CACvD,OAAAylB,GAA0BzlB,EAAM,EAAK,CAC9C,CAEgB,SAAAylB,GACdzmB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,MAAOA,EAAM,MACb,KAAMA,EAAM,KACZ,QAASA,EAAM,QACf,KAAMA,EAAM,IACd,CACF,CCvCO,SAAS0mB,GACd1mB,EACyB,CAClB,MAAA,EACT,CAEO,SAAS2mB,GAAuB3lB,EAA2B,CACzD,OAAA4lB,GAA4B5lB,CAAW,CAChD,CAEgB,SAAA4lB,GACd5lB,EACAkB,EACgB,CAChB,OAAIlB,GAAQ,KACHA,EAEF,CACL,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,SACEA,EAAK,UAAe,KAChB,OACCA,EAAK,SAA2B,IAAIslB,EAAsB,CACnE,CACF,CAEO,SAASO,GAAqB7lB,EAA2B,CACvD,OAAA8lB,GAA0B9lB,EAAM,EAAK,CAC9C,CAEgB,SAAA8lB,GACd9mB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,SAAUA,EAAM,SAChB,SAAUA,EAAM,SAChB,OAAQA,EAAM,OACd,MAAOA,EAAM,MACb,SACEA,EAAM,UAAe,KACjB,OACCA,EAAM,SAA2B,IAAIwmB,EAAoB,CAClE,CACF,CC7EO,MAAMO,GAA8B,CACzC,KAAM,OACN,KAAM,OACN,UAAW,YACX,WAAY,cACZ,KAAM,OACN,KAAM,MACR,EAOO,SAASC,GACdhnB,EAC8B,CACvB,MAAA,EACT,CAEO,SAASinB,GAA4BjmB,EAAgC,CACnE,OAAAkmB,GAAiClmB,CAAW,CACrD,CAEgB,SAAAkmB,GACdlmB,EACAkB,EACqB,CACrB,OAAIlB,GAAQ,KACHA,EAEF,CACL,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,IAChD,CACF,CAEO,SAASmmB,GAA0BnmB,EAAgC,CACjE,OAAAomB,GAA+BpmB,EAAM,EAAK,CACnD,CAEgB,SAAAomB,GACdpnB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,KAAMA,EAAM,KACZ,KAAMA,EAAM,IACd,CACF,CCzEO,MAAMqnB,GAAuB,CAClC,MAAO,QACP,WAAY,cACZ,MAAO,QACP,YAAa,eACb,SAAU,WACV,WAAY,cACZ,KAAM,OACN,UAAW,YACb,EAIO,SAASC,GAA+BtnB,EAAqB,CAClE,UAAWT,KAAO8nB,GAChB,GAAI,OAAO,UAAU,eAAe,KAAKA,GAAsB9nB,CAAG,GAE9D8nB,GAAqB9nB,CAAwC,IAAMS,EAE5D,MAAA,GAIN,MAAA,EACT,CAEO,SAASunB,GAA6BvmB,EAAiC,CACrE,OAAAwmB,GAAkCxmB,CAAW,CACtD,CAEgB,SAAAwmB,GACdxmB,EACAkB,EACsB,CACf,OAAAlB,CACT,CAEO,SAASymB,GACdznB,EACK,CACE,OAAAA,CACT,CAEgB,SAAA0nB,GACd1nB,EACAkC,EACsB,CACf,OAAAlC,CACT,CCDO,MAAM2nB,GAA4B,CACvC,KAAM,OACN,QAAS,WACT,OAAQ,SACR,OAAQ,SACR,MAAO,QACP,OAAQ,UACR,QAAS,WACT,KAAM,OACN,UAAW,cACX,SAAU,WACV,WAAY,aACZ,OAAQ,SACR,eAAgB,kBAChB,aAAc,eACd,eAAgB,kBAChB,WAAY,aACd,EAOO,SAASC,GACd5nB,EAC4B,CAC5B,MAAI,IAAE,SAAUA,IAAUA,EAAM,OAAY,OAE9C,CAEO,SAAS6nB,GAA0B7mB,EAA8B,CAC/D,OAAA8mB,GAA+B9mB,CAAW,CACnD,CAEgB,SAAA8mB,GACd9mB,EACAkB,EACmB,CACnB,OAAIlB,GAAQ,KACHA,EAEF,CACL,KAAMA,EAAK,KACX,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,SACEA,EAAK,UAAe,KAChB,OACAumB,GAA6BvmB,EAAK,QAAW,EACnD,WACEA,EAAK,YAAiB,KAClB,OACCA,EAAK,WAA6B,IAAIimB,EAA2B,CAC1E,CACF,CAEO,SAASc,GAAwB/mB,EAA8B,CAC7D,OAAAgnB,GAA6BhnB,EAAM,EAAK,CACjD,CAEgB,SAAAgnB,GACdhoB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,KAAMA,EAAM,KACZ,KAAMA,EAAM,KACZ,SAAqCA,EAAM,SAC3C,WACEA,EAAM,YAAiB,KACnB,OACCA,EAAM,WAA6B,IAAImnB,EAAyB,CACzE,CACF,CC1FO,SAASc,GACdjoB,EACgC,CAMhC,MAJE,IAAE,0BAA2BA,IAC7BA,EAAM,wBAA6B,QAGjC,EAAE,YAAaA,IAAUA,EAAM,UAAe,OAEpD,CAEO,SAASkoB,GACdlnB,EACuB,CAChB,OAAAmnB,GAAmCnnB,CAAW,CACvD,CAEgB,SAAAmnB,GACdnnB,EACAkB,EACuB,CACvB,OAAIlB,GAAQ,KACHA,EAEF,CACL,sBAAuBA,EAAK,sBAC5B,QAAS6mB,GAA0B7mB,EAAK,OAAU,EAClD,UACEA,EAAK,WAAgB,KACjB,OACA6mB,GAA0B7mB,EAAK,SAAY,CACnD,CACF,CAEO,SAASonB,GAA4BpnB,EAAkC,CACrE,OAAAqnB,GAAiCrnB,EAAM,EAAK,CACrD,CAEgB,SAAAqnB,GACdroB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,sBAAuBA,EAAM,sBAC7B,QAAS+nB,GAAwB/nB,EAAM,OAAU,EACjD,UAAW+nB,GAAwB/nB,EAAM,SAAY,CACvD,CACF,CC5DO,MAAMsoB,GAA8B,CACzC,GAAI,KACJ,WAAY,aACZ,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,aAAc,eACd,aAAc,eACd,UAAW,YACX,OAAQ,SACR,QAAS,UACT,QAAS,UACT,eAAgB,iBAChB,QAAS,SACX,EAOO,SAASC,GACdvoB,EAC8B,CAC9B,MAAI,IAAE,SAAUA,IAAUA,EAAM,OAAY,OAE9C,CAEO,SAASwoB,GAA4BxnB,EAAgC,CACnE,OAAAynB,GAAiCznB,CAAW,CACrD,CAEgB,SAAAynB,GACdznB,EACAkB,EACqB,CACrB,OAAIlB,GAAQ,KACHA,EAEF,CACL,KAAMA,EAAK,KACX,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,YACpD,CACF,CAEO,SAAS0nB,GAA0B1nB,EAAgC,CACjE,OAAA2nB,GAA+B3nB,EAAM,EAAK,CACnD,CAEgB,SAAA2nB,GACd3oB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,KAAMA,EAAM,KACZ,QAASA,EAAM,QACf,aAAcA,EAAM,WACtB,CACF,CCtEO,MAAM4oB,GAA0B,CACrC,KAAM,OACN,MAAO,QACP,WAAY,cACZ,MAAO,QACP,YAAa,eACb,SAAU,WACV,WAAY,cACZ,KAAM,OACN,UAAW,YACb,EAOO,SAASC,GAAmB7oB,EAAkC,CAGnE,MAFI,IAAE,gBAAiBA,IAAUA,EAAM,cAAmB,QAEtD,EAAE,UAAWA,IAAUA,EAAM,QAAa,OAEhD,CAEO,SAAS8oB,GAAiB9nB,EAAqB,CAC7C,OAAA+nB,GAAsB/nB,CAAW,CAC1C,CAEgB,SAAA+nB,GACd/nB,EACAkB,EACU,CACV,OAAIlB,GAAQ,KACHA,EAEF,CACL,YAAaA,EAAK,YAClB,MAAOA,EAAK,KACd,CACF,CAEO,SAASgoB,GAAehoB,EAAqB,CAC3C,OAAAioB,GAAoBjoB,EAAM,EAAK,CACxC,CAEgB,SAAAioB,GACdjpB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,YAAaA,EAAM,YACnB,MAAOA,EAAM,KACf,CACF,CCiBO,MAAMkpB,GAA8B,CACzC,KAAM,OACN,MAAO,QACP,WAAY,aACZ,SAAU,WACV,OAAQ,QACV,EAOO,SAASC,GACdnpB,EAC2B,CAG3B,MAFI,IAAE,aAAcA,IAAUA,EAAM,WAAgB,QAChD,EAAE,aAAcA,IAAUA,EAAM,WAAgB,QAChD,EAAE,UAAWA,IAAUA,EAAM,QAAa,OAEhD,CAEO,SAASopB,GAAyBpoB,EAA6B,CAC7D,OAAAqoB,GAA8BroB,CAAW,CAClD,CAEgB,SAAAqoB,GACdroB,EACAkB,EACkB,CAClB,OAAIlB,GAAQ,KACHA,EAEF,CACL,SAAUA,EAAK,SACf,SAAUA,EAAK,SACf,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,MAAOA,EAAK,MACZ,IAAKA,EAAK,IAAS,KAAO,OAAYA,EAAK,GAC3C,IAAKA,EAAK,KAAU,KAAO,OAAYA,EAAK,IAC5C,MACEA,EAAK,OAAY,KACb,OACCA,EAAK,MAAwB,IAAI8nB,EAAgB,EACxD,WAAY9nB,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,aACEA,EAAK,eAAoB,KAAO,OAAYA,EAAK,cACnD,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,MACpD,CACF,CAEO,SAASsoB,GAAuBtoB,EAA6B,CAC3D,OAAAuoB,GAA4BvoB,EAAM,EAAK,CAChD,CAEgB,SAAAuoB,GACdvpB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,SAAUA,EAAM,SAChB,SAAUA,EAAM,SAChB,QAASA,EAAM,QACf,MAAOA,EAAM,MACb,GAAIA,EAAM,IACV,IAAKA,EAAM,IACX,MACEA,EAAM,OAAY,KACd,OACCA,EAAM,MAAwB,IAAIgpB,EAAc,EACvD,YAAahpB,EAAM,WACnB,SAAUA,EAAM,SAChB,cAAeA,EAAM,aACrB,YAAaA,EAAM,WACnB,eAAgBA,EAAM,cACtB,OAAQA,EAAM,MAChB,CACF,CCzJO,SAASwpB,GACdxpB,EAC0B,CAQ1B,MANE,IAAE,sBAAuBA,IACzBA,EAAM,oBAAyB,QAG7B,EAAE,kBAAmBA,IAAUA,EAAM,gBAAqB,QAE1D,EAAE,kBAAmBA,IAAUA,EAAM,gBAAqB,OAGhE,CAEO,SAASypB,GAAwBzoB,EAA4B,CAC3D,OAAA0oB,GAA6B1oB,CAAW,CACjD,CAEgB,SAAA0oB,GACd1oB,EACAkB,EACiB,CACjB,OAAIlB,GAAQ,KACHA,EAEF,CACL,kBAAmBA,EAAK,oBACxB,cAAeA,EAAK,eACpB,cAAeA,EAAK,cACtB,CACF,CAEO,SAAS2oB,GAAsB3oB,EAA4B,CACzD,OAAA4oB,GAA2B5oB,EAAM,EAAK,CAC/C,CAEgB,SAAA4oB,GACd5pB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,oBAAqBA,EAAM,kBAC3B,eAAgBA,EAAM,cACtB,eAAgBA,EAAM,aACxB,CACF,CClBO,MAAM6pB,GAA2B,CACtC,KAAM,OACN,QAAS,WACT,OAAQ,SACR,OAAQ,SACR,MAAO,QACP,KAAM,OACN,OAAQ,UACR,QAAS,WACT,KAAM,OACN,UAAW,cACX,QAAS,WACT,SAAU,WACV,WAAY,aACZ,OAAQ,SACR,eAAgB,kBAChB,aAAc,eACd,eAAgB,kBAChB,WAAY,aACd,EAOO,SAASC,GACd9pB,EAC2B,CAM3B,MALI,IAAE,aAAcA,IAAUA,EAAM,WAAgB,QAChD,EAAE,kBAAmBA,IAAUA,EAAM,gBAAqB,QAE1D,EAAE,iBAAkBA,IAAUA,EAAM,eAAoB,QAExD,EAAE,SAAUA,IAAUA,EAAM,OAAY,OAE9C,CAEO,SAAS+pB,GAAyB/oB,EAA6B,CAC7D,OAAAgpB,GAA8BhpB,CAAW,CAClD,CAEgB,SAAAgpB,GACdhpB,EACAkB,EACkB,CAClB,OAAIlB,GAAQ,KACHA,EAEF,CACL,SAAUA,EAAK,SACf,YAAaA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC5D,cAAeA,EAAK,eACpB,aAAcA,EAAK,cACnB,KAAMA,EAAK,KACX,SACEA,EAAK,UAAe,KAChB,OACAumB,GAA6BvmB,EAAK,QAAW,EACnD,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,IAChD,CACF,CAEO,SAASipB,GAAuBjpB,EAA6B,CAC3D,OAAAkpB,GAA4BlpB,EAAM,EAAK,CAChD,CAEgB,SAAAkpB,GACdlqB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,SAAUA,EAAM,SAChB,YAAaA,EAAM,YACnB,eAAgBA,EAAM,cACtB,cAAeA,EAAM,aACrB,KAAMA,EAAM,KACZ,SAAqCA,EAAM,SAC3C,KAAMA,EAAM,IACd,CACF,CCpHO,SAASmqB,GACdnqB,EAC+B,CAM/B,MAJE,IAAE,0BAA2BA,IAC7BA,EAAM,wBAA6B,QAGjC,EAAE,iBAAkBA,IAAUA,EAAM,eAAoB,OAG9D,CAEO,SAASoqB,GAA6BppB,EAAiC,CACrE,OAAAqpB,GAAkCrpB,CAAW,CACtD,CAEgB,SAAAqpB,GACdrpB,EACAkB,EACsB,CACtB,OAAIlB,GAAQ,KACHA,EAEF,CACL,sBAAuBA,EAAK,sBAC5B,aAAcA,EAAK,aACnB,iBACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,gBACxD,CACF,CAEO,SAASspB,GAA2BtpB,EAAiC,CACnE,OAAAupB,GAAgCvpB,EAAM,EAAK,CACpD,CAEgB,SAAAupB,GACdvqB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,sBAAuBA,EAAM,sBAC7B,aAAcA,EAAM,aACpB,iBAAkBA,EAAM,gBAC1B,CACF,CC4EO,MAAMwqB,GAA+B,CAC1C,KAAM,OACN,MAAO,OACT,EAOaC,GAAkC,CAC7C,MAAO,QACP,OAAQ,QACV,EAOO,SAASC,GAAwB1qB,EAAuC,CAK7E,MAJI,IAAE,aAAcA,IAAUA,EAAM,WAAgB,QAChD,EAAE,aAAcA,IAAUA,EAAM,WAAgB,QAChD,EAAE,aAAcA,IAAUA,EAAM,WAAgB,QAChD,EAAE,SAAUA,IAAUA,EAAM,OAAY,QACxC,EAAE,aAAcA,IAAUA,EAAM,WAAgB,OAEtD,CAEO,SAAS2qB,GAAsB3pB,EAA0B,CACvD,OAAA4pB,GAA2B5pB,CAAW,CAC/C,CAEgB,SAAA4pB,GACd5pB,EACAkB,EACe,CACf,OAAIlB,GAAQ,KACHA,EAEF,CACL,SAAUA,EAAK,SACf,SAAUA,EAAK,SACf,SAAUA,EAAK,SACf,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,IAAKA,EAAK,KAAU,KAAO,OAAYA,EAAK,IAC5C,cACEA,EAAK,eAAoB,KAAO,OAAYA,EAAK,cACnD,aACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,KAAMA,EAAK,KACX,SAAU+oB,GAAyB/oB,EAAK,QAAW,EACnD,cACEA,EAAK,eAAoB,KACrB,OACCA,EAAK,cAAgC,IAAIooB,EAAwB,EACxE,WAAYpoB,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,oBACEA,EAAK,sBAA2B,KAC5B,OACAA,EAAK,qBACX,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,kBACEA,EAAK,mBAAwB,KACzB,OACCA,EAAK,kBAAoC,IACxCopB,EACF,EACN,mBACEppB,EAAK,oBAAyB,KAC1B,OACCA,EAAK,mBAAqC,IACzCknB,EACF,EACN,eACElnB,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,eACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,cACtD,CACF,CAEO,SAAS6pB,GAAoB7pB,EAA0B,CACrD,OAAA8pB,GAAyB9pB,EAAM,EAAK,CAC7C,CAEgB,SAAA8pB,GACd9qB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,SAAUA,EAAM,SAChB,SAAUA,EAAM,SAChB,SAAUA,EAAM,SAChB,OAAQA,EAAM,OACd,KAAMA,EAAM,KACZ,IAAKA,EAAM,IACX,cAAeA,EAAM,cACrB,aAAcA,EAAM,aACpB,MAAOA,EAAM,MACb,KAAMA,EAAM,KACZ,SAAUiqB,GAAuBjqB,EAAM,QAAW,EAClD,cACEA,EAAM,eAAoB,KACtB,OACCA,EAAM,cAAgC,IAAIspB,EAAsB,EACvE,YAAatpB,EAAM,WACnB,qBAAsBA,EAAM,oBAC5B,aAAcA,EAAM,YACpB,kBACEA,EAAM,mBAAwB,KAC1B,OACCA,EAAM,kBAAoC,IACzCsqB,EACF,EACN,mBACEtqB,EAAM,oBAAyB,KAC3B,OACCA,EAAM,mBAAqC,IAC1CooB,EACF,EACN,eAAgBpoB,EAAM,eACtB,eAAgBA,EAAM,cACxB,CACF,CCpMO,SAAS+qB,GAAuB/qB,EAAsC,CAG3E,MAFI,IAAE,aAAcA,IAAUA,EAAM,WAAgB,QAChD,EAAE,aAAcA,IAAUA,EAAM,WAAgB,QAChD,EAAE,UAAWA,IAAUA,EAAM,QAAa,OAEhD,CAEO,SAASgrB,GAAqBhqB,EAAyB,CACrD,OAAAiqB,GAA0BjqB,CAAW,CAC9C,CAEgB,SAAAiqB,GACdjqB,EACAkB,EACc,CACd,OAAIlB,GAAQ,KACHA,EAEF,CACL,SAAUA,EAAK,SACf,SAAUA,EAAK,SACf,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,MAAQA,EAAK,MAAwB,IAAI2pB,EAAqB,EAC9D,WACE3pB,EAAK,YAAiB,KAClB,OACA2lB,GAAuB3lB,EAAK,UAAa,EAC/C,aACEA,EAAK,eAAoB,KACrB,OACCA,EAAK,cAAgC,IAAIyoB,EAAuB,EACvE,OACEzoB,EAAK,QAAa,KACd,OACCA,EAAK,OAAyB,IAAIglB,EAAiB,CAC5D,CACF,CAEO,SAASkF,GAAmBlqB,EAAyB,CACnD,OAAAmqB,GAAwBnqB,EAAM,EAAK,CAC5C,CAEgB,SAAAmqB,GACdnrB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,SAAUA,EAAM,SAChB,SAAUA,EAAM,SAChB,OAAQA,EAAM,OACd,QAASA,EAAM,QACf,MAAQA,EAAM,MAAwB,IAAI6qB,EAAmB,EAC7D,WAAYhE,GAAqB7mB,EAAM,UAAa,EACpD,cACEA,EAAM,cAAmB,KACrB,OACCA,EAAM,aAA+B,IAAI2pB,EAAqB,EACrE,OACE3pB,EAAM,QAAa,KACf,OACCA,EAAM,OAAyB,IAAIkmB,EAAe,CAC3D,CACF,CCpGO,SAASkF,GAAoBprB,EAAmC,CAIrE,MAHI,IAAE,aAAcA,IAAUA,EAAM,WAAgB,QAChD,EAAE,aAAcA,IAAUA,EAAM,WAAgB,QAChD,EAAE,aAAcA,IAAUA,EAAM,WAAgB,QAChD,EAAE,SAAUA,IAAUA,EAAM,OAAY,OAE9C,CAEO,SAASqrB,GAAkBrqB,EAAsB,CAC/C,OAAAsqB,GAAuBtqB,CAAW,CAC3C,CAEgB,SAAAsqB,GACdtqB,EACAkB,EACW,CACX,OAAIlB,GAAQ,KACHA,EAEF,CACL,SAAUA,EAAK,SACf,SAAUA,EAAK,SACf,SAAUA,EAAK,SACf,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,KAAOA,EAAK,KAAuB,IAAIgqB,EAAoB,CAC7D,CACF,CAEO,SAASO,GAAgBvqB,EAAsB,CAC7C,OAAAwqB,GAAqBxqB,EAAM,EAAK,CACzC,CAEgB,SAAAwqB,GACdxrB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,SAAUA,EAAM,SAChB,SAAUA,EAAM,SAChB,SAAUA,EAAM,SAChB,OAAQA,EAAM,OACd,YAAaA,EAAM,WACnB,KAAOA,EAAM,KAAuB,IAAIkrB,EAAkB,CAC5D,CACF,CCrEO,SAASO,GAAuBzrB,EAAsC,CAE3E,MADI,IAAE,aAAcA,IAAUA,EAAM,WAAgB,QAChD,EAAE,aAAcA,IAAUA,EAAM,WAAgB,OAEtD,CAEO,SAAS0rB,GAAqB1qB,EAAyB,CACrD,OAAA2qB,GAA0B3qB,CAAW,CAC9C,CAEgB,SAAA2qB,GACd3qB,EACAkB,EACc,CACd,OAAIlB,GAAQ,KACHA,EAEF,CACL,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,SAAUA,EAAK,SACf,SAAUA,EAAK,SACf,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,IAChD,CACF,CAEO,SAAS4qB,GAAmB5qB,EAAyB,CACnD,OAAA6qB,GAAwB7qB,EAAM,EAAK,CAC5C,CAEgB,SAAA6qB,GACd7rB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,KAAMA,EAAM,KACZ,SAAUA,EAAM,SAChB,SAAUA,EAAM,SAChB,KAAMA,EAAM,IACd,CACF,CCtBO,MAAM8rB,GAA4B,CACvC,GAAI,KACJ,WAAY,aACZ,eAAgB,iBAChB,eAAgB,iBAChB,eAAgB,iBAChB,aAAc,eACd,aAAc,eACd,UAAW,YACX,OAAQ,SACR,QAAS,UACT,QAAS,UACT,eAAgB,iBAChB,QAAS,SACX,EAOO,SAASC,GACd/rB,EAC4B,CAC5B,MAAI,IAAE,SAAUA,IAAUA,EAAM,OAAY,OAE9C,CAEO,SAASgsB,GAA0BhrB,EAA8B,CAC/D,OAAAirB,GAA+BjrB,CAAW,CACnD,CAEgB,SAAAirB,GACdjrB,EACAkB,EACmB,CACnB,OAAIlB,GAAQ,KACHA,EAEF,CACL,KAAMA,EAAK,KACX,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,UACEA,EAAK,WAAgB,KACjB,OACCA,EAAK,UAA4B,IAAI0qB,EAAoB,EAChE,OACE1qB,EAAK,QAAa,KACd,OACCA,EAAK,OAAyB,IAAIqqB,EAAiB,CAC5D,CACF,CAEO,SAASa,GAAwBlrB,EAA8B,CAC7D,OAAAmrB,GAA6BnrB,EAAM,EAAK,CACjD,CAEgB,SAAAmrB,GACdnsB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,KAAMA,EAAM,KACZ,QAASA,EAAM,QACf,aAAcA,EAAM,YACpB,UACEA,EAAM,WAAgB,KAClB,OACCA,EAAM,UAA4B,IAAI4rB,EAAkB,EAC/D,OACE5rB,EAAM,QAAa,KACf,OACCA,EAAM,OAAyB,IAAIurB,EAAe,CAC3D,CACF,CCiBO,SAASa,GAAuBpsB,EAAsC,CAI3E,MAHI,IAAE,QAASA,IAAUA,EAAM,MAAW,QACtC,EAAE,UAAWA,IAAUA,EAAM,QAAa,QAC1C,EAAE,SAAUA,IAAUA,EAAM,OAAY,QACxC,EAAE,cAAeA,IAAUA,EAAM,YAAiB,OAExD,CAEO,SAASqsB,GAAqBrrB,EAAyB,CACrD,OAAAsrB,GAA0BtrB,CAAW,CAC9C,CAEgB,SAAAsrB,GACdtrB,EACAkB,EACc,CACd,OAAIlB,GAAQ,KACHA,EAEF,CACL,SACEA,EAAK,UAAe,KAChB,OACA0C,GAAmB1C,EAAK,QAAW,EACzC,kBACEA,EAAK,oBAAyB,KAC1B,OACA+C,GAA4B/C,EAAK,kBAAqB,EAC5D,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,WAAYA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WAC1D,QACEA,EAAK,SAAc,KAAO,OAAYoP,GAAgBpP,EAAK,OAAU,EACvE,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,qBACEA,EAAK,wBAA6B,KAC9B,OACAA,EAAK,uBACX,sBACEA,EAAK,yBAA8B,KAC/B,OACAA,EAAK,wBACX,IAAKA,EAAK,IACV,MAAOA,EAAK,MACZ,UACEA,EAAK,YAAiB,KAClB,OACAkU,GAAkBlU,EAAK,UAAa,EAC1C,KAAMA,EAAK,KACX,UAAW6U,GAAkB7U,EAAK,SAAY,EAC9C,QACEA,EAAK,SAAc,KACf,OACCA,EAAK,QAA0B,IAAIuU,EAAyB,CACrE,CACF,CAEO,SAASgX,GAAmBvrB,EAAyB,CACnD,OAAAwrB,GAAwBxrB,EAAM,EAAK,CAC5C,CAEgB,SAAAwrB,GACdxsB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,SAAU4D,GAAiB5D,EAAM,QAAW,EAC5C,mBAAoBiE,GAA0BjE,EAAM,iBAAoB,EACxE,gBAAiBA,EAAM,eACvB,WAAYA,EAAM,WAClB,QAASsQ,GAActQ,EAAM,OAAU,EACvC,SAAUA,EAAM,SAChB,uBAAwBA,EAAM,qBAC9B,wBAAyBA,EAAM,sBAC/B,IAAKA,EAAM,IACX,MAAOA,EAAM,MACb,WAA4BA,EAAM,UAClC,KAAMA,EAAM,KACZ,UAA2BA,EAAM,UACjC,QACEA,EAAM,SAAc,KAChB,OACCA,EAAM,QAA0B,IAAIyV,EAAuB,CACpE,CACF,CCrMO,SAASgX,GAAwBzsB,EAAuC,CAC7E,MAAI,IAAE,SAAUA,IAAUA,EAAM,OAAY,OAE9C,CAEO,SAAS0sB,GAAsB1rB,EAA0B,CACvD,OAAA2rB,GAA2B3rB,CAAW,CAC/C,CAEgB,SAAA2rB,GACd3rB,EACAkB,EACe,CACf,OAAIlB,GAAQ,KACHA,EAEF,CACL,GAAIA,EAAK,IAAS,KAAO,OAAYA,EAAK,GAC1C,KAAM8gB,GAAkB9gB,EAAK,IAAO,EACpC,WACEA,EAAK,YAAiB,KAClB,OACCA,EAAK,WAA6B,IACjCmhB,EAAA,CAEV,CACF,CAEO,SAASyK,GAAoB5rB,EAA0B,CACrD,OAAA6rB,GAAyB7rB,EAAM,EAAK,CAC7C,CAEgB,SAAA6rB,GACd7sB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,GAAIA,EAAM,GACV,KAAMgiB,GAAgBhiB,EAAM,IAAO,EACnC,WACEA,EAAM,YAAiB,KACnB,OACCA,EAAM,WAA6B,IAClCqiB,EAAA,CAEV,CACF,CCzEO,SAASyK,GAAyB9rB,EAA6B,CAC7D,OAAA+rB,GAA8B/rB,CAAW,CAClD,CAEgB,SAAA+rB,GACd/rB,EACAkB,EACkB,CAId,OAHAlB,GAAQ,MAGR,OAAOA,GAAS,SACXA,EAEL+qB,GAA4B/qB,CAAI,EAC3BirB,GAA+BjrB,CAAU,EAE9CyrB,GAAwBzrB,CAAI,EACvB2rB,GAA2B3rB,CAAU,EAGvC,CAAC,CACV,CAEO,SAASgsB,GAAuBhsB,EAAgB,CAC9C,OAAAisB,GAA4BjsB,EAAM,EAAK,CAChD,CAEgB,SAAAisB,GACdjtB,EACAkC,EAA+B,GAC1B,CAID,OAHAlC,GAAS,MAGT,OAAOA,GAAU,SACZA,EAEL+rB,GAA4B/rB,CAAK,EAC5BksB,GAAwBlsB,CAA0B,EAEvDysB,GAAwBzsB,CAAK,EACxB4sB,GAAoB5sB,CAAsB,EAG5C,CAAC,CACV,CCZO,SAASktB,GACdltB,EAC2C,CACpC,MAAA,EACT,CAEO,SAASmtB,GACdnsB,EACkC,CAC3B,OAAAosB,GAA8CpsB,CAAW,CAClE,CAEgB,SAAAosB,GACdpsB,EACAkB,EACkC,CAClC,OAAIlB,GAAQ,KACHA,EAEF,CACL,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,gBACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,aACEA,EAAK,gBAAqB,KACtB,OACAiS,EAAkBjS,EAAK,cAAiB,EAC9C,aACEA,EAAK,gBAAqB,KACtB,OACAiS,EAAkBjS,EAAK,cAAiB,CAChD,CACF,CAEO,SAASqsB,GACdrsB,EACkC,CAC3B,OAAAssB,GAA4CtsB,EAAM,EAAK,CAChE,CAEgB,SAAAssB,GACdttB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,eAAgBA,EAAM,cACtB,eAAgBA,EAAM,cACtB,aAAcA,EAAM,YACpB,iBAAkBA,EAAM,gBACxB,eAAgCA,EAAM,aACtC,eAAgCA,EAAM,YACxC,CACF,CCnBO,MAAMutB,GAA0B,CACrC,MAAO,QACP,QAAS,UACT,IAAK,MACL,aAAc,eAChB,EAOaC,GAAmC,CAC9C,KAAM,OACN,SAAU,WACV,OAAQ,QACV,EAOO,SAASC,GACdztB,EAC0B,CAE1B,MADI,IAAE,QAASA,IAAUA,EAAM,MAAW,QACtC,EAAE,QAASA,IAAUA,EAAM,MAAW,OAE5C,CAEO,SAAS0tB,GAAwB1sB,EAA4B,CAC3D,OAAA2sB,GAA6B3sB,CAAW,CACjD,CAEgB,SAAA2sB,GACd3sB,EACAkB,EACiB,CACjB,OAAIlB,GAAQ,KACHA,EAEF,CACL,IAAKA,EAAK,IACV,IAAKA,EAAK,IACV,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,iBACEA,EAAK,mBAAwB,KAAO,OAAYA,EAAK,kBACvD,oBACEA,EAAK,sBAA2B,KAC5B,OACAA,EAAK,qBACX,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,kBACEA,EAAK,qBAA0B,KAC3B,OACAA,EAAK,oBACX,oBACEA,EAAK,uBAA4B,KAC7B,OACAA,EAAK,sBACX,sBACEA,EAAK,0BAA+B,KAChC,OACAA,EAAK,yBACX,aACEA,EAAK,eAAoB,KACrB,OACAmsB,GAAyCnsB,EAAK,aAAgB,CACtE,CACF,CAEO,SAAS4sB,GAAsB5sB,EAA4B,CACzD,OAAA6sB,GAA2B7sB,EAAM,EAAK,CAC/C,CAEgB,SAAA6sB,GACd7tB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,IAAKA,EAAM,IACX,IAAKA,EAAM,IACX,KAAMA,EAAM,KACZ,QAASA,EAAM,QACf,kBAAmBA,EAAM,iBACzB,qBAAsBA,EAAM,oBAC5B,OAAQA,EAAM,OACd,gBAAiBA,EAAM,eACvB,eAAgBA,EAAM,cACtB,oBAAqBA,EAAM,kBAC3B,sBAAuBA,EAAM,oBAC7B,yBAA0BA,EAAM,sBAChC,cAAeqtB,GACbrtB,EAAM,YAAc,CAExB,CACF,CCnDO,MAAM8tB,GAAiC,CAC5C,KAAM,OACN,UAAW,YACX,aAAc,cAChB,EAOaC,GAAyB,CACpC,KAAM,OACN,KAAM,MACR,EAOO,SAASC,GAAuBhuB,EAAsC,CAE3E,MADI,IAAE,cAAeA,IAAUA,EAAM,YAAiB,QAClD,EAAE,YAAaA,IAAUA,EAAM,UAAe,OAEpD,CAEO,SAASiuB,GAAqBjtB,EAAyB,CACrD,OAAAktB,GAA0BltB,CAAW,CAC9C,CAEgB,SAAAktB,GACdltB,EACAkB,EACc,CACd,OAAIlB,GAAQ,KACHA,EAEF,CACL,MACEA,EAAK,OAAY,KAAO,OAAYiI,EAAqBjI,EAAK,KAAQ,EACxE,SACEA,EAAK,UAAe,KAChB,OACAuI,EAAyBvI,EAAK,QAAW,EAC/C,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,mBACEA,EAAK,qBAA0B,KAC3B,OACAA,EAAK,oBACX,kBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,QACEA,EAAK,SAAc,KACf,OACAgE,EAA0BhE,EAAK,OAAU,EAC/C,GAAIA,EAAK,IAAS,KAAO,OAAYA,EAAK,GAC1C,UAAYA,EAAK,UAA4B,IAAI0sB,EAAuB,EACxE,QAAStc,GAAqBpQ,EAAK,OAAU,EAC7C,eACEA,EAAK,iBAAsB,KACvB,OACAqH,EAAuBrH,EAAK,eAAkB,EACpD,iBACEA,EAAK,mBAAwB,KACzB,OACCA,EAAK,kBAAoC,IACxC0sB,EACF,EACN,gBACE1sB,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,WAAYA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WAC1D,kBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,gBACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,gBACxD,CACF,CAEO,SAASmtB,GAAmBntB,EAAyB,CACnD,OAAAotB,GAAwBptB,EAAM,EAAK,CAC5C,CAEgB,SAAAotB,GACdpuB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,MAA0BA,EAAM,MAChC,SAAiCA,EAAM,SACvC,gBAAiBA,EAAM,eACvB,OAAQA,EAAM,OACd,oBAAqBA,EAAM,mBAC3B,mBAAoBA,EAAM,kBAC1B,QAASkF,EAAwBlF,EAAM,OAAU,EACjD,GAAIA,EAAM,GACV,UAAYA,EAAM,UAA4B,IAAI4tB,EAAqB,EACvE,QAA4B5tB,EAAM,QAClC,gBAAiBuI,EAAqBvI,EAAM,cAAiB,EAC7D,kBACEA,EAAM,kBAAuB,KACzB,OACCA,EAAM,iBAAmC,IAAI4tB,EAAqB,EACzE,iBAAkB5tB,EAAM,gBACxB,WAAYA,EAAM,WAClB,mBAAoBA,EAAM,kBAC1B,iBAAkBA,EAAM,eAC1B,CACF,CCjPO,MAAMquB,GAAgC,CAC3C,MAAO,QACP,QAAS,UACT,IAAK,MACL,aAAc,eAChB,EAOO,SAASC,GACdtuB,EACgC,CAEhC,MADI,IAAE,QAASA,IAAUA,EAAM,MAAW,QACtC,EAAE,QAASA,IAAUA,EAAM,MAAW,OAE5C,CAEO,SAASuuB,GACdvtB,EACuB,CAChB,OAAAwtB,GAAmCxtB,CAAW,CACvD,CAEgB,SAAAwtB,GACdxtB,EACAkB,EACuB,CACvB,OAAIlB,GAAQ,KACHA,EAEF,CACL,IAAKA,EAAK,IACV,IAAKA,EAAK,IACV,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,IAChD,CACF,CAEO,SAASytB,GAA4BztB,EAAkC,CACrE,OAAA0tB,GAAiC1tB,EAAM,EAAK,CACrD,CAEgB,SAAA0tB,GACd1uB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,IAAKA,EAAM,IACX,IAAKA,EAAM,IACX,KAAMA,EAAM,IACd,CACF,CCnFO,MAAM2uB,GAAW,CACtB,cAAe,gBACf,cAAe,gBACf,YAAa,cACb,SAAU,WACV,WAAY,YACd,EAGO,SAASC,GAAmB5uB,EAAqB,CACtD,UAAWT,KAAOovB,GAChB,GAAI,OAAO,UAAU,eAAe,KAAKA,GAAUpvB,CAAG,GAChDovB,GAASpvB,CAA4B,IAAMS,EACtC,MAAA,GAIN,MAAA,EACT,CAEO,SAAS6uB,GAAiB7tB,EAAqB,CAC7C,OAAA8tB,GAAsB9tB,CAAW,CAC1C,CAEgB,SAAA8tB,GACd9tB,EACAkB,EACU,CACH,OAAAlB,CACT,CAEO,SAAS+tB,GAAe/uB,EAA8B,CACpD,OAAAA,CACT,CAEgB,SAAAgvB,GACdhvB,EACAkC,EACU,CACH,OAAAlC,CACT,CCxCO,MAAMivB,GAAoB,CAC/B,UAAW,aACX,WAAY,cACZ,UAAW,aACX,cAAe,kBACf,iBAAkB,qBAClB,eAAgB,mBAChB,oBAAqB,yBACrB,kBAAmB,uBACnB,mBAAoB,sBACpB,QAAS,WACT,SAAU,YACV,YAAa,eACb,WAAY,cACZ,WAAY,cACZ,eAAgB,kBAChB,yBAA0B,6BAC1B,iBAAkB,sBAClB,YAAa,eACb,mBAAoB,wBACpB,mBAAoB,wBACpB,mBAAoB,wBACpB,iBAAkB,sBAClB,eAAgB,mBAChB,gBAAiB,oBACjB,mBAAoB,uBACpB,gBAAiB,oBACjB,gBAAiB,oBACjB,OAAQ,UACR,UAAW,cACX,kBAAmB,sBACnB,mBAAoB,wBACpB,qBAAsB,0BACtB,kBAAmB,sBACnB,cAAe,kBACf,cAAe,kBACf,mBAAoB,uBACpB,aAAc,iBACd,aAAc,gBACd,YAAa,eACb,eAAgB,mBAChB,eAAgB,mBAChB,eAAgB,mBAChB,iCAAkC,uCAClC,4CACE,oDACF,0CACE,kDACF,iCAAkC,sCAClC,gCAAiC,qCACjC,gCAAiC,qCACjC,wBAAyB,6BACzB,8BAA+B,oCAC/B,gBAAiB,oBACjB,eAAgB,mBAChB,SAAU,YACV,SAAU,YACV,aAAc,iBACd,aAAc,gBACd,MAAO,QACP,iBAAkB,qBAClB,iBAAkB,qBAClB,eAAgB,mBAChB,eAAgB,mBAChB,aAAc,gBACd,YAAa,eACb,iBAAkB,qBAClB,+BAAgC,oCAChC,6BAA8B,kCAC9B,yBAA0B,8BAC1B,8BAA+B,mCACjC,EAIO,SAASC,GAA4BlvB,EAAqB,CAC/D,UAAWT,KAAO0vB,GAChB,GAAI,OAAO,UAAU,eAAe,KAAKA,GAAmB1vB,CAAG,GACzD0vB,GAAkB1vB,CAAqC,IAAMS,EACxD,MAAA,GAIN,MAAA,EACT,CAEO,SAASmvB,GAA0BnuB,EAA8B,CAC/D,OAAAouB,GAA+BpuB,CAAW,CACnD,CAEgB,SAAAouB,GACdpuB,EACAkB,EACmB,CACZ,OAAAlB,CACT,CAEO,SAASquB,GAAwBrvB,EAAuC,CACtE,OAAAA,CACT,CAEgB,SAAAsvB,GACdtvB,EACAkC,EACmB,CACZ,OAAAlC,CACT,CC9EO,MAAMuvB,GAAwC,CACnD,QAAS,UACT,QAAS,SACX,EAOO,SAASC,GACdxvB,EACsC,CAGtC,MAFI,IAAE,eAAgBA,IAAUA,EAAM,aAAkB,QAEpD,EAAE,WAAYA,IAAUA,EAAM,SAAc,OAElD,CAEO,SAASyvB,GACdzuB,EAC6B,CACtB,OAAA0uB,GAAyC1uB,CAAW,CAC7D,CAEgB,SAAA0uB,GACd1uB,EACAkB,EAC6B,CAC7B,OAAIlB,GAAQ,KACHA,EAEF,CACL,WAAaA,EAAK,WAA6B,IAC7CmuB,EACF,EACA,OAAQnuB,EAAK,MACf,CACF,CAEO,SAAS2uB,GACd3uB,EAC6B,CACtB,OAAA4uB,GAAuC5uB,EAAM,EAAK,CAC3D,CAEgB,SAAA4uB,GACd5vB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,WAAaA,EAAM,WAA6B,IAC9CqvB,EACF,EACA,OAAQrvB,EAAM,MAChB,CACF,CC6MO,MAAM6vB,GAAuB,CAClC,YAAa,eACb,MAAO,QACP,WAAY,cACZ,UAAW,YACX,KAAM,OACN,OAAQ,SACR,KAAM,OACN,WAAY,YACd,EAOaC,GAA2B,CACtC,IAAK,MACL,WAAY,aACZ,IAAK,MACL,eAAgB,kBAChB,SAAU,YACV,gBAAiB,mBACnB,EAOaC,GAA8B,CACzC,KAAM,OACN,WAAY,aACZ,OAAQ,QACV,EAOaC,GAA2B,CACtC,KAAM,OACN,MAAO,QACP,OAAQ,SACR,SAAU,UACZ,EAOaC,GAA2B,CACtC,KAAM,OACN,MAAO,QACP,KAAM,OACN,IAAK,MACL,MAAO,QACP,SAAU,YACV,QAAS,UACT,UAAW,WACb,EAOaC,GAAyB,CACpC,KAAM,OACN,OAAQ,SACR,UAAW,YACX,UAAW,WACb,EAOaC,GAAwB,CACnC,KAAM,OACN,MAAO,QACP,KAAM,OACN,KAAM,MACR,EAOO,SAASC,GAAoBpwB,EAAmC,CAC9D,MAAA,EACT,CAEO,SAASqwB,GAAkBrvB,EAAsB,CAC/C,OAAAsvB,GAAuBtvB,CAAW,CAC3C,CAEgB,SAAAsvB,GACdtvB,EACAkB,EACW,CACX,OAAIlB,GAAQ,KACHA,EAEF,CACL,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,UACEA,EAAK,YAAiB,KAClB,OACAiS,EAAkBjS,EAAK,UAAa,EAC1C,aACEA,EAAK,eAAoB,KAAO,OAAYA,EAAK,cACnD,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,gBACEA,EAAK,mBAAwB,KAAO,OAAYA,EAAK,kBACvD,cACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,eACEA,EAAK,gBAAqB,KACtB,OACA2R,EAAuB3R,EAAK,cAAiB,EACnD,IAAKA,EAAK,KAAU,KAAO,OAAYqR,GAAgBrR,EAAK,GAAM,EAClE,KAAMA,EAAK,MAAW,KAAO,OAAYA,EAAK,KAC9C,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,OAAQA,EAAK,QAAa,KAAO,OAAYA,EAAK,OAClD,WAAYA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WAC1D,qBACEA,EAAK,uBAA4B,KAC7B,OACAA,EAAK,sBACX,aACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,KAAMA,EAAK,MAAW,KAAO,OAAY+Q,GAAiB/Q,EAAK,IAAO,EACtE,WACEA,EAAK,aAAkB,KACnB,OACA6f,GAAmB7f,EAAK,WAAc,EAC5C,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,YACEA,EAAK,cAAmB,KAAO,OAAYA,EAAK,aAClD,GAAIA,EAAK,IAAS,KAAO,OAAYA,EAAK,GAC1C,MAAOA,EAAK,QAAa,KAAO,OAAYA,EAAK,OACjD,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,eACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,iBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,mBACX,cACEA,EAAK,gBAAqB,KAAO,OAAYA,EAAK,eACpD,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACzD,UAAWA,EAAK,YAAiB,KAAO,OAAYA,EAAK,WACzD,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,SAAUA,EAAK,WAAgB,KAAO,OAAYA,EAAK,UACvD,SAAUA,EAAK,UAAe,KAAO,OAAYA,EAAK,SACtD,QAASA,EAAK,SAAc,KAAO,OAAYA,EAAK,QACpD,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,QACEA,EAAK,UAAe,KAAO,OAAYiT,GAAgBjT,EAAK,QAAW,CAC3E,CACF,CAEO,SAASuvB,GAAgBvvB,EAAsB,CAC7C,OAAAwvB,GAAqBxvB,EAAM,EAAK,CACzC,CAEgB,SAAAwvB,GACdxwB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,MAAOA,EAAM,MACb,OAAQA,EAAM,OACd,MAAOA,EAAM,MACb,WAA4BA,EAAM,UAClC,cAAeA,EAAM,aACrB,YAAaA,EAAM,WACnB,kBAAmBA,EAAM,gBACzB,gBAAiBA,EAAM,cACvB,eAAqCA,EAAM,eAC3C,IAAmBA,EAAM,IACzB,KAAMA,EAAM,KACZ,QAASA,EAAM,QACf,OAAQA,EAAM,OACd,OAAQA,EAAM,OACd,WAAYA,EAAM,WAClB,sBAAuBA,EAAM,qBAC7B,eAAgBA,EAAM,aACtB,QAASA,EAAM,QACf,KAAMiS,GAAejS,EAAM,IAAO,EAClC,YAA8BA,EAAM,WACpC,aAAcA,EAAM,YACpB,gBAAiBA,EAAM,eACvB,aAAcA,EAAM,YACpB,aAAcA,EAAM,YACpB,GAAIA,EAAM,GACV,OAAQA,EAAM,MACd,eAAgBA,EAAM,cACtB,iBAAkBA,EAAM,eACxB,mBAAoBA,EAAM,iBAC1B,eAAgBA,EAAM,cACtB,WAAYA,EAAM,UAClB,WAAYA,EAAM,UAClB,gBAAiBA,EAAM,eACvB,UAAWA,EAAM,SACjB,SAAUA,EAAM,SAChB,QAASA,EAAM,QACf,YAAaA,EAAM,WACnB,YAAaA,EAAM,WACnB,YAAaA,EAAM,WACnB,SAAUmU,GAAcnU,EAAM,OAAU,CAC1C,CACF,CC7cO,SAASywB,GACdzwB,EACsC,CAC/B,MAAA,EACT,CAEO,SAAS0wB,GACd1vB,EAC6B,CACtB,OAAA2vB,GAAyC3vB,CAAW,CAC7D,CAEgB,SAAA2vB,GACd3vB,EACAkB,EAC6B,CAC7B,OAAIlB,GAAQ,KACHA,EAEF,CACL,MACEA,EAAK,OAAY,KACb,OACCA,EAAK,MAAwB,IAAIqvB,EAAiB,EACzD,OACErvB,EAAK,QAAa,KACd,OACCA,EAAK,OAAyB,IAAIoD,EAAmB,EAC5D,cACEpD,EAAK,gBAAqB,KACtB,OACCA,EAAK,eAAiC,IAAI8hB,EAAoB,EACrE,aACE9hB,EAAK,eAAoB,KAAO,OAAYA,EAAK,cACnD,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,gBACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,gBACxD,CACF,CAEO,SAAS4vB,GACd5vB,EAC6B,CACtB,OAAA6vB,GAAuC7vB,EAAM,EAAK,CAC3D,CAEgB,SAAA6vB,GACd7wB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,MACEA,EAAM,OAAY,KACd,OACCA,EAAM,MAAwB,IAAIuwB,EAAe,EACxD,OACEvwB,EAAM,QAAa,KACf,OACCA,EAAM,OAAyB,IAAIsE,EAAiB,EAC3D,eACEtE,EAAM,eAAoB,KACtB,OACCA,EAAM,cAAgC,IAAIgjB,EAAkB,EACnE,cAAehjB,EAAM,aACrB,MAAOA,EAAM,MACb,iBAAkBA,EAAM,eAC1B,CACF,CCjBO,MAAM8wB,GAAuC,CAClD,SAAU,YACV,QAAS,WACT,WAAY,cACd,EAOaC,GAA2C,CACtD,KAAM,OACN,UAAW,YACX,aAAc,cAChB,EAOO,SAASC,GACdhxB,EACiC,CACjC,MAAI,IAAE,YAAaA,IAAUA,EAAM,UAAe,OAEpD,CAEO,SAASixB,GACdjwB,EACwB,CACjB,OAAAkwB,GAAoClwB,CAAW,CACxD,CAEgB,SAAAkwB,GACdlwB,EACAkB,EACwB,CACxB,OAAIlB,GAAQ,KACHA,EAEF,CACL,GAAIA,EAAK,IAAS,KAAO,OAAYA,EAAK,GAC1C,MACEA,EAAK,OAAY,KACb,OACCA,EAAK,MAAwB,IAAI6I,CAAwB,EAChE,gBACE7I,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,QAAS2H,EAA6B3H,EAAK,OAAU,EACrD,eACEA,EAAK,iBAAsB,KACvB,OACAqH,EAAuBrH,EAAK,eAAkB,EACpD,WAAYA,EAAK,aAAkB,KAAO,OAAYA,EAAK,YAC3D,MACEA,EAAK,OAAY,KAAO,OAAYiI,EAAqBjI,EAAK,KAAQ,EACxE,SACEA,EAAK,UAAe,KAChB,OACAuI,EAAyBvI,EAAK,QAAW,EAC/C,eACEA,EAAK,iBAAsB,KAAO,OAAYA,EAAK,gBACrD,QACEA,EAAK,SAAc,KACf,OACAyuB,GAAoCzuB,EAAK,OAAU,EACzD,kBACEA,EAAK,oBAAyB,KAC1B,OACAA,EAAK,kBACb,CACF,CAEO,SAASmwB,GACdnwB,EACwB,CACjB,OAAAowB,GAAkCpwB,EAAM,EAAK,CACtD,CAEgB,SAAAowB,GACdpxB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,GAAIA,EAAM,GACV,MACEA,EAAM,OAAY,KACd,OACCA,EAAM,MAAwB,IAAI+J,CAAsB,EAC/D,iBAAkB/J,EAAM,gBACxB,QAAoCA,EAAM,QAC1C,gBAAiBuI,EAAqBvI,EAAM,cAAiB,EAC7D,YAAaA,EAAM,WACnB,MAA0BA,EAAM,MAChC,SAAiCA,EAAM,SACvC,gBAAiBA,EAAM,eACvB,QAAS2vB,GAAkC3vB,EAAM,OAAU,EAC3D,mBAAoBA,EAAM,iBAC5B,CACF,CC/HO,SAASqxB,GACdrxB,EACkC,CAC3B,MAAA,EACT,CAEO,SAASsxB,GACdtwB,EACyB,CAClB,OAAAuwB,GAAqCvwB,CAAW,CACzD,CAEgB,SAAAuwB,GACdvwB,EACAkB,EACyB,CACzB,OAAIlB,GAAQ,KACHA,EAEF,CACL,MACEA,EAAK,OAAY,KACb,OACCA,EAAK,MAAwB,IAAIqvB,EAAiB,EACzD,OACErvB,EAAK,QAAa,KACd,OACCA,EAAK,OAAyB,IAAIoD,EAAmB,EAC5D,cACEpD,EAAK,gBAAqB,KACtB,OACCA,EAAK,eAAiC,IAAI8hB,EAAoB,EACrE,aACE9hB,EAAK,eAAoB,KAAO,OAAYA,EAAK,cACnD,MAAOA,EAAK,OAAY,KAAO,OAAYA,EAAK,MAChD,gBACEA,EAAK,kBAAuB,KAAO,OAAYA,EAAK,iBACtD,GAAIA,EAAK,IAAS,KAAO,OAAYA,EAAK,GAC1C,MACEA,EAAK,OAAY,KACb,OACAuf,GAAyBvf,EAAK,KAAQ,EAC5C,eACEA,EAAK,iBAAsB,KACvB,OACCA,EAAK,gBAAkC,IACtC0vB,EAAA,CAEV,CACF,CAEO,SAASc,GACdxwB,EACyB,CAClB,OAAAywB,GAAmCzwB,EAAM,EAAK,CACvD,CAEgB,SAAAywB,GACdzxB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,MACEA,EAAM,OAAY,KACd,OACCA,EAAM,MAAwB,IAAIuwB,EAAe,EACxD,OACEvwB,EAAM,QAAa,KACf,OACCA,EAAM,OAAyB,IAAIsE,EAAiB,EAC3D,eACEtE,EAAM,eAAoB,KACtB,OACCA,EAAM,cAAgC,IAAIgjB,EAAkB,EACnE,cAAehjB,EAAM,aACrB,MAAOA,EAAM,MACb,iBAAkBA,EAAM,gBACxB,GAAIA,EAAM,GACV,MAA8BA,EAAM,MACpC,gBACEA,EAAM,gBAAqB,KACvB,OACCA,EAAM,eAAiC,IACtC4wB,EAAA,CAEV,CACF,CChJO,SAASc,GAAqB1xB,EAAoC,CAWvE,MAVI,IAAE,SAAUA,IAAUA,EAAM,OAAY,QACxC,EAAE,kBAAmBA,IAAUA,EAAM,gBAAqB,QAE1D,EAAE,cAAeA,IAAUA,EAAM,YAAiB,QAClD,EAAE,cAAeA,IAAUA,EAAM,YAAiB,QAEpD,EAAE,0BAA2BA,IAC7BA,EAAM,wBAA6B,QAInC,EAAE,0BAA2BA,IAC7BA,EAAM,wBAA6B,OAIvC,CAEO,SAAS2xB,GAAmB3wB,EAAuB,CACjD,OAAA4wB,GAAwB5wB,CAAW,CAC5C,CAEgB,SAAA4wB,GACd5wB,EACAkB,EACY,CACZ,OAAIlB,GAAQ,KACHA,EAEF,CACL,KAAMA,EAAK,MACX,cAAeA,EAAK,gBACpB,UAAWA,EAAK,WAChB,UAAWA,EAAK,UAChB,sBAAuBA,EAAK,yBAC5B,sBAAuBA,EAAK,wBAC9B,CACF,CAEO,SAAS6wB,GAAiB7wB,EAAuB,CAC/C,OAAA8wB,GAAsB9wB,EAAM,EAAK,CAC1C,CAEgB,SAAA8wB,GACd9xB,EACAkC,EAA+B,GAC1B,CACL,OAAIlC,GAAS,KACJA,EAGF,CACL,MAAOA,EAAM,KACb,gBAAiBA,EAAM,cACvB,WAAYA,EAAM,UAClB,UAAWA,EAAM,UACjB,yBAA0BA,EAAM,sBAChC,yBAA0BA,EAAM,qBAClC,CACF,CChFa,MAAA+xB,WAAsBC,CAAgB,CAKjD,MAAM,aACJC,EACA7yB,EAC8C,CAC9C,MAAM8yB,EAAuB,CAAC,EAExBC,EAAwC,CAAC,EAE/CA,EAAiB,cAAc,EAAI,mBAE/B,KAAK,eAAiB,KAAK,cAAc,SAC3CD,EAAgB,QAAa,MAAM,KAAK,cAAc,OAAO,SAAS,GAGlE,MAAAzzB,EAAW,MAAM,KAAK,QAC1B,CACE,KAAM,gBACN,OAAQ,OACR,QAAS0zB,EACT,MAAOD,EACP,KAAM9Z,GAAoB6Z,EAAkB,aAAgB,CAC9D,EACA7yB,CACF,EAEA,OAAO,IAAIgzB,EAAwB3zB,EAAWkD,GAC5C4W,GAAuB5W,CAAS,CAClC,CAAA,CAOF,MAAM,UACJswB,EAAsC,GACtC7yB,EACyB,CAElB,OAAA,MADU,MAAM,KAAK,aAAa6yB,EAAmB7yB,CAAa,GACnD,MAAM,CAAA,CAO9B,MAAM,YACJ6yB,EACA7yB,EAC0C,CACtC,GAAA6yB,EAAkB,KAAU,KAC9B,MAAM,IAAII,EACR,MACA,yEACF,EAGE,GAAAJ,EAAkB,KAAU,KAC9B,MAAM,IAAII,EACR,MACA,yEACF,EAGF,MAAMH,EAAuB,CAAC,EAE1BD,EAAkB,KAAU,OACdC,EAAA,IAASD,EAAkB,KAGzCA,EAAkB,KAAU,OACdC,EAAA,IAASD,EAAkB,KAGzCA,EAAkB,WAAgB,OACpBC,EAAA,UAAeD,EAAkB,WAGnD,MAAME,EAAwC,CAAC,EAE3C,KAAK,eAAiB,KAAK,cAAc,SAC3CD,EAAgB,QAAa,MAAM,KAAK,cAAc,OAAO,SAAS,GAGlE,MAAAzzB,EAAW,MAAM,KAAK,QAC1B,CACE,KAAM,gBACN,OAAQ,MACR,QAAS0zB,EACT,MAAOD,CACT,EACA9yB,CACF,EAEA,OAAO,IAAIgzB,EAAwB3zB,EAAWkD,GAC5CgwB,GAAmBhwB,CAAS,CAC9B,CAAA,CAOF,MAAM,SACJswB,EACA7yB,EACqB,CAEd,OAAA,MADU,MAAM,KAAK,YAAY6yB,EAAmB7yB,CAAa,GAClD,MAAM,CAAA,CAEhC,CCnEa,MAAAkzB,WAAmBN,CAAgB,CAK9C,MAAM,aACJC,EACA7yB,EACiD,CACjD,MAAM8yB,EAAuB,CAAC,EAExBC,EAAwC,CAAC,EAE/CA,EAAiB,cAAc,EAAI,mBAE/B,KAAK,eAAiB,KAAK,cAAc,SAC3CD,EAAgB,QAAa,MAAM,KAAK,cAAc,OAAO,SAAS,GAGlE,MAAAzzB,EAAW,MAAM,KAAK,QAC1B,CACE,KAAM,gBACN,OAAQ,OACR,QAAS0zB,EACT,MAAOD,EACP,KAAM1X,GAAuByX,EAAkB,gBAAmB,CACpE,EACA7yB,CACF,EAEA,OAAO,IAAIgzB,EAAwB3zB,EAAWkD,GAC5CiZ,GAA0BjZ,CAAS,CACrC,CAAA,CAOF,MAAM,UACJswB,EAA+C,GAC/C7yB,EAC4B,CAErB,OAAA,MADU,MAAM,KAAK,aAAa6yB,EAAmB7yB,CAAa,GACnD,MAAM,CAAA,CAO9B,MAAM,YACJ6yB,EACA7yB,EACqD,CACrD,MAAM8yB,EAAuB,CAAC,EAExBC,EAAwC,CAAC,EAE/CA,EAAiB,cAAc,EAAI,mBAE/B,KAAK,eAAiB,KAAK,cAAc,SAC3CD,EAAgB,QAAa,MAAM,KAAK,cAAc,OAAO,SAAS,GAGlE,MAAAzzB,EAAW,MAAM,KAAK,QAC1B,CACE,KAAM,gBACN,OAAQ,OACR,QAAS0zB,EACT,MAAOD,EACP,KAAM1S,GAAsByS,EAAkB,eAAkB,CAClE,EACA7yB,CACF,EAEA,OAAO,IAAIgzB,EAAwB3zB,EAAWkD,GAC5C6gB,GAA8B7gB,CAAS,CACzC,CAAA,CAOF,MAAM,SACJswB,EAA8C,GAC9C7yB,EACgC,CAEzB,OAAA,MADU,MAAM,KAAK,YAAY6yB,EAAmB7yB,CAAa,GAClD,MAAM,CAAA,CAO9B,MAAM,gBACJ6yB,EACA7yB,EACmD,CACnD,MAAM8yB,EAAuB,CAAC,EAExBC,EAAwC,CAAC,EAE/CA,EAAiB,cAAc,EAAI,mBAE/B,KAAK,eAAiB,KAAK,cAAc,SAC3CD,EAAgB,QAAa,MAAM,KAAK,cAAc,OAAO,SAAS,GAGlE,MAAAzzB,EAAW,MAAM,KAAK,QAC1B,CACE,KAAM,oBACN,OAAQ,OACR,QAAS0zB,EACT,MAAOD,EACP,KAAM5M,GACJ2M,EAAkB,mBAAqB,CAE3C,EACA7yB,CACF,EAEA,OAAO,IAAIgzB,EAAwB3zB,EAAWkD,GAC5CA,EAAU,IAAIoc,EAAoB,CACpC,CAAA,CAOF,MAAM,aACJkU,EAAkD,GAClD7yB,EAC8B,CAKvB,OAAA,MAJU,MAAM,KAAK,gBAC1B6yB,EACA7yB,CACF,GACsB,MAAM,CAAA,CAO9B,MAAM,kBACJ6yB,EACA7yB,EACgD,CAChD,MAAM8yB,EAAuB,CAAC,EAExBC,EAAwC,CAAC,EAE/CA,EAAiB,cAAc,EAAI,mBAE/B,KAAK,eAAiB,KAAK,cAAc,SAC3CD,EAAgB,QAAa,MAAM,KAAK,cAAc,OAAO,SAAS,GAGlE,MAAAzzB,EAAW,MAAM,KAAK,QAC1B,CACE,KAAM,sBACN,OAAQ,OACR,QAAS0zB,EACT,MAAOD,EACP,KAAMrM,GACJoM,EAAkB,qBAAuB,CAE7C,EACA7yB,CACF,EAEA,OAAO,IAAIgzB,EAAwB3zB,EAAWkD,GAC5CmrB,GAAyBnrB,CAAS,CACpC,CAAA,CAOF,MAAM,eACJswB,EAAoD,GACpD7yB,EAC2B,CAKpB,OAAA,MAJU,MAAM,KAAK,kBAC1B6yB,EACA7yB,CACF,GACsB,MAAM,CAAA,CAO9B,MAAM,SACJ6yB,EACA7yB,EACgD,CAChD,MAAM8yB,EAAuB,CAAC,EAExBC,EAAwC,CAAC,EAE/CA,EAAiB,cAAc,EAAI,mBAE/B,KAAK,eAAiB,KAAK,cAAc,SAC3CD,EAAgB,QAAa,MAAM,KAAK,cAAc,OAAO,SAAS,GAGlE,MAAAzzB,EAAW,MAAM,KAAK,QAC1B,CACE,KAAM,YACN,OAAQ,OACR,QAAS0zB,EACT,MAAOD,EACP,KAAM/D,GAAmB8D,EAAkB,YAAe,CAC5D,EACA7yB,CACF,EAEA,OAAO,IAAIgzB,EAAwB3zB,EAAWkD,GAC5CmrB,GAAyBnrB,CAAS,CACpC,CAAA,CAOF,MAAM,MACJswB,EAA2C,GAC3C7yB,EAC2B,CAEpB,OAAA,MADU,MAAM,KAAK,SAAS6yB,EAAmB7yB,CAAa,GAC/C,MAAM,CAAA,CAO9B,MAAM,sBACJ6yB,EACA7yB,EAC8C,CAC9C,MAAM8yB,EAAuB,CAAC,EAExBC,EAAwC,CAAC,EAE/CA,EAAiB,cAAc,EAAI,mBAE/B,KAAK,eAAiB,KAAK,cAAc,SAC3CD,EAAgB,QAAa,MAAM,KAAK,cAAc,OAAO,SAAS,GAGlE,MAAAzzB,EAAW,MAAM,KAAK,QAC1B,CACE,KAAM,aACN,OAAQ,OACR,QAAS0zB,EACT,MAAOD,EACP,KAAM5N,GAAoB2N,EAAkB,aAAgB,CAC9D,EACA7yB,CACF,EAEA,OAAO,IAAIgzB,EAAwB3zB,EAAWkD,GAC5CmjB,GAAuBnjB,CAAS,CAClC,CAAA,CAOF,MAAM,mBACJswB,EAA+C,GAC/C7yB,EACyB,CAKlB,OAAA,MAJU,MAAM,KAAK,sBAC1B6yB,EACA7yB,CACF,GACsB,MAAM,CAAA,CAO9B,MAAM,mBACJ6yB,EACA7yB,EACuD,CACvD,MAAM8yB,EAAuB,CAAC,EAExBC,EAAwC,CAAC,EAE/CA,EAAiB,cAAc,EAAI,mBAE/B,KAAK,eAAiB,KAAK,cAAc,SAC3CD,EAAgB,QAAa,MAAM,KAAK,cAAc,OAAO,SAAS,GAGlE,MAAAzzB,EAAW,MAAM,KAAK,QAC1B,CACE,KAAM,uBACN,OAAQ,OACR,QAAS0zB,EACT,MAAOD,EACP,KAAMf,GACJc,EAAkB,sBAAwB,CAE9C,EACA7yB,CACF,EAEA,OAAO,IAAIgzB,EAAwB3zB,EAAWkD,GAC5C2vB,GAAgC3vB,CAAS,CAC3C,CAAA,CAOF,MAAM,gBACJswB,EAAqD,GACrD7yB,EACkC,CAK3B,OAAA,MAJU,MAAM,KAAK,mBAC1B6yB,EACA7yB,CACF,GACsB,MAAM,CAAA,CAEhC,QCnPa,cAAqB4yB,CAAgB,CAKhD,MAAM,gBACJC,EACA7yB,EAC+C,CAC3C,GAAA6yB,EAAkB,MAAW,KAC/B,MAAM,IAAII,EACR,OACA,8EACF,EAGF,MAAMH,EAAuB,CAAC,EAE1BD,EAAkB,MAAW,OACfC,EAAA,KAAUD,EAAkB,MAG1CA,EAAkB,eAAoB,OACxBC,EAAA,iBAAiB,EAAID,EAAkB,eAGrDA,EAAkB,eAAoB,OACxBC,EAAA,iBAAiB,EAAID,EAAkB,eAGrDA,EAAkB,oBAAyB,OAC7BC,EAAA,uBAAuB,EACrCD,EAAkB,oBAGlBA,EAAkB,oBAAyB,OAC7BC,EAAA,uBAAuB,EACrCD,EAAkB,oBAGlBA,EAAkB,oBAAyB,OAC7BC,EAAA,uBAAuB,EACrCD,EAAkB,oBAGlBA,EAAkB,oBAAyB,OAC7BC,EAAA,uBAAuB,EACrCD,EAAkB,oBAGlBA,EAAkB,mBAAwB,OAC5BC,EAAA,qBAAqB,EACnCD,EAAkB,mBAGlBA,EAAkB,mBAAwB,OAC5BC,EAAA,qBAAqB,EACnCD,EAAkB,mBAGlBA,EAAkB,sBAA2B,OAC/BC,EAAA,wBAAwB,EACtCD,EAAkB,sBAGlBA,EAAkB,iBAAsB,OAC1BC,EAAA,kBAAkB,EAAID,EACpC,gBACC,KAAKM,EAA2B,GAAM,GAGvCN,EAAkB,aAAkB,OACtBC,EAAA,cAAc,EAAID,EAAkB,aAGlDA,EAAkB,QAAa,OACjCC,EAAgB,OAAYD,EAAkB,OAAW,KACvDM,EAA2B,GAC7B,GAGEN,EAAkB,SAAc,OAClCC,EAAgB,QAAaD,EAAkB,QAAY,KACzDM,EAA2B,GAC7B,GAGEN,EAAkB,MAAW,OACfC,EAAA,KAAUD,EAAkB,MAG1CA,EAAkB,MAAW,OACfC,EAAA,KAAUD,EAAkB,MAG9C,MAAME,EAAwC,CAAC,EAE3C,KAAK,eAAiB,KAAK,cAAc,SAC3CD,EAAgB,QAAa,MAAM,KAAK,cAAc,OAAO,SAAS,GAGlE,MAAAzzB,EAAW,MAAM,KAAK,QAC1B,CACE,KAAM,6BACN,OAAQ,MACR,QAAS0zB,EACT,MAAOD,CACT,EACA9yB,CACF,EAEA,OAAO,IAAIgzB,EAAwB3zB,EAAWkD,GAC5CqN,EAAwBrN,CAAS,CACnC,CAAA,CAOF,MAAM,aACJswB,EACA7yB,EAC0B,CAKnB,OAAA,MAJU,MAAM,KAAK,gBAC1B6yB,EACA7yB,CACF,GACsB,MAAM,CAAA,CAK9B,MAAM,kBACJ6yB,EACA7yB,EACmE,CAC/D,GAAA6yB,EAAkB,MAAW,KAC/B,MAAM,IAAII,EACR,OACA,gFACF,EAGF,MAAMH,EAAuB,CAAC,EAE1BD,EAAkB,MAAW,OACfC,EAAA,KAAUD,EAAkB,MAG1CA,EAAkB,eAAoB,OACxBC,EAAA,iBAAiB,EAAID,EAAkB,eAGrDA,EAAkB,eAAoB,OACxBC,EAAA,iBAAiB,EAAID,EAAkB,eAGrDA,EAAkB,QAAa,OACjCC,EAAgB,OAAYD,EAAkB,OAAW,KACvDM,EAA2B,GAC7B,GAGEN,EAAkB,SAAc,OAClCC,EAAgB,QAAaD,EAAkB,QAAY,KACzDM,EAA2B,GAC7B,GAGEN,EAAkB,aAAkB,OACtBC,EAAA,cAAc,EAAID,EAAkB,aAGlDA,EAAkB,iBAAsB,OAC1BC,EAAA,kBAAkB,EAAID,EACpC,gBACC,KAAKM,EAA2B,GAAM,GAGvCN,EAAkB,oBAAyB,OAC7BC,EAAA,uBAAuB,EACrCD,EAAkB,oBAGlBA,EAAkB,oBAAyB,OAC7BC,EAAA,uBAAuB,EACrCD,EAAkB,oBAGlBA,EAAkB,oBAAyB,OAC7BC,EAAA,uBAAuB,EACrCD,EAAkB,oBAGlBA,EAAkB,oBAAyB,OAC7BC,EAAA,uBAAuB,EACrCD,EAAkB,oBAGlBA,EAAkB,mBAAwB,OAC5BC,EAAA,qBAAqB,EACnCD,EAAkB,mBAGlBA,EAAkB,mBAAwB,OAC5BC,EAAA,qBAAqB,EACnCD,EAAkB,mBAGlBA,EAAkB,sBAA2B,OAC/BC,EAAA,wBAAwB,EACtCD,EAAkB,sBAGlBA,EAAkB,MAAW,OACfC,EAAA,KAAUD,EAAkB,MAG1CA,EAAkB,MAAW,OACfC,EAAA,KAAUD,EAAkB,MAG9C,MAAME,EAAwC,CAAC,EAE3C,KAAK,eAAiB,KAAK,cAAc,SAC3CD,EAAgB,QAAa,MAAM,KAAK,cAAc,OAAO,SAAS,GAGlE,MAAAzzB,EAAW,MAAM,KAAK,QAC1B,CACE,KAAM,6BACN,OAAQ,MACR,QAAS0zB,EACT,MAAOD,CACT,EACA9yB,CACF,EAEA,OAAO,IAAIgzB,EAAwB3zB,EAAWkD,GAC5CiW,EAA4CjW,CAAS,CACvD,CAAA,CAKF,MAAM,eACJswB,EACA7yB,EAC8C,CAKvC,OAAA,MAJU,MAAM,KAAK,kBAC1B6yB,EACA7yB,CACF,GACsB,MAAM,CAAA,CAO9B,MAAM,gBACJ6yB,EACA7yB,EAC+C,CAC3C,GAAA6yB,EAAkB,KAAU,KAC9B,MAAM,IAAII,EACR,MACA,6EACF,EAGF,MAAMH,EAAuB,CAAC,EAE1BD,EAAkB,KAAU,OAC9BC,EAAgB,IAASD,EAAkB,IAAQ,KACjDM,EAA2B,GAC7B,GAGEN,EAAkB,MAAW,OACfC,EAAA,KAAUD,EAAkB,MAG9C,MAAME,EAAwC,CAAC,EAE3C,KAAK,eAAiB,KAAK,cAAc,SAC3CD,EAAgB,QAAa,MAAM,KAAK,cAAc,OAAO,SAAS,GAGlE,MAAAzzB,EAAW,MAAM,KAAK,QAC1B,CACE,KAAM,sBACN,OAAQ,MACR,QAAS0zB,EACT,MAAOD,CACT,EACA9yB,CACF,EAEA,OAAO,IAAIgzB,EAAwB3zB,EAAWkD,GAC5CqN,EAAwBrN,CAAS,CACnC,CAAA,CAOF,MAAM,aACJswB,EACA7yB,EAC0B,CAKnB,OAAA,MAJU,MAAM,KAAK,gBAC1B6yB,EACA7yB,CACF,GACsB,MAAM,CAAA,CAK9B,MAAM,kBACJ6yB,EACA7yB,EACmE,CAC/D,GAAA6yB,EAAkB,KAAU,KAC9B,MAAM,IAAII,EACR,MACA,+EACF,EAGF,MAAMH,EAAuB,CAAC,EAE1BD,EAAkB,KAAU,OAC9BC,EAAgB,IAASD,EAAkB,IAAQ,KACjDM,EAA2B,GAC7B,GAGEN,EAAkB,MAAW,OACfC,EAAA,KAAUD,EAAkB,MAG9C,MAAME,EAAwC,CAAC,EAE3C,KAAK,eAAiB,KAAK,cAAc,SAC3CD,EAAgB,QAAa,MAAM,KAAK,cAAc,OAAO,SAAS,GAGlE,MAAAzzB,EAAW,MAAM,KAAK,QAC1B,CACE,KAAM,8BACN,OAAQ,MACR,QAAS0zB,EACT,MAAOD,CACT,EACA9yB,CACF,EAEA,OAAO,IAAIgzB,EAAwB3zB,EAAWkD,GAC5CiW,EAA4CjW,CAAS,CACvD,CAAA,CAKF,MAAM,eACJswB,EACA7yB,EAC8C,CAKvC,OAAA,MAJU,MAAM,KAAK,kBAC1B6yB,EACA7yB,CACF,GACsB,MAAM,CAAA,CAO9B,MAAM,WACJ6yB,EACA7yB,EAC+C,CAC3C,GAAA6yB,EAAkB,UAAe,KACnC,MAAM,IAAII,EACR,WACA,6EACF,EAGE,GAAAJ,EAAkB,UAAe,KACnC,MAAM,IAAII,EACR,WACA,6EACF,EAGF,MAAMH,EAAuB,CAAC,EAE1BD,EAAkB,UAAe,OACnBC,EAAA,WAAW,EAAID,EAAkB,UAG/CA,EAAkB,UAAe,OACnBC,EAAA,WAAW,EAAID,EAAkB,UAG/CA,EAAkB,sBAA2B,OAC/BC,EAAA,wBAAwB,EACtCD,EAAkB,sBAGlBA,EAAkB,QAAa,OACjCC,EAAgB,OAAYD,EAAkB,OAAW,KACvDM,EAA2B,GAC7B,GAGEN,EAAkB,SAAc,OAClCC,EAAgB,QAAaD,EAAkB,QAAY,KACzDM,EAA2B,GAC7B,GAGEN,EAAkB,iBAAsB,OAC1BC,EAAA,kBAAkB,EAAID,EACpC,gBACC,KAAKM,EAA2B,GAAM,GAGvCN,EAAkB,aAAkB,OACtBC,EAAA,cAAc,EAAID,EAAkB,aAGlDA,EAAkB,MAAW,OACfC,EAAA,KAAUD,EAAkB,MAG1CA,EAAkB,MAAW,OACfC,EAAA,KAAUD,EAAkB,MAG9C,MAAME,EAAwC,CAAC,EAE3C,KAAK,eAAiB,KAAK,cAAc,SAC3CD,EAAgB,QAAa,MAAM,KAAK,cAAc,OAAO,SAAS,GAGlE,MAAAzzB,EAAW,MAAM,KAAK,QAC1B,CACE,KAAM,wBACN,OAAQ,MACR,QAAS0zB,EACT,MAAOD,CACT,EACA9yB,CACF,EAEA,OAAO,IAAIgzB,EAAwB3zB,EAAWkD,GAC5CqN,EAAwBrN,CAAS,CACnC,CAAA,CAOF,MAAM,QACJswB,EACA7yB,EAC0B,CAEnB,OAAA,MADU,MAAM,KAAK,WAAW6yB,EAAmB7yB,CAAa,GACjD,MAAM,CAAA,CAK9B,MAAM,aACJ6yB,EACA7yB,EACmE,CAC/D,GAAA6yB,EAAkB,UAAe,KACnC,MAAM,IAAII,EACR,WACA,+EACF,EAGE,GAAAJ,EAAkB,UAAe,KACnC,MAAM,IAAII,EACR,WACA,+EACF,EAGF,MAAMH,EAAuB,CAAC,EAE1BD,EAAkB,UAAe,OACnBC,EAAA,WAAW,EAAID,EAAkB,UAG/CA,EAAkB,UAAe,OACnBC,EAAA,WAAW,EAAID,EAAkB,UAG/CA,EAAkB,QAAa,OACjCC,EAAgB,OAAYD,EAAkB,OAAW,KACvDM,EAA2B,GAC7B,GAGEN,EAAkB,SAAc,OAClCC,EAAgB,QAAaD,EAAkB,QAAY,KACzDM,EAA2B,GAC7B,GAGEN,EAAkB,aAAkB,OACtBC,EAAA,cAAc,EAAID,EAAkB,aAGlDA,EAAkB,iBAAsB,OAC1BC,EAAA,kBAAkB,EAAID,EACpC,gBACC,KAAKM,EAA2B,GAAM,GAGvCN,EAAkB,sBAA2B,OAC/BC,EAAA,wBAAwB,EACtCD,EAAkB,sBAGlBA,EAAkB,MAAW,OACfC,EAAA,KAAUD,EAAkB,MAG1CA,EAAkB,MAAW,OACfC,EAAA,KAAUD,EAAkB,MAG9C,MAAME,EAAwC,CAAC,EAE3C,KAAK,eAAiB,KAAK,cAAc,SAC3CD,EAAgB,QAAa,MAAM,KAAK,cAAc,OAAO,SAAS,GAGlE,MAAAzzB,EAAW,MAAM,KAAK,QAC1B,CACE,KAAM,wBACN,OAAQ,MACR,QAAS0zB,EACT,MAAOD,CACT,EACA9yB,CACF,EAEA,OAAO,IAAIgzB,EAAwB3zB,EAAWkD,GAC5CiW,EAA4CjW,CAAS,CACvD,CAAA,CAKF,MAAM,UACJswB,EACA7yB,EAC8C,CAEvC,OAAA,MADU,MAAM,KAAK,aAAa6yB,EAAmB7yB,CAAa,GACnD,MAAM,CAAA,CAO9B,MAAM,UACJ6yB,EACA7yB,EAC+C,CAC3C,GAAA6yB,EAAkB,MAAW,KAC/B,MAAM,IAAII,EACR,OACA,wEACF,EAGF,MAAMH,EAAuB,CAAC,EAE1BD,EAAkB,MAAW,OACfC,EAAA,KAAUD,EAAkB,MAG1CA,EAAkB,eAAoB,OACxBC,EAAA,iBAAiB,EAAID,EAAkB,eAGrDA,EAAkB,eAAoB,OACxBC,EAAA,iBAAiB,EAAID,EAAkB,eAGrDA,EAAkB,oBAAyB,OAC7BC,EAAA,uBAAuB,EACrCD,EAAkB,oBAGlBA,EAAkB,oBAAyB,OAC7BC,EAAA,uBAAuB,EACrCD,EAAkB,oBAGlBA,EAAkB,oBAAyB,OAC7BC,EAAA,uBAAuB,EACrCD,EAAkB,oBAGlBA,EAAkB,oBAAyB,OAC7BC,EAAA,uBAAuB,EACrCD,EAAkB,oBAGlBA,EAAkB,mBAAwB,OAC5BC,EAAA,qBAAqB,EACnCD,EAAkB,mBAGlBA,EAAkB,mBAAwB,OAC5BC,EAAA,qBAAqB,EACnCD,EAAkB,mBAGlBA,EAAkB,sBAA2B,OAC/BC,EAAA,wBAAwB,EACtCD,EAAkB,sBAGlBA,EAAkB,iBAAsB,OAC1BC,EAAA,kBAAkB,EAAID,EACpC,gBACC,KAAKM,EAA2B,GAAM,GAGvCN,EAAkB,aAAkB,OACtBC,EAAA,cAAc,EAAID,EAAkB,aAGlDA,EAAkB,QAAa,OACjCC,EAAgB,OAAYD,EAAkB,OAAW,KACvDM,EAA2B,GAC7B,GAGEN,EAAkB,SAAc,OAClCC,EAAgB,QAAaD,EAAkB,QAAY,KACzDM,EAA2B,GAC7B,GAGEN,EAAkB,MAAW,OACfC,EAAA,KAAUD,EAAkB,MAG1CA,EAAkB,MAAW,OACfC,EAAA,KAAUD,EAAkB,MAG9C,MAAME,EAAwC,CAAC,EAE3C,KAAK,eAAiB,KAAK,cAAc,SAC3CD,EAAgB,QAAa,MAAM,KAAK,cAAc,OAAO,SAAS,GAGlE,MAAAzzB,EAAW,MAAM,KAAK,QAC1B,CACE,KAAM,uBACN,OAAQ,MACR,QAAS0zB,EACT,MAAOD,CACT,EACA9yB,CACF,EAEA,OAAO,IAAIgzB,EAAwB3zB,EAAWkD,GAC5CqN,EAAwBrN,CAAS,CACnC,CAAA,CAOF,MAAM,OACJswB,EACA7yB,EAC0B,CAEnB,OAAA,MADU,MAAM,KAAK,UAAU6yB,EAAmB7yB,CAAa,GAChD,MAAM,CAAA,CAO9B,MAAM,cACJ6yB,EACA7yB,EACyD,CACzD,MAAM8yB,EAAuB,CAAC,EAExBC,EAAwC,CAAC,EAE/CA,EAAiB,cAAc,EAAI,mBAE/B,KAAK,eAAiB,KAAK,cAAc,SAC3CD,EAAgB,QAAa,MAAM,KAAK,cAAc,OAAO,SAAS,GAGlE,MAAAzzB,EAAW,MAAM,KAAK,QAC1B,CACE,KAAM,4BACN,OAAQ,OACR,QAAS0zB,EACT,MAAOD,EACP,KAAMD,EAAkB,YAAgB,IAAItlB,EAAiB,CAC/D,EACAvN,CACF,EAEA,OAAO,IAAIgzB,EAAwB3zB,EAAWkD,GAC5CA,EAAU,IAAI0N,EAA0B,CAC1C,CAAA,CAOF,MAAM,WACJ4iB,EAAuC,GACvC7yB,EACoC,CAE7B,OAAA,MADU,MAAM,KAAK,cAAc6yB,EAAmB7yB,CAAa,GACpD,MAAM,CAAA,CAO9B,MAAM,oBACJ6yB,EACA7yB,EAC+C,CAC/C,MAAM8yB,EAAuB,CAAC,EAE1BD,EAAkB,SAAc,OAClBC,EAAA,QAAaD,EAAkB,SAG7CA,EAAkB,eAAoB,OACxBC,EAAA,cAAmBD,EAAkB,eAGnDA,EAAkB,SAAc,OAClBC,EAAA,QAAaD,EAAkB,SAG7CA,EAAkB,UAAe,OACnBC,EAAA,SAAcD,EAAkB,UAG9CA,EAAkB,QAAa,OACjBC,EAAA,OAAYD,EAAkB,QAG5CA,EAAkB,QAAa,OACjBC,EAAA,OAAYD,EAAkB,QAG5CA,EAAkB,YAAiB,OACrBC,EAAA,WAAgBD,EAAkB,YAGhDA,EAAkB,SAAc,OAClBC,EAAA,QAAaD,EAAkB,SAG7CA,EAAkB,eAAoB,OACxBC,EAAA,iBAAiB,EAAID,EAAkB,eAGrDA,EAAkB,eAAoB,OACxBC,EAAA,iBAAiB,EAAID,EAAkB,eAGrDA,EAAkB,oBAAyB,OAC7BC,EAAA,uBAAuB,EACrCD,EAAkB,oBAGlBA,EAAkB,oBAAyB,OAC7BC,EAAA,uBAAuB,EACrCD,EAAkB,oBAGlBA,EAAkB,oBAAyB,OAC7BC,EAAA,uBAAuB,EACrCD,EAAkB,oBAGlBA,EAAkB,oBAAyB,OAC7BC,EAAA,uBAAuB,EACrCD,EAAkB,oBAGlBA,EAAkB,mBAAwB,OAC5BC,EAAA,qBAAqB,EACnCD,EAAkB,mBAGlBA,EAAkB,mBAAwB,OAC5BC,EAAA,qBAAqB,EACnCD,EAAkB,mBAGlBA,EAAkB,sBAA2B,OAC/BC,EAAA,wBAAwB,EACtCD,EAAkB,sBAGlBA,EAAkB,iBAAsB,OAC1BC,EAAA,kBAAkB,EAAID,EACpC,gBACC,KAAKM,EAA2B,GAAM,GAGvCN,EAAkB,aAAkB,OACtBC,EAAA,cAAc,EAAID,EAAkB,aAGlDA,EAAkB,QAAa,OACjCC,EAAgB,OAAYD,EAAkB,OAAW,KACvDM,EAA2B,GAC7B,GAGEN,EAAkB,SAAc,OAClCC,EAAgB,QAAaD,EAAkB,QAAY,KACzDM,EAA2B,GAC7B,GAGEN,EAAkB,MAAW,OACfC,EAAA,KAAUD,EAAkB,MAG1CA,EAAkB,MAAW,OACfC,EAAA,KAAUD,EAAkB,MAG9C,MAAME,EAAwC,CAAC,EAE3C,KAAK,eAAiB,KAAK,cAAc,SAC3CD,EAAgB,QAAa,MAAM,KAAK,cAAc,OAAO,SAAS,GAGlE,MAAAzzB,EAAW,MAAM,KAAK,QAC1B,CACE,KAAM,kCACN,OAAQ,MACR,QAAS0zB,EACT,MAAOD,CACT,EACA9yB,CACF,EAEA,OAAO,IAAIgzB,EAAwB3zB,EAAWkD,GAC5CqN,EAAwBrN,CAAS,CACnC,CAAA,CAOF,MAAM,iBACJswB,EAA6C,GAC7C7yB,EAC0B,CAKnB,OAAA,MAJU,MAAM,KAAK,oBAC1B6yB,EACA7yB,CACF,GACsB,MAAM,CAAA,CAK9B,MAAM,YACJ6yB,EACA7yB,EACmE,CAC/D,GAAA6yB,EAAkB,MAAW,KAC/B,MAAM,IAAII,EACR,OACA,0EACF,EAGF,MAAMH,EAAuB,CAAC,EAE1BD,EAAkB,MAAW,OACfC,EAAA,KAAUD,EAAkB,MAG1CA,EAAkB,eAAoB,OACxBC,EAAA,iBAAiB,EAAID,EAAkB,eAGrDA,EAAkB,eAAoB,OACxBC,EAAA,iBAAiB,EAAID,EAAkB,eAGrDA,EAAkB,QAAa,OACjCC,EAAgB,OAAYD,EAAkB,OAAW,KACvDM,EAA2B,GAC7B,GAGEN,EAAkB,SAAc,OAClCC,EAAgB,QAAaD,EAAkB,QAAY,KACzDM,EAA2B,GAC7B,GAGEN,EAAkB,aAAkB,OACtBC,EAAA,cAAc,EAAID,EAAkB,aAGlDA,EAAkB,iBAAsB,OAC1BC,EAAA,kBAAkB,EAAID,EACpC,gBACC,KAAKM,EAA2B,GAAM,GAGvCN,EAAkB,oBAAyB,OAC7BC,EAAA,uBAAuB,EACrCD,EAAkB,oBAGlBA,EAAkB,oBAAyB,OAC7BC,EAAA,uBAAuB,EACrCD,EAAkB,oBAGlBA,EAAkB,oBAAyB,OAC7BC,EAAA,uBAAuB,EACrCD,EAAkB,oBAGlBA,EAAkB,oBAAyB,OAC7BC,EAAA,uBAAuB,EACrCD,EAAkB,oBAGlBA,EAAkB,mBAAwB,OAC5BC,EAAA,qBAAqB,EACnCD,EAAkB,mBAGlBA,EAAkB,mBAAwB,OAC5BC,EAAA,qBAAqB,EACnCD,EAAkB,mBAGlBA,EAAkB,sBAA2B,OAC/BC,EAAA,wBAAwB,EACtCD,EAAkB,sBAGlBA,EAAkB,MAAW,OACfC,EAAA,KAAUD,EAAkB,MAG1CA,EAAkB,MAAW,OACfC,EAAA,KAAUD,EAAkB,MAG9C,MAAME,EAAwC,CAAC,EAE3C,KAAK,eAAiB,KAAK,cAAc,SAC3CD,EAAgB,QAAa,MAAM,KAAK,cAAc,OAAO,SAAS,GAGlE,MAAAzzB,EAAW,MAAM,KAAK,QAC1B,CACE,KAAM,uBACN,OAAQ,MACR,QAAS0zB,EACT,MAAOD,CACT,EACA9yB,CACF,EAEA,OAAO,IAAIgzB,EAAwB3zB,EAAWkD,GAC5CiW,EAA4CjW,CAAS,CACvD,CAAA,CAKF,MAAM,SACJswB,EACA7yB,EAC8C,CAEvC,OAAA,MADU,MAAM,KAAK,YAAY6yB,EAAmB7yB,CAAa,GAClD,MAAM,CAAA,CAEhC,ECjrCO,MAAMozB,WAAqBC,EAAa,CAAxC,aAAA,CAAA,MAAA,GAAA,SAAA,EACL,KAAA,UAAY,GAAI,CAQhB,MAAM,aACJR,EACA7yB,EAC0B,CAC1B,IAAIszB,EACFtzB,IAAkB,KACd,OACA,OAAOA,GAAkB,WACvBA,EAAc,SAAS,EACvB,KAAK,UAAUA,CAAa,EACpC,MAAMG,EAAM,KAAK,UAAU0yB,CAAiB,EAAIS,EAChD,GAAI,KAAK,MAAM,IAAInzB,CAAG,EACb,OAAA,KAAK,MAAM,IAAIA,CAAG,EAG3B,IAAI6B,EAAS,MAAM,MAAM,aAAa6wB,EAAmB7yB,CAAa,EAGlE,GAAA,KAAK,MAAM,MAAQ,GAAI,CACzB,MAAMuzB,EAAY,KAAK,MAAM,KAAK,EAAE,OAAO,MACtC,KAAA,MAAM,OAAOA,CAAS,CAAA,CAGxB,YAAA,MAAM,IAAIpzB,EAAK6B,CAAM,EACnBA,CAAA,CAEX"}